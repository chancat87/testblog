{
  "posts": [
    {
      "slot": "codeforces-round-357-div-2-solution",
      "title": "Codeforces Round #357 (Div. 2) 题解",
      "content": "\n# 前言\n\n今天吃着空，和同学打了一场 Codeforces。\n然后我吃着更空，还想写一写题解。\n~~毕竟好久没更题解了~~\n\n# A. A Good Contest\n\n## 题意概述\n\n给你$n$个人打某场 Codeforces 前后 Rating 的变化，问你是否有原来就是红名的 dalao 涨分了。\n红名的 Rating 大于等于 2400 。\n\n<!-- more -->\n\n## 思路\n\n小学题\n\n\n\n## 代码\n\n### C++\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100020\n#define ll long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=='-'&&(f=0)||(ch=getchar());\n\twhile(ch<='9'&&ch>='0')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f?x:-x;\n}\nint main(int argc, char const *argv[]) {\n\tint n = read();\n\tstring str;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> str;\n\t\tint x = read(), y = read();\n\t\tif (x >= 2400 && y > x)\n\t\t\treturn puts(\"YES\")&0;\n\t}\n\tputs(\"NO\");\n\treturn 0;\n}\n```\n\n### Java\n\n```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tString str = scan.next();\n\t\t\tint x = scan.nextInt();\n\t\t\tint y = scan.nextInt();\n\t\t\tif (x >= 2400 && y > x) {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t\tscan.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"NO\");\n\t\tscan.close();\n\t}\n}\n```\n\n### JavaScript\n\n```javascript\n;(function () {\n\tvar n = parseInt(readline())\n\n\tfor (var i = 1; i <= n; i++) {\n\t\tvar s = readline().split(' '),\n\t\t\tx = parseInt(s[1]),\n\t\t\ty = parseInt(s[2]);\n\n\t\tif (x >= 2400 && y > x)\n\t\t\treturn print(\"YES\");\n\t}\n\tprint(\"NO\");\n})();\n```\n\n### Python 3\n\n```python\nn = int(input())\ni = 1\nwhile i <= n:\n\ts, x, y = input().split(' ')\n\tx = int(x)\n\ty = int(y)\n\tif (x >= 2400) and (y > x):\n\t\tprint('YES')\n\t\texit(0)\n\ti = i+1\nprint('NO')\n```\n\n### 速度比较\n\n**由于本人没有多次试验取平均值，所以试验结果并不可靠，不过可以凑活着比一下**\n\nlanguage   |   Time\n--------   |   ---:\nC++        |  31 ms\nJava       | 140 ms\nJavaScript |  31 ms\nPython 3   |  62 ms\n\n可以看出， Java 目前是跑的最慢的。\nJavaScript 与 C++ 平分秋色。\nPython 3 则介于两者中间。\n\n总结完毕，我们来看下一题。\n\n# B. Economy Game\n\n## 题意概述\n\n给你一个数$n$，询问是否有一个三元组$(a, b, c)$满足$1234567\\*a + 123456\\*b + 1234\\*c = n$。\n\n## 思路\n\n暴力枚举即可。\n\n## 代码\n\n### C++\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100020\n#define ll long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=='-'&&(f=0)||(ch=getchar());\n\twhile(ch<='9'&&ch>='0')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f?x:-x;\n}\nint main(int argc, char const *argv[]) {\n\tll n = read();\n\tfor (ll a = 0; a <= n; a += 1234567)\n\t\tfor (ll b = 0; b+a <= n; b += 123456) {\n\t\t\tif ((n-a-b) % 1234 == 0)\n\t\t\t\treturn puts(\"YES\")&0;\n\t\t}\n\tputs(\"NO\");\n\treturn 0;\n}\n```\n\n### Java\n\n```java\nimport java.io.*;\nimport java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tscan.close();\n\t\tfor (int a = 0; a <= n; a += 1234567)\n\t\t\tfor (int b = 0; a + b <= n; b += 123456)\n\t\t\t\tif ((n - a - b) % 1234 == 0) {\n\t\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\tSystem.out.println(\"NO\"); \n\t}\n}\n```\n\n### JavaScript\n\n```javascript\n;(function () {\n\tvar n = 1 * readline()\n\tfor (var a = 0; a <= n; a += 1234567)\n\t\tfor (var b = 0; a + b <= n; b += 123456)\n\t\t\tif ((n - a - b) % 1234 === 0)\n\t\t\t\treturn print('YES');\n\tprint('NO');\n})();\n```\n\n### Python 3\n\n```python\nn = int(input())\na = 0\nwhile a <= n:\n\tb = 0\n\twhile a + b <= n:\n\t\tif (n - a - b) % 1234 == 0:\n\t\t\tprint('YES')\n\t\t\texit(0)\n\t\tb += 123456\n\ta += 1234567\nprint('NO')\n```\n\n### 比较\n\n速度\n\nLanguage   |   Time\n--------   |   ---:\nC++        |  15 ms\nJava       | 139 ms\nJavaScript |  31 ms\nPython 3   |  77 ms\n\nC++ 的优势逐渐显现了出来。\n~~我估计 Java 快要萎掉了~~\n\n这题就这样解决了，再来看下一题。\n\n# C. Heap Operations\n\n## 题意概述\n\n有一个小根堆，给你$n$个操作，要你在中间插入几个操作，使得所有的 `getMin` 操作都正确并且所有的 `removeMin` 操作都不会出错（比如给一个空集执行 `removeMin` ）。\n\n## 思路\n\n贪心。\n\n`insert x` 操作不需要处理。\n`getMin x` 操作需要把堆中所有小于$x$的元素弹出，如果堆是空或者最小值不是$x$需要`insert x`。\n`removeMin` 操作只需要单独判断一下堆是否为空即可。\n\n手写一个堆是不存在的。\n\n## 代码\n\n### C++\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100020\n#define ll long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=='-'&&(f=0)||(ch=getchar());\n\twhile(ch<='9'&&ch>='0')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f?x:-x;\n}\nvector<pair<int, int>> ans;\npriority_queue<int, vector<int>, greater<int>> q;\nstring str;\nint main(int argc, char const *argv[]) {\n\tint n = read();\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> str;\n\t\tif (str == \"removeMin\") {\n\t\t\tif (!q.size()) {\n\t\t\t\tans.push_back(make_pair(1, 1));\n\t\t\t} else {\n\t\t\t\tq.pop();\n\t\t\t}\n\t\t\tans.push_back(make_pair(3, 0));\n\t\t} else if (str == \"insert\") {\n\t\t\tint x = read();\n\t\t\tq.push(x);\n\t\t\tans.push_back(make_pair(1, x));\n\t\t} else if (str == \"getMin\") {\n\t\t\tint x = read();\n\t\t\twhile (q.size() && q.top() < x) {\n\t\t\t\tq.pop();\n\t\t\t\tans.push_back(make_pair(3, 0));\n\t\t\t}\n\t\t\tif (!q.size() || q.top() != x) {\n\t\t\t\tq.push(x);\n\t\t\t\tans.push_back(make_pair(1, x));\n\t\t\t}\n\t\t\tans.push_back(make_pair(2, x));\n\t\t}\n\t}\n\tcout << ans.size() << endl;\n\tfor (auto x : ans) {\n\t\tif (x.first == 1)\n\t\t\tcout << \"insert \" << x.second << endl;\n\t\telse if (x.first == 2)\n\t\t\tcout << \"getMin \" << x.second << endl;\n\t\telse\n\t\t\tcout << \"removeMin\" << endl;\n\t}\n\treturn 0;\n}\n```\n\n### Java\n\nJava 光荣的 TLE 了。\n我实在卡不了常数了。\n\n```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tpublic PriorityQueue <Integer> que = new PriorityQueue <> ();\n\tpublic int op[] = new int[1000020];\n\tpublic int vl[] = new int[1000020];\n\tpublic int cnt = 0;\n\tpublic Scanner scan;\n\tpublic Main (Scanner scan) {\n\t\tthis.scan = scan;\n\t}\n\tpublic void work() {\n\t\tint n = scan.nextInt();\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tString str = scan.next();\n\t\t\tif (str.equals(\"removeMin\")) {\n\t\t\t\tif (que.size() == 0) {\n\t\t\t\t\top[++cnt] = 1;\n\t\t\t\t\tvl[cnt] = 233;\n\t\t\t\t} else {\n\t\t\t\t\tque.poll();\n\t\t\t\t}\n\t\t\t\top[++cnt] = 3;\n\t\t\t} else if (str.equals(\"getMin\")) {\n\t\t\t\tint x = scan.nextInt();\n\t\t\t\twhile (que.size() > 0 && que.peek() < x) {\n\t\t\t\t\tque.poll();\n\t\t\t\t\top[++cnt] = 3;\n\t\t\t\t}\n\t\t\t\tif (que.size() == 0 || que.peek() != x) {\n\t\t\t\t\tque.add(x);\n\t\t\t\t\top[++cnt] = 1;\n\t\t\t\t\tvl[cnt] = x;\n\t\t\t\t}\n\t\t\t\top[++cnt] = 2;\n\t\t\t\tvl[cnt] = x;\n\t\t\t} else if (str.equals(\"insert\")) {\n\t\t\t\tint x = scan.nextInt();\n\t\t\t\tque.add(x);\n\t\t\t\top[++cnt] = 1;\n\t\t\t\tvl[cnt] = x;\n\t\t\t}\n\t\t}\n\t\tscan.close();\n\t\tSystem.out.println(cnt);\n\t\tfor (int i = 1; i <= cnt; i++) {\n\t\t\tif (op[i] == 1)\n\t\t\t\tSystem.out.println(\"insert \" + vl[i]);\n\t\t\telse if (op[i] == 2)\n\t\t\t\tSystem.out.println(\"getMin \" + vl[i]);\n\t\t\telse\n\t\t\t\tSystem.out.println(\"removeMin\");\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main(new Scanner(System.in));\n\t\tmain.work();\n\t}\n}\n```\n\n### JavaScript\n\nJavaScript 不存在 PriorityQueue。\n所以代码也是不存在的。\n\n### Python 3\n\n我不会用 heapq 亦或者 PriorityQueue。\n所以就放过我吧 (っTωT)っ\n\n### 比较\n\nLanguage   |     Time\n--------   |     ---:\nC++        |   904 ms\nJava       | 1000+ ms\nJavaScript |      ---\nPython 3   |      ---\n\n至此我们说明 C++ 是跑的最快的一门语言。\n\n~~Java 开和 C++ 一样的时限是要闹怎样啊。。。~~\n\n# D. Gifts by the List\n\n## 题意概述\n\n有$n$个人和$m$个父子关系，每个人都有想把礼物送给$a_i$的欲望，但是他必须把礼物送给你给出的一张名单中自上而下第一个是他的祖先的人。如果这个人不是他想送出礼物的人，他就会变得很不开心。问你有没有一个能让所有人开心的名单。没有输出 `-1` 。\n\n## 思路\n\n先 %%% lbc dalao 给我提供了思路。\n\n![momomo](/file/momomo.gif)\n\n每个人只有把礼物送给他自己或者他爸爸或者他爸爸送给的人才能保证不冲突。\n这样连边然后拓扑排序一波就搞定了。\n\n## 代码\n\n```cpp\n#include <bits/stdc++.h>\n#define N 400020\n#define ll long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=='-'&&(f=0)||(ch=getchar());\n\twhile(ch<='9'&&ch>='0')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f?x:-x;\n}\nint to[N], head[N], nxt[N], init[N], cnt, q[N];\nvoid insert(int x, int y) {\n\tto[++cnt] = y;\n\tnxt[cnt] = head[x];\n\thead[x] = cnt;\n\tinit[y]++;\n}\nint fa[N], wt[N], used[N], ans;\nvector<int> son[N];\nvoid dfs(int x) {\n\tint y = fa[x], z = wt[y];\n\tif (y) {\n\t\tif (wt[x] != z && wt[x] != y && wt[x] != x)\n\t\t\texit(puts(\"-1\") & 0);\n\t\tif (wt[x] == y)\n\t\t\tinsert(y, x);\n\t\telse if (wt[x] == z)\n\t\t\tinsert(z, x);\n\t\telse if (wt[x] == x)\n\t\t\tinsert(x, z);\n\t} else {\n\t\tif (wt[x] != x)\n\t\t\texit(puts(\"-1\") & 0);\n\t}\n\tfor (auto s : son[x])\n\t\tdfs(s);\n}\nint main(int argc, char const *argv[]) {\n\tint n = read(), m = read();\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x = read(), y = read();\n\t\tson[x].push_back(y);\n\t\tfa[y] = x;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\twt[i] = read();\n\t\tif (!used[wt[i]]) {\n\t\t\tans ++;\n\t\t\tused[wt[i]] = 1;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!fa[i]) dfs(i);\n\tint l = 0, r = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!init[i]) q[++r] = i;\n\tprintf(\"%d\\n\", ans);\n\twhile (l < r) {\n\t\tint x = q[++l];\n\t\tif (used[x])\n\t\t\tprintf(\"%d\\n\", x);\n\t\tfor (int i = head[x]; i; i = nxt[i])\n\t\t\tif (!--init[to[i]]) q[++r] = to[i];\n\t}\n\treturn 0;\n}\n```\n\n因为代码太长了，所以 Java 、 JavaScript 和 Python 3 就不打了。~~其实就是懒~~\n\n因此代码速度的比较也是不存在的。\n\n# E. Runaway to a Shadow\n\n计算几何？<span class=\"meiryo\">さようなら。</span>\n",
      "createdAt": "2017-10-10T04:19:57.000Z",
      "updatedAt": "2023-02-26T02:06:36.351Z",
      "banner": "",
      "category": "题解",
      "tags": ["javascript", "python", "java", "codeforces"],
      "pin": 0,
      "hidden": false,
      "views": 397
    },
    {
      "slot": "zjoi2018-day1",
      "title": "ZJOI2018 Day1 游记",
      "content": "\n## Day 0\n\n上午八点从学校出发，中午到。\n\n下午参加完颁奖典礼之后就打车会宾馆了。\n<span class=\"truth\" title=\"你知道的太多了\">路上竟然被人认出来了Σ(ﾟдﾟ;)</span>\n\n晚餐开封菜外卖，晚上三个人一张床。。。\n\n<!-- more -->\n\n## Day 1\n\n上午R爷讲课。除了多项式的基本听懂了。\n\n下午讲课。除了求期望基本听懂了。之后就被续掉了。\n\n<span class=\"truth\" title=\"你知道的太多了\">一觉醒来发现还在讲同一张 PPT 是什么感受</span>\n\n晚上试机，Windows 10 家庭中文版，64 位操作系统，基于 x64 的处理器，8G 内存。\n但是只有 Dev-C++ 和 GUIDE，没有 Notepad++ 差评。\n\n晚上点了烧烤外卖。定了一个《Хоп》的闹钟。\n\n## Day 2\n\n~~一大早被《Хоп》吵醒~~\n\n上午肚子很痛。估计是外卖吃坏了。Shift。\n\n下午有点好了，但是讲课多数时间属于掉线状态。\n\n<span class=\"truth\" title=\"说实话我这个角度神了\">拍了两张神图，然后就被 dt 从 AFO 群中踢了出去</span>\n<span class=\"truth\" title=\"卧槽\">吃晚饭的时候莫名其妙被 dt 抬了起来</span>\n\n晚上浪到了 11 点，为明天的爆蛋做好了铺垫。\n\n## Day 3\n\n### 上午\n\n早上 6:20 分起床。\n\n谁能告诉我解压密码最后一个感叹号是全角的是什么操作？\n\nT1 看了看不会，果断暴力建边，预计 $[0,20]$。\nT2 似乎可做的样子。应该是类似于树形 dp 的东西吧。\n考虑一个点的 $a_i$ 和他每个儿子的 size，最优答案应该是一个一个插进去的。\n然而我好像不太会写啊。。。怎么推都过不了样例。菜死了。\nT3 题面似乎有点长，骗了骗样例就不管了。\n\n### 中午\n\n出来以后据说 zyy 100+ 了？%%%zyy\n贝爷说他凉（稳）了。\n\n### 下午\n\n据说 zyy fst 了？\norz wzp rk 12\norz szb rk 14\n\n## AFO\n\n感觉都没有去年考的高了啊QAQ\n退役准备六月底的学考。\n\nAll the best.\n\n## 配图\n\n我觉得我应该配点图\n\n<details>\n  <summary>エロマンガ先生</summary>\n  <img src=\"https://i.loli.net/2018/03/21/5ab241daa2173.jpg\">\n</details>\n<details>\n  <summary>在认真学习的 ctc</summary>\n  <img src=\"https://i.loli.net/2018/03/21/5ab243092f61a.jpg\">\n</details>\n<details>\n  <summary>cogito 和 redbag</summary>\n  <p>我可不想我的 luogu 号被封<img src=\"/file/huaji.png\"></p>\n</details>\n\n",
      "createdAt": "2018-03-18T08:00:14.000Z",
      "updatedAt": "2023-02-24T21:33:05.933Z",
      "banner": "",
      "category": "游记",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 433
    },
    {
      "slot": "write-a-simple-acg-game",
      "title": "如何写一个简单的文字冒险游戏",
      "content": "\n最近很多人在问我这个问题。于是我就写篇教程冷静一下。\n\n## 准备工作\n\n- nodejs\n- npm\n- bash\n\n我们要用到的项目是 [avgjs/avg-core](https://github.com/avgjs/avg-core)。\n\n官方声明这个项目还处在 Alpha 阶段，但是我们自己玩玩还是 OK 的。\n\n<!-- more -->\n\n## 初始化\n\n```bash\n$ npm install -g avg-cli\n$ avg create mygame\n```\n\n**注意：** 一定要用 bash 来跑。\n\n## RTFM\n\n在 install 的过程中可以读一读文档，找寻有用的信息。\n\n[文档地址](https://avgjs.github.io/docs/#/zh/)\n\n我建议大家先来读一读作者写的「[设计思想](https://avgjs.github.io/docs/#/zh/inspiration)」。\n\n从文档中可以看出，avgjs 使用的是 React + StoryScript 的开发模式。\n\n- 关于 React，可以参考 [这篇文章](http://www.ruanyifeng.com/blog/2015/03/react.html)（虽然有点过时了，但是简单看一看有个基本了解就行）\n- 关于 StoryScript，可以阅读 [文档](https://avgjs.github.io/docs/#/zh/storyscript) 了解一下语法。\n\n> StoryScript 在语法上，与 BKEngine 的脚本系统颇为类似。\n> 关于其在 sublime 中的高亮，我自己写了一个。[地址](https://github.com/swwind/code/blob/master/StoryScript.sublime-syntax)\n\n## 测试\n\n我们假设这时候你已经下载好了，并且已经知道了 React 的基本知识和 StoryScript 的语法。\n\n现在我们打开一个本地端口\n\n```bash\n$ cd demogame\n$ npm run dev\n```\n\n然后程序应该会自动打开一个网页，刷新一会之后就会出现一个有四个按钮的灰色的页面。\n\n这样说明已经安装好了。\n\n## 解读模板\n\n然后我们打开 `assets/scripts/1.bks`，这个就是我们所要用到的故事脚本的入口文件。\n这个脚本在 URL 上显示为 `/story/1`。\n如果我们要改故事脚本的入口文件该怎么办呢。\n\n首先打开 `src/game.jsx`，找到第 43 行。\n\n```jsx\n<Redirect from='story' to='story/1' />\n```\n\n这里的 `Redirect` 控件是重定向用的，也就是说它将入口文件指向 `1.bks`。\n那么我们将 `story/1` 改成 `story/start` 就可以用 `start.bks` 文件来开始故事了。\n\n```jsx\n<Redirect from='story' to='story/start' />\n```\n\n下面讲几个这个使用这个模板可以使用的 StoryScript 指令。\n\n### 直接跳转剧情\n\n```storyscript\n[router push path='/story/xxx']\n```\n\n这句话的作用就是直接跳转到 `xxx.bks` 分支剧情。\n\n### 选择跳转剧情\n\n```storyscript\n[selection FL=[['way1','起床'],['way2','继续睡']]]\n```\n\n这时候画面上会出现两个按钮。\n点击「起床」会跳转到 `/story/way1` 页面，\n点击「继续睡」会跳转到 `/story/way2` 页面。\n\n\n> 如果你对按钮的样式不爽，可以到 `src/components/Selection.jsx` 中更改第 6 至 11 行。\n\n\n## 导出\n\n```bash\n$ avg publish\n```\n\n然后导出的文件全部放在 `dist/` 里面，你可以将其放到任何地方。\n\n### 放到 hexo 博客里\n\n把 `dist/` 文件夹里面的文件全部复制到 `blog/source/game/` 文件夹内。\n然后在博客配置文件里面找到 `skip_render` 这一项。\n然后这么写：\n\n```yaml\nskip_render:\n  - game/**/*.*\n```\n\n然后直接 `hexo clean && hexo d -g` 就行啦。\n~~但是我怀疑你服务商的网速可能不行~~\n\n### 导出 exe 文件\n\n这你可能需要使用一个叫做 [eletronjs](https://electronjs.org/) 的项目。\n\n具体自己折腾吧。\n\n<span class=\"truth\">其实这是个馊主意</span>\n<span class=\"truth\">因为这玩意生成的 exe 文件贼 JB 大</span>\n<span class=\"truth\"><del>我怀疑他们是直接扔了一个 chromium 进去</del></span>\n\n\n\n",
      "createdAt": "2018-03-28T12:59:05.000Z",
      "updatedAt": "2023-02-28T16:09:17.268Z",
      "banner": "",
      "category": "颓废",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 596
    },
    {
      "slot": "arch-install",
      "title": "Arch Linux 的安装和开发环境的配置",
      "content": "\nArch Linux 是我目前觉得最好用的 linux 操作系统。本文讲一讲 Arch Linux 的安装过程和一些坑。\n\n<img src=\"https://wiki.archlinux.org/extensions/ArchLinux/modules/archnavbar/archlogo.svg?29b1c\" />\n\n本文主要学习自 [官方的安装教程(EN)](https://wiki.archlinux.org/index.php/installation_guide)\n\n<!-- more -->\n\n**前排警告：如果要装双系统，先装 Windows 10。**\n\n# 烧镜像\n\n**假设现在你在 Windows 7/10 系统上**\n\n首先下载镜像文件（`archlinux-xxxx.xx.xx-x86_64.iso`）。\n国内为了追求速度，可以到清华大学开源软件镜像站（TUNA）下载。\n\n<https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/>\n\n当然也可以用其他的镜像网站，关系不大。\n下载完成后记得效验一下 md5 hash 值。\n\n下载完成后，我们需要使用 [Rufus](https://rufus.ie/) 软件进行 U 盘的烧制。\n过程过于简单，不讲。\n\n烧完之后重启电脑，进 BIOS 选择 U 盘启动，然后静静地等待 Arch Linux 启动。\n\n# 安装到磁盘\n\nArch Linux Live 默认使用 zsh 作为 shell，也就是说我们可以自由地使用 Tab 补全机制。\n\n## 联网\n\n第一个要解决的问题是联网。\n\n1. **我能 ping 通 baidu.com**\n\n   那你什么也不用做\n\n2. **我有 Wifi 可以连**\n\n   ```bash\n   wifi-menu\n   ```\n\n3. **我有网线插着**\n\n   首先找到你的设备名字\n\n   ```bash\n   ip addr\n   ```\n\n   你应该能找到一个名字长得像 `enpXsX` 的设备，把它记下来。\n\n   ```bash\n   vim /etc/systemd/network/20-wired.network\n   ```\n\n   ```plain\n   [Match]\n   Name=enpXsX\n\n   [Network]\n   Address=192.168.0.xx/24\n   Gateway=192.168.0.1\n   ```\n\n   具体 IP 地址和网关请自行询问路由器。\n\n   ```bash\n   vim /etc/systemd/resolved.conf\n   ```\n\n   ```plain\n   [Resolve]\n   DNS=202.96.207.28\n   # 这是绍兴的 DNS 服务器\n   # 你也可以用 Google 的 8.8.8.8\n   ```\n\n   修改完毕后\n\n   ```bash\n   rm -f /etc/resolv.conf\n   ln -s /etc/systemd/resolved.conf /etc/resolv.conf\n\n   systemctl disable dhcpcd@enpXsX.service\n   systemctl start systemd-networkd.service\n   systemctl start systemd-resolved.service\n   ```\n\n   等待若干秒之后再尝试 `ping baidu.com`，如果不行应该是你 ip 地址什么的填错了。\n\n### 更改 pacman 镜像（可选）\n\n```bash\nvim /etc/pacman.d/mirrorlist\n```\n\n将不要用的镜像地址用 `#` 注释掉即可。\n建议使用 TUNA 的镜像。\n\n## 准备磁盘空间\n\n使用 `fdisk -l` 查看磁盘情况，使用 `cfdisk /dev/sda` 来编辑磁盘分区。\n\n> 如果你电脑有什么找阿的硬盘保护系统，直接把它搞掉免除后患。\n> 要搞掉硬盘保护系统，推荐直接全盘格式化，简单粗暴而最行之有效。\n>\n> ```bash\n> parted /dev/sda\n> ```\n>\n> ```plain\n> GNU Parted 3.2\n> Using /dev/sda\n> Welcome to GNU Parted! Type 'help' to view a list of commands.\n> (parted)\n> ```\n>\n> 输入 `mklabel`，然后会跳出提示，此时输入 `gpt` 然后回车。\n> 输入 `quit` 退出 `parted`。\n\n你需要三个分区：\n\n1. 主分区，可以设的大一点，分区类型选择 `Linux extended`。(`/dev/sdaX`)\n2. Swap 分区，一般是 RAM 的两倍大小（？），分区类型选择 `Linux swap / Solaris`。(`/dev/sdaY`)\n3. EFI 引导分区，300 MB 左右，分区类型选择 `EFI System`。(`/dev/sdaZ`)（可能已经存在了）\n\n在 `cfdisk` 中划分好之后，需要格式化分区。\n\n```bash\nmkfs.ext4 /dev/sdaX # 格式化主分区\nmkswap /dev/sdaY # 格式化 swap 分区\nswapon /dev/sdaY\n```\n\n注意，如果你已经存在一个 `EFI` 分区，则不需要格式化，否则使用以下命令格式化。\n\n``` bash\nmkfs.fat /dev/sdaZ\n```\n\n## 安装系统\n\n先 mount 分区。\n\n```bash\nmount /dev/sdaX /mnt\nmkdir /mnt/boot\nmount /dev/sdaZ /mnt/boot\n```\n\n使用 `pacstrap` 安装基本软件包。\n\n```bash\npacstrap /mnt base base-devel\n```\n\n接着生成 fstab 文件。\n\n```bash\ngenfstab -U /mnt >> /mnt/etc/fstab\n```\n\n### chroot\n\n等待安装完成后使用 `arch-chroot /mnt` 进入新系统。\n\n> 如果你是用 `wifi-menu` 联网的，请在这时安装下面两个包：\n> \n> ```bash\n> pacman -S dialog wpa_supplicant\n> ```\n> 如果不是，请及时安装 dhcpcd 或者 NetworkManager。\n> \n> <span class=\"truth\" title=\"mdzz\">我因为这两个包的缺失重启了两三次。。。</span>\n\n接下来我们要做一些简单的设置。\n\n```bash\n# 设置时区\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n# 更新时间\nhwclock --systohc\n\n# 语言设置\nvim /etc/locale.gen # 将需要的语言去掉注释\nlocale-gen # 生成\n# 选择默认语言\necho \"LANG=en_US.UTF-8\" > /etc/locale.conf\n```\n\n### 写引导\n\n**注意这一步非常重要。**\n\n现在应该还在 `chroot` 里面。\n\n```bash\npacman -S grub os-prober\ngrub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub\n```\n\n注意看一下 `/boot/` 里面有没有 vmlinuz-linux 以及 initramfs-linux，如果没有，可以使用 `pacman -S linux` 重新安装。\n\n生成主配置文件：\n\n```bash\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n\n看一看 `stdout` 的输出，`os-prober` 应该能找到电脑上所有的其他盘的系统。\n\n如果不能，则手动修复引导。\n\n注意：修改 grub 配置文件后必须**再生成一次主配置文件**，最后再退出 `chroot` 并 `reboot`。\n\n#### 修复 Windows 10 引导\n\n你现在能找到 `/boot/EFI/Microsoft/Boot/bootmgfw.efi` 这个文件。\n<span class=\"truth\">如果没有，重装 win10 吧</span>\n\n编辑 `/etc/grub.d/40_custom` 这个文件，在后面加上：\n\n```plain\nmenuentry \"Microsoft Windows 10\" {\n  insmod part_gpt\n  insmod fat\n  insmod search_fs_uuid\n  insmod chain\n  chainloader /EFI/Microsoft/Boot/bootmgfw.efi\n}\n```\n\n注意这只是一个临时的解决办法。\n也许你进去 arch 之后再 `grub-mkconfig` 一下就能找到 win10 了。\n如果是这样，那么删除这一段就行了（否则你将会看到两个 win10 的选项）。\n\n## 装机配置\n\n咕咕咕\n\n",
      "createdAt": "2019-01-17T00:52:53.000Z",
      "updatedAt": "2023-02-26T19:18:32.371Z",
      "banner": "",
      "category": "教程",
      "tags": ["archlinux"],
      "pin": 0,
      "hidden": false,
      "views": 627
    },
    {
      "slot": "number-theory",
      "title": "数论学习入门 #1",
      "content": "\n数论虽然在 NOIP 中不作深入的要求，但是在这之上的比赛就经常会有涉及到这类知识的算法题目。\n\n本文来总结整理一下一些初等的数论知识。\n\n<!-- more -->\n\n> Mathematics is the queen of the sciences—and number theory is the queen of mathematics.\n> 数学是科学的皇后，数论是数学的皇后。\n\n> ——卡尔·弗里德里希·高斯\n\n# 基本定理和性质\n\n*本文所使用的符号均参照数学选修4-6*\n\n## 质数与合数\n\n在大于 $1$ 的自然数中，除了 $1$ 和该数自身外，无法被其他自然数整除的数称为**质数**（aka. **素数**)。\n\n大于 $1$ 的自然数若不是素数，则称之为**合数**（aka. **合成数**）。\n\n**$1$ 既不是质数，也不是合数。**\n\n## 最大公约数和最小公倍数\n\n**最大公约数**（abbr. **gcd**, **g**reatest **c**ommon **d**ivisor）指能够整除多个整数的最大正整数。\n\n如果 $c$ 是 $a$ 和 $b$ 的最大公约数，我们记为 $(a, b) = c$。\n\n如果 $(a,b)=1$，那么我们称 $a$ 与 $b$ **互质**，可以记为 $a \\bot b$。\n\n**最小公倍数**（abbr. **lcm**, **l**east **c**ommon **m**ultiple）指能够被多个整数整除的最小正整数。\n\n如果 $c$ 是 $a$ 和 $b$ 的最大公约数，我们记为 $[a, b] = c$。\n\n一个大家都知道的结论：$(a, b) \\times [a, b] = ab$\n\n## 整除\n\n如果 $a$ 能够整除 $b$，我们称 $a$ 是 $b$ 的**约数**或**因子**，记为 $a \\mid b$。\n\n相反，如果 $a$ 不能够整除 $b$，我们记为 $a \\nmid b$。\n\n整除有一些优秀的性质：\n\n- $a \\mid b, b \\mid c, a \\bot b \\Rightarrow ab \\mid c$\n- $a \\mid bc, a \\bot b \\Rightarrow a \\mid c$\n- $a \\mid bc \\Rightarrow a \\mid b$ 或 $a \\mid c$\n\n正确性显然。\n\n## Sum 和 Product\n\n$$\n\\begin{aligned}\n\\sum_{i=1}^{n}a_i &= a_1 + a_2 + ... + a_n \\\\\n\\prod_{i=1}^{n}a_i &= a_1 a_2 ... a_n\n\\end{aligned}\n$$\n\n## 算数基本定理\n\n设 $n>1$，则 $n$ 可以分解成素数的乘积\n\n$$\nn = p_1p_2...p_k\n$$\n\n如果不计这些素数的次序，则分解式是唯一的。\n\n设 $n = p_1^{a_1}p_2^{a_2}...p_k^{a_k}$ 是 $n$ 的标准分解式，若用 $d(n)$ 表示 $n$ 的所有正约数的个数，那么\n\n$$\nd(n) = \\prod_{i=1}^{k}(a_i+1)\n$$\n\n## 组合数与阶乘\n\n**组合数**（aka. **二项式系数**） $\\binom{n}{m}$ 表示从 $n$ 个本质不同的物品中选出 $m$ 个物品的方案数（不计选择的顺序）。\n\n$$\n\\binom{n}{m} = \\frac{n!}{(n-m)!m!}\n$$\n\n其中\n\n$$\nn!=\\begin{cases}1,&n=0 \\\\\n\\prod_{i=1}^{n}i,&n>0\n\\end{cases}\n$$\n\n于是我们有递推式：\n\n$$\n\\binom{n}{m} = \\binom{n-1}{m} + \\binom{n-1}{m-1}\n$$\n\n**二项式定理**：\n\n$$\n(x+y)^n = \\sum_{i=0}^{n}\\binom{n}{i}x^{n-i}y^i\n$$\n\n## 同余\n\n如果 $a$ 和 $b$ 对 $p$ 的余数相等，那么我们记为 $a \\equiv b \\pmod p$\n\n# 数论函数\n\n## 积性函数\n\n如果 $f(x)$ 是积性函数，那么对于 $\\forall a, b \\in N, a \\bot b$，满足 $f(ab) = f(a)f(b)$。\n\n下面是一些常见的积性函数：\n\n- $\\sigma_k(n) = \\sum_{d|n}d^k$\n- $d(n)=\\sigma_0(n)$ 表示 $n$ 的正因子个数\n- $\\sigma(n)=\\sigma_1(n)$ 表示 $n$ 的所有正因子的和\n- $id_k(n)=n^k$\n- $l(n)=id_0(n)=1$\n- $id(n)=id_1(n)=n$\n- $\\varepsilon(n)=\\begin{cases}1,&n=1\\\\\\\\0,&n>1\\end{cases}$\n\n## 欧拉函数\n\n<div style=\"float:right;text-align:center;\"><img src=\"/file/euler.jpg\"><p style=\"margin:0\">莱昂哈德·欧拉(1707-1783)</p></div>\n\n**欧拉函数** $\\varphi(n)$ 表示小于 $n$ 的与 $n$ 互质的正整数的个数。\n\n设 $n = p_1^{a_1}p_2^{a_2}...p_k^{a_k}$，则有\n\n$$\n\\varphi(n) = n(1-\\frac{1}{p_1})(1-\\frac{1}{p_2})...(1-\\frac{1}{p_k})\n$$\n\n$\\varphi(n)$ 是**积性函数**。\n\n**欧拉定理**：设 $m>1$，$(a,m)=1$，则 $a^{\\varphi(m)} \\equiv 1 \\pmod m$\n\n如果 $m$ 是质数，那么 $\\varphi(m)=m-1$，这其实就是费马小定理了。\n\n**费马小定理**：设 $p$ 是质数，$(a,p)=1$，则 $a^{p-1} \\equiv 1 \\pmod p$\n\n**扩展欧拉定理**：\n\n$$\na^b \\equiv \\begin{cases}\na^{b \\mod \\varphi(p)}, &a \\bot p \\\\\na^{b} , &b < \\varphi(p) \\\\\na^{b \\mod \\varphi(p) + \\varphi(p)}, &b \\geq \\varphi(p)\n\\end{cases} \\pmod p\n$$\n\n<div style=\"float:right;text-align:center;\"><img src=\"/file/fermat.jpg\"><p style=\"margin:0\">皮埃尔·德·费马(1601-1665)</p></div>\n\n> **例题：** 求 $2^{2^{2^{...}}} \\mod p$\n\n> **解：** 令 $S = 2^{2^{2^{...}}}$\n> 则 $S \\equiv 2^{S \\mod \\varphi(p) + \\varphi(p)} \\pmod p$\n> 于是问题可以转化为求 $S$ 对 $\\varphi(p)$ 取模的子问题。\n> 以此类推，当模数为 $1$ 时，答案显然为 $0$。\n> 然后递归回去计算即可。\n\n## 莫比乌斯函数\n\n莫比乌斯函数 $\\mu(n)$ 的定义：\n\n设 $n = p_1^{a_1}p_2^{a_2}...p_k^{a_k}$，\n\n$$\n\\mu(n) = \\begin{cases}\n1, & n = 1 \\\\\\\\\n(-1) ^ k, & \\forall a_i=1 \\\\\\\\\n0, & \\exists a_i \\gt 1\n\\end{cases}\n$$\n\n$\\mu(n)$ 也是积性函数。\n\n$$\n\\sum_{d \\mid n}\\mu(d) = \\varepsilon(n)\n$$\n\n# 算法\n\n## 狄利克雷卷积\n\n<div style=\"float:right;text-align:center;\"><img src=\"/file/dirichlet.jpg\"><p style=\"margin:0\">约翰·彼得·古斯塔夫·勒<br>热纳·狄利克雷<br>(1805-1859)</p></div>\n\n如果 $f(n),g(n)$ 是数论函数，令 $h = f \\times g$，则\n\n$$\nh(n)=\\sum_{d|n}f(d)g(\\frac{n}{d})\n$$\n\n狄利克雷卷积有一些优秀的性质：\n\n- 交换律 $f\\times g=g\\times f$\n- 结合律 $(f\\times g)\\times h=f\\times (g\\times h)$\n- 分配律 $f\\times (g+h)=f\\times g+f\\times h$\n- 单位元 $\\varepsilon\\times f=f$\n\n一些公式：\n\n- $d(n)=\\sum_{d|n}l(d) \\Leftrightarrow d = l \\times l$\n- $\\sigma(n)=\\sum_{d|n}id(d) \\Leftrightarrow \\sigma = l \\times id$\n- $\\varepsilon(n)=\\sum_{d|n}\\mu(d) \\Leftrightarrow \\varepsilon = l \\times \\mu$\n- $\\varphi(n)=\\sum_{d|n}\\mu(d)\\frac nd \\Leftrightarrow \\varphi = \\mu \\times id$\n- $n=\\sum_{d|n}\\varphi(d) \\Leftrightarrow id = l \\times \\varphi$\n\n## 莫比乌斯反演\n\n如果 $f(n),g(n)$ 是数论函数，则有\n\n$$\nf(n)=\\sum_{d \\mid n}g(d) \\Leftrightarrow g(n) = \\sum_{d \\mid n}\\mu(d)f(\\frac{n}{d})\n$$\n\n证明：\n\n$$\n\\begin{aligned}\nf &= g \\times l \\\\\nf \\times \\mu &= g \\times l \\times \\mu \\\\\nf \\times \\mu &= g \\times \\varepsilon \\\\\nf \\times \\mu &= g\n\\end{aligned}\n$$\n\n变形：\n\n$$\nf(k)=\\sum_{d=1}^{\\lfloor\\frac{n}{k}\\rfloor} g(dk) \\Rightarrow g(k) = \\sum_{d=1}^{\\lfloor\\frac{n}{k}\\rfloor} \\mu(d)f(dk)\n$$\n\n~~这怎么证啊。。。~~\n\n> **例题：**\n> 求 $(n \\leq m)$\n> \n> $$\n> \\sum_{i=1}^{n}\\sum_{j=1}^{m}[(i,j)=k]\n> $$\n\n> **解：**\n> 设\n> \n> $$\n> f(k)=\\sum_{i=1}^{n}\\sum_{j=1}^{m}[(i,j)=k] \\\\\n> g(k)=\\sum_{i=1}^{n}\\sum_{j=1}^{m}[k \\mid (i,j)]\n> $$\n> \n> 则有\n> \n> $$\n> g(k)=\\sum_{d=1}^{\\lfloor\\frac{n}{k}\\rfloor}f(dk)\n> $$\n> \n> 根据莫比乌斯反演得\n> \n> $$\n> f(k) = \\sum_{d=1}^{\\lfloor\\frac{n}{k}\\rfloor} \\mu(d)g(dk)\n> $$\n> \n> 考虑如何计算 $g(k)$，我们马上就能发现\n> \n> $$\n> g(k) = \\left\\lfloor \\frac{n}{k} \\right\\rfloor\\left\\lfloor \\frac{m}{k} \\right\\rfloor\n> $$\n> \n> 所以\n> \n> $$\n> f(k) = \\sum_{d=1}^{\\lfloor\\frac{n}{k}\\rfloor} \\mu(d)\\left\\lfloor \\frac{n}{dk} \\right\\rfloor\\left\\lfloor \\frac{m}{dk} \\right\\rfloor\n> $$\n> \n> 直接计算是 $O(n)$ 的，可以利用前缀和和分块的技巧优化到单次询问 $O(\\sqrt{n}+\\sqrt{m})$。\n\n# 总结\n\n~~如果你不知道一个公式怎么证明，那就打表~~\n~~打表找规律大法好~~\n\n文章写太长不好，剩下来的以后讲。\n下次应该会多写几道例题。\n\n~~别问我为什么退役了才写这个~~\n",
      "createdAt": "2018-12-21T09:33:26.000Z",
      "updatedAt": "2023-02-25T02:55:08.243Z",
      "banner": "",
      "category": "教程",
      "tags": ["数论"],
      "pin": 0,
      "hidden": false,
      "views": 497
    },
    {
      "slot": "how-to-use-live2d-in-hexo",
      "title": "在 hexo 博客中使用 live2d",
      "content": "\n你肯定已经在许多博客里看到过 live2d 的技术了吧。\n\n他们基本上是使用 [pixi-live2d][pixi-live2d] 或者 [hexo-helper-live2d][hexo-helper-live2d] 插件的。\n\n个人推荐使用 hexo-helper-live2d。\n\n但是这个插件有一个缺点就是只能用现有的模型。\n\n然而此时网络上的大部分模型都是打包过的 `.lpk` （Live2d Package）文件{% truth 你在想什么 %}，这样就不能愉快的换老婆了{% endtruth %}。\n\n<!-- more -->\n\n然后我们发现用来打包成 `.lpk` 文件的是一个用 Java 写的小程序：[Live2DConfigGenerator][Live2DConfigGenerator]。\n\n那么我们就试着用 [jad][jad] 来反编译一下。\n\n我们先来观赏一下里面的文件目录\n\n\t\\---com\n\t    +---google\n\t    |   \\---gson\n\t    |       |   DefaultDateTypeAdapter.java\n\t    |       |   ExclusionStrategy.java\n\t    |       |   FieldAttributes.java\n\t    |       |   FieldNamingPolicy.java\n\t    |       |   FieldNamingStrategy.java\n\t    |       |   Gson.java\n\t    |       |   GsonBuilder.java\n\t    |       |   InstanceCreator.java\n\t    |       |   JsonArray.java\n\t    |       |   JsonDeserializationContext.java\n\t    |       |   JsonDeserializer.java\n\t    |       |   JsonElement.java\n\t    |       |   JsonIOException.java\n\t    |       |   JsonNull.java\n\t    |       |   JsonObject.java\n\t    |       |   JsonParseException.java\n\t    |       |   JsonParser.java\n\t    |       |   JsonPrimitive.java\n\t    |       |   JsonSerializationContext.java\n\t    |       |   JsonSerializer.java\n\t    |       |   JsonStreamParser.java\n\t    |       |   JsonSyntaxException.java\n\t    |       |   LongSerializationPolicy.java\n\t    |       |   TreeTypeAdapter.java\n\t    |       |   TypeAdapter.java\n\t    |       |   TypeAdapterFactory.java\n\t    |       |   \n\t    |       +---annotations\n\t    |       |       Expose.java\n\t    |       |       SerializedName.java\n\t    |       |       Since.java\n\t    |       |       Until.java\n\t    |       |       \n\t    |       +---internal\n\t    |       |   |   ConstructorConstructor.java\n\t    |       |   |   Excluder.java\n\t    |       |   |   JsonReaderInternalAccess.java\n\t    |       |   |   LazilyParsedNumber.java\n\t    |       |   |   LinkedTreeMap.java\n\t    |       |   |   ObjectConstructor.java\n\t    |       |   |   Primitives.java\n\t    |       |   |   Streams.java\n\t    |       |   |   UnsafeAllocator.java\n\t    |       |   |   \n\t    |       |   \\---bind\n\t    |       |           ArrayTypeAdapter.java\n\t    |       |           CollectionTypeAdapterFactory.java\n\t    |       |           DateTypeAdapter.java\n\t    |       |           JsonTreeReader.java\n\t    |       |           JsonTreeWriter.java\n\t    |       |           MapTypeAdapterFactory.java\n\t    |       |           ObjectTypeAdapter.java\n\t    |       |           ReflectiveTypeAdapterFactory.java\n\t    |       |           SqlDateTypeAdapter.java\n\t    |       |           TimeTypeAdapter.java\n\t    |       |           TypeAdapterRuntimeTypeWrapper.java\n\t    |       |           TypeAdapters.java\n\t    |       |           \n\t    |       +---reflect\n\t    |       |       TypeToken.java\n\t    |       |       \n\t    |       \\---stream\n\t    |               JsonReader.java\n\t    |               JsonScope.java\n\t    |               JsonToken.java\n\t    |               JsonWriter.java\n\t    |               MalformedJsonException.java\n\t    |               \n\t    \\---oukaitou\n\t        \\---live2d\n\t            |   ConfigDefine.java\n\t            |   ConfigFileGenerator.java\n\t            |   JsonConfigEntity.java\n\t            |   JsonMainLveEntity.java\n\t            |   LocationStrings.java\n\t            |   LpkCreator.java\n\t            |   MainLveFileGenerator.java\n\t            |   MainWindow.java\n\t            |   \n\t            +---utils\n\t            |       ConfigFileNameFilter.java\n\t            |       FileUtils.java\n\t            |       \n\t            \\---version\n\t                    AsunaGetter.java\n\t                    BattleGirlGetter.java\n\t                    BGGetter.java\n\t                    IVersionGetter.java\n\t                    TansakuGetter.java\n\t                    VersionDefine.java\n\t                    VersionFactory.java\n\n> 以上文件树使用 `tree /f /a` 指令生成，有删改\n\n乍一看是不是很多？\n\n我们慢慢来分析。\n\n首先可以看出，`com/google` 文件夹显然是一个复制过来的 api。\n于是我们先从 `com/oukaito` 文件夹分析。\n\n通过简单的推测，程序入口应该是 `com/oukaito/live2d/MainWindow.java`。\n~~其实 jar 包里的 MANIFEST.MF 文件里就写着~~\n\n然后我们在其中找到了一个 `btnCreateLpkFileAction()` 函数，目测应该是用来生成 `.lpk` 文件的。\n\n```java\nprivate void btnCreateLpkFileAction() {\n\tFile srcFile = new File(textPath.getText());\n\tif (srcFile == null || !srcFile.exists()) {\n\t\tJOptionPane.showMessageDialog(frmLivedConfigGenerator, \"\\u65E0\\u6548\\u6587\\u4EF6\\u8DEF\\u5F84\");\n\t\treturn;\n\t}\n\tboolean success = LpkCreator.create(srcFile);\n\tif (success)\n\t\tlblInfo.setText(\"LPK\\u6587\\u4EF6\\u521B\\u5EFA\\u6210\\u529F\");\n\telse\n\t\tlblInfo.setText(\"LPK\\u6587\\u4EF6\\u521B\\u5EFA\\u5931\\u8D25\");\n}\n```\n\n~~jad 反编译的局部变量名称怎么会这么正常？以前不是 abcd 枚举下去的么。。。~~\n\n然后我们来看看 `LpkCreator.create(File)` 函数。\n\n代码有点长，但是乍一看，我发现了什么：\n\n```java\nZipOutputStream zos = new ZipOutputStream(new FileOutputStream(output));\n```\n\n难道说整个 `.lpk` 文件就是一个 zip 压缩包？\n\n改了一下后缀，右键解压，。。。。\n\n好，现在我们已经得到了一个 Live2D 模型了。\n\n让我们回到 hexo-helper-live2d 中来。\n\n---\n\n根据文档描述，使用 `$ npm install --save hexo-helper-live2d` 来安装插件。\n\n{% remark %}\n你可以使用 [淘宝镜像][npm-taobao] 来加速下载。\n或者 [使用本地代理][socks5]\n\n[npm-taobao]: https://npm.taobao.org/\n[socks5]: https://segmentfault.com/a/1190000002589144\n{% endremark %}\n\n将模型解压出来后，你将会看到两个 `.mlve` 文件和一个单独的文件夹。\n我们先假设这个单独的文件夹叫做 `sagiri`。\n\n在博客根目录上新建一个 `live2d_models` 文件夹，并将 `sagiri` 文件夹复制进去。\n\n接着打开博客的配置文件，加入以下内容\n\n```yaml\nlive2d:\n  enable: true\n  scriptFrom: local\n  model:\n    use: sagiri # 但是我永远喜欢 シュヴィ・ドーラ\n  display:\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: true\n```\n\n然后打开本地端口，你就可以看到你老婆啦！\n\n也许你会需要更多的配置以及说明，具体请参见 [官方文档][hexo-helper-live2d-docs]。\n\n最后安利一款软件。\n\nSteam 上的 [Live2DViewerEX](https://store.steampowered.com/app/616720/Live2DViewerEX/) 以及 [创意工坊](https://steamcommunity.com/app/616720/workshop/)。\n\n[pixi-live2d]: https://github.com/avgjs/pixi-live2d\n[hexo-helper-live2d]: https://github.com/EYHN/hexo-helper-live2d\n[Live2DConfigGenerator]: https://steamcommunity.com/sharedfiles/filedetails/?id=966461146\n[jad]: https://varaneckas.com/jad/\n[hexo-helper-live2d-docs]: https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md\n",
      "createdAt": "2018-03-16T10:06:01.000Z",
      "updatedAt": "2023-02-28T10:26:02.810Z",
      "banner": "",
      "category": "颓废",
      "tags": ["hexo", "live2d"],
      "pin": 0,
      "hidden": false,
      "views": 809
    },
    {
      "slot": "tensorflow",
      "title": "TensorFlow 学习笔记",
      "content": "\n~~失踪人口回归~~\n\nGoogle 的**机器学习**教程：[传送门](https://developers.google.com/machine-learning/crash-course/)。\n\n## 安装\n\n```cmd\npip3 install --upgrade tensorflow\n```\n\n<!-- more -->\n\n## 入门\n\nGoogle 的教程一直在推荐你用 `tf.estimator` 和 `pandas`，但是连个简单样例都没有，作为一个新手我一脸懵逼。\n\n那我们就去网上找可以运行的样例吧。\n\n一搜发现网上都是用 `numpy` 以及一堆和 `tf.estimator` 没有任何关系的模板。。。\n\n那就把 Google 推荐的两个东西无视掉吧，，，\n\n一个简单的 **线性回归（linear regression）** 学习模板：\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\n# 造数据\nx_data = np.float32(np.random.rand(1, 100)) # 随机 100 个输入数据\ny_data = x_data * 4.2 + 5.2 # 计算标准输出\n\n# 建模\n# - 我们已经知道这是一个一次函数了，有两个未知量 w 和 b\nw = tf.Variable(tf.zeros(1)) # 模型中一个可变的数字，初值为 0\nb = tf.Variable(tf.zeros(1)) # 同上\ny = w * x_data + b # 一次函数公式模型\n\n# 求解\n# - 设置损失（Loss）函数：误差的均方差\nloss = tf.reduce_mean(tf.square(y - y_data))\n# - 选择梯度下降的方法，0.5 是学习速率（learning rate）\noptimizer = tf.train.GradientDescentOptimizer(0.5)\n# - 迭代的目标：最小化损失函数\ntrain = optimizer.minimize(loss)\n\n# - 初始化所有全局变量\ninit = tf.global_variables_initializer()\n# - 启动图 (graph)\nsess = tf.Session()\nsess.run(init)\n\n# - 迭代，反复执行上面的最小化损失函数这一操作（train op），拟合平面\nfor step in range(0, 201):\n  sess.run(train)\n  if step % 20 == 0:\n    print(step, sess.run(w), sess.run(b))\n```\n\n输出：\n\n```text\n0 [3.9204707] [7.2580767]\n20 [3.9439363] [5.3347573]\n40 [4.1385536] [5.232337]\n60 [4.185255] [5.2077594]\n80 [4.1964617] [5.201862]\n100 [4.1991506] [5.2004466]\n120 [4.1997967] [5.2001066]\n140 [4.1999507] [5.2000256]\n160 [4.1999884] [5.200006]\n180 [4.199997] [5.2000012]\n200 [4.199997] [5.2000012]\n```\n\n可以看到程序迭代了 200 次找到了最佳拟合：$\\begin{cases}w=4.200\\\\\\\\b=5.200\\end{cases}$。\n\n------\n\n那么对有四个**特征**的线性回归模型 tensorflow 的处理效果如何呢？\n\n稍微改一下模板：\n\n```python\nx1_data = np.float32(np.random.rand(1, 100))\nx2_data = np.float32(np.random.rand(1, 100))\nx3_data = np.float32(np.random.rand(1, 100))\nx4_data = np.float32(np.random.rand(1, 100))\ny_data = x1_data * 5.2 + x2_data * 8.2 + x3_data * 9.2 + x4_data * 1.2 + 1.6\n\nw1 = tf.Variable(tf.zeros(1))\nw2 = tf.Variable(tf.zeros(1))\nw3 = tf.Variable(tf.zeros(1))\nw4 = tf.Variable(tf.zeros(1))\nb = tf.Variable(tf.zeros(1))\ny = (w1 * x1_data) + (w2 * x2_data) + (w3 * x3_data) + (w4 * x4_data) + b\n```\n\n然后我们将学习效率改成 0.2，再迭代 1000 次，可以看到以下结果：\n\n```text\n0 [2.859013] [3.4737022] [3.1260953] [2.9026427] [5.5858054]\n100 [4.828743] [7.7254896] [8.7003565] [0.9192924] [2.4783878]\n200 [5.1373687] [8.126683] [9.121572] [1.1248572] [1.7559142]\n300 [5.189195] [8.1874275] [9.186127] [1.1855505] [1.6278231]\n400 [5.198095] [8.197777] [9.1975155] [1.1973705] [1.6049733]\n500 [5.199661] [8.199602] [9.1995535] [1.1995276] [1.6008905]\n600 [5.1999393] [8.199928] [9.199921] [1.1999152] [1.6001594]\n700 [5.1999903] [8.199985] [9.199983] [1.1999859] [1.6000301]\n800 [5.1999946] [8.199988] [9.199987] [1.1999981] [1.6000166]\n900 [5.1999946] [8.199988] [9.199987] [1.1999981] [1.6000166]\n1000 [5.1999946] [8.199988] [9.199987] [1.1999981] [1.6000166]\n```\n\n可以看到学习的效果是非常好的，所得结果已经可以用来比较精准地预测数据了。\n\n注意：如果我们没有改学习效率（依然是 0.5）的话，拟合的结果将会越来越大（最后变成 nan）。\n\n这时候就要适当的调整学习效率，才能使程序在有限的时间内得到结果。\n\n关于理想的学习速率，Google 提供了一个结论：\n\n> 一维空间中的理想学习速率是 $\\frac{1}{f(x)''}$（f(x) 对 x 的二阶导数的倒数）。\n>\n> 二维或多维空间中的理想学习速率是[海森矩阵](https://zh.wikipedia.org/wiki/海森矩阵)（由二阶偏导数组成的矩阵）的倒数。\n>\n> 广义凸函数的情况则更为复杂。\n\n## 应用\n\n有人用它写了一个 *chrome://dino* 的 AI。\n\n[前端人工智能？TensorFlow.js 学会游戏通关 - 知乎](https://zhuanlan.zhihu.com/p/35451395)\n\n（续\n\n\n",
      "createdAt": "2018-07-10T03:03:39.000Z",
      "updatedAt": "2023-02-28T20:56:34.127Z",
      "banner": "",
      "category": "颓废",
      "tags": ["tensorflow"],
      "pin": 0,
      "hidden": false,
      "views": 338
    },
    {
      "slot": "functional-1",
      "title": "函数式编程学习笔记",
      "content": "\n## 前言\n\n近年来，函数式编程正在越来越受到欢迎。\n\n> 不仅最古老的函数式语言 Lisp 重获青春，而且新的函数式语言层出不穷，比如 Erlang、clojure、Scala、F# 等等。目前最当红的 Python、Ruby、Javascript，对函数式编程的支持都很强，就连老牌的面向对象的 Java、面向过程的 PHP，都忙不迭地加入对匿名函数的支持。越来越多的迹象表明，函数式编程已经不再是学术界的最爱，开始大踏步地在业界投入实用。\n\n> ——[阮一峰培训班](http://www.ruanyifeng.com/blog/2012/04/functional_programming.html)\n\n本人建议面向过程/面向对象写惯的同学从 JavaScript 开始理解函数式编程会比较好。\n<span class=\"truth\" title=\"你看看人家 Haskell\">看得懂语法至少不会使你马上就弃坑</span>\n\n<!-- more -->\n\n## 预备知识\n\n我们假设所有人都会 JavaScript。\n\n### 柯里化（Currying）\n\n```js\nconst add = (a, b) => a + b; // 普通的一个 add 函数\nconst add = a => b => a + b; // 这样就是柯里化\n```\n\n这样有什么用呢？\n\n打个比方，如果我们要将一个数组里面所有元素加 1，你就可以这样写\n\n```js\nlet arr = [1, 2, 3];\n\narr.map(add(1)); // [2, 3, 4]\n```\n\n`add(1)` 将会返回一个函数 `b => 1 + b`，配合 `map` 使用即可。\n\n如何自动将一个函数柯里化？\n\n```js\n// 模板\nconst curry = fn => {\n  const _c = (restNum, argsList) => restNum === 0 ?\n    fn(...argsList) : (...args) => _c(restNum - args.length, [...argsList, ...args]);\n\n  return _c(fn.length, []);\n}\n\n// 使用方法\n\nconst add = curry((a, b) => a + b);\nadd(1)(2); // 3\nadd(1, 2); // 3\n```\n\n### 合并函数\n\n```js\n// 合并两个函数，从左到右执行\nconst pipe = (f, g) => x => g(f(x));\n// 合并多个函数，从左到右执行\nconst compose = (...args) => args.reduce(pipe, args.shift())\n```\n\n### 函数式与非函数式的比较\n\n> 筛选出一个数组中所有的数字成员。\n\n普通写法\n\n```js\nconst filter_list = arr => arr.filter(x => typeof x === 'number');\n```\n\n函数式\n\n```js\nconst filter = f => a => a.filter(f);\nconst is = t => x => typeof x === t;\n\nconst filter_list = filter(is('number'));\n```\n\n可见函数式代码更加优美并且更加接近自然语言。\n\n### Ramda\n\n[Ramda](http://ramdajs.com/) 是一个提供 JavaScript 函数式编程的函数库。\n想要了解的请自行 google，这里不做展开。\n\n## Haskell 入门\n\nHaskell 第一眼给人的印象就是：懵逼。\n\n他和普通的非函数式语言完全不同。\n\n学过的人知道他在写什么。\n\n没学过的人连他写的东西怎么运行都不知道（特别是几个奇怪的运算符）。\n\n现在我们尝试学习 Haskell。\n\n### 输出\n\n#### 输出字符串\n\n```haskell\n-- 定义主函数（可省略，因为有自动类型推断）\nmain :: IO ()\n-- 实现主函数\n-- 输出 hello world\nmain = putStrLn \"hello world\"\n```\n\n`putStrLn` 函数用来输出字符串。\n\n调用函数不需要括号，所有函数全部支持柯里化。\n\n#### 输出其他任何东西\n\n```haskell\nmain :: IO ()\nmain = do\n  print \"hello world\"\n  print [1 .. 3]\n-- 输出：\n-- hello world\n-- [1,2,3] \n```\n\n`do` 关键字的作用是执行多条语句（多个函数？），使用缩进来判断是否在同一个块内。\n\n### 函数的声明\n\n你只需要把每个参数的类型和返回值的类型用 `->` 连接起来就行了。\n\n如果没有返回值，使用 `()`（Unit /ˈjuːnɪt/） 表示 `void`。\n\n函数将自动返回最后一次运行的表达式的计算结果。\n\n```haskell\nadd :: Int -> Int -> Int\nadd a b = a + b\n```\n\n### 调用函数\n\n你不需要使用括号和逗号，直接在函数名后面输入参数即可。\n\n由于函数是从左到右执行的，所以有时候需要括号来调整优先级。\n\n```haskell\nmain :: IO ()\nmain = print (add 1 2)\n```\n\n如果你觉得用括号太愚蠢了，就用 `$` 运算符。\n\n```haskell\nmain = print $ add 1 2\n-- 输出 3\n```\n\n`$` 的定义：\n\n```haskell\ninfixr 0 $ -- 优先级最低，从右至左执行\n($) :: (a -> b) -> a -> b\nf $ x = f x\n```\n\n### 自带柯里化\n\n```haskell\n-- 其实运算符也是个函数\nadd = (+)\n\nmain :: IO ()\nmain = print $ map (add 5) [1, 2, 3]\n-- 输出：[6,7,8]\n```\n\n### where 关键字\n\n全部定义在外面\n\n```haskell\nisOdd :: Int -> Bool\nisOdd x = x `mod` 2 == 1\n\nmain :: IO ()\nmain = print $ isOdd 4 -- False\n```\n\n使用 `where` 关键字\n\n```haskell\nmain :: IO ()\nmain = print $ isOdd 4\n  where\n    isOdd x = x `mod` 2 == 1\n```\n\n### 例题和题解\n\n**这一部分请自行观察代码理解**。\n\n> List 相关。\n\n```haskell\nmain = do\n  print $ 1 : [4, 5] -- [1,4,5] :: [Int]\n  print $ 'f' : \"oobar\" -- \"foobar\" :: String (= [Char])\n  print $ \"foo\" ++ \"bar\" -- \"foobar\"\n```\n\n> 给定三个数，判断是否为三角形的三条边。\n\n```haskell\nisTriangle :: Int -> Int -> Int -> Bool\nisTriangle a b c\n| a + b <= c = False\n| a + c <= b = False\n| b + c <= a = False\n| otherwise  = True\n```\n\n> 计算阶乘。\n\n`Integer` 是高精度整数。\n\n```haskell\nfrac :: Integer -> Integer\nfrac 0 = 1\nfrac n = n * frac (n - 1)\n\nmain :: IO ()\nmain = print $ frac 100\n```\n\n> 计算斐波那契数列。\n\n先来一个 $O(F_n)$ 暴力。\n\n```haskell\nfib 0 = 0\nfib 1 = 1\nfib n = fib (n - 1) + fib (n - 2)\n```\n\n然后学一个优美一点的写法。\n\n```haskell\nfib a b = a : fib b (a + b)\nmain = print $ take 20 $ fib 1 1\n```\n\n我们来分析一下这种写法。\n\n首先 Haskell 进行自动类型推断，根据 `:` 和下文给出的参数可以推出，`fib` 应该返回 `[Integer]`。\n\n由于 Haskell 有惰性求值，所以不用担心调用的时候会无限递归。\n\n`take 20` 用于取 list 的前 20 项。\n\n`takeWhile (<= 20)` 用于取 list 前面所有满足 $\\le 20$ 的元素，遇到第一个不满足的即返回。\n\n~~其实都是字面意思~~\n\n### 结尾\n\n作者的忠告：\n\n> **永远不要想着用 Haskell 写 OI 题，这是在浪费时间。**\n\n想要训练和深入理解，可以去 codewars 上做题练习。\n\n",
      "createdAt": "2018-10-09T03:05:07.000Z",
      "updatedAt": "2023-02-26T11:44:52.844Z",
      "banner": "",
      "category": "颓废",
      "tags": ["函数式", "haskell"],
      "pin": 0,
      "hidden": false,
      "views": 324
    },
    {
      "slot": "waydroid-arknights",
      "title": "在 Arch Linux 上用 Waydroid 玩舟游",
      "content": "隔壁的 Anbox 基本已经不维护了，咱还是换到 Waydroid 玩 Arknights 吧。\n\n<!-- more -->\n\n## 系统说明\n\n博主的目前桌面系统是 Plasma KDE 5.24.5，当前内核最新版本是 5.18.1，如果时间过去许久，本文也许很难再作为参考。\n\n## 内核\n\n要使用 Waydroid 咱们需要使用 `binderfs` 和 `memfd` 这两个内核模块，这两个都在 `linux-zen` (>= 5.18) 包中有提供。\n\n```bash\n# 安装 linux-zen 内核\nsudo pacman -S linux-zen\n# 更新你的 grub（非常重要）\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n```\n\n## 显卡驱动\n\n首先您必须要有一个非 NVIDIA 的显卡，集显也可以，因为 Wayland 在 NVIDIA 驱动下[完全不工作](https://www.youtube.com/watch?v=_36yNWw_07g)。\n\n可以使用 `lspci | grep -E \"(VGA|3D)\"` 查看当前系统有哪些显卡可以用，本机的输出如下。\n\n```plain\n01:00.0 VGA compatible controller: NVIDIA Corporation TU106M [GeForce RTX 2060 Mobile] (rev a1)\n06:00.0 VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Renoir (rev c6)\n```\n\n可以看到有一个 NVIDIA 的显卡，而且还有一个 AMD 的核显。\n\n笔者是 AMD 核显 + NVIDIA 独显的配置，因此这里要装下面一些驱动。\n\n```bash\n# 这一堆是 AMD 的显卡驱动全家桶\nsudo pacman -S mesa xf86-video-amdgpu vulkan-radeon libva-mesa-driver mesa-vdpau\n# 这一堆是 NVIDIA 的显卡驱动\nsudo pacman -S linux-headers linux-zen-headers\nsudo pacman -S nvidia-dkms\n```\n\n顺便，如果是使用 AMD 的显卡驱动，可能还需要编辑 `/etc/mkinitcpio.conf` 文件，把 `MODULES` 开头的那一行加一个 `amdgpu`。\n\n```conf\nMODULES=(amdgpu)\n```\n\n然后对于笔记本的双显卡的情况，咱们使用 `optimus-manager` 来管理双显卡下的驱动。\n\n注意先检查是否有 `/etc/X11/xorg.conf` 这个文件，如果有就删掉。\n\n然后检查 `/etc/X11/xorg.conf.d/` 目录下面是否有其他配置文件，通通删掉。\n\n```bash\nsudo pacman -S optimus-manager\nsudo systemctl enable --now optimus-manager.service\n\n# 切换到集成显卡模式（禁用独立显卡）\noptimus-manager --switch integrated\n# 如果要切换到混合模式，可以用 hybrid\n# optimus-manager --switch hybrid\n# 不过建议先禁用独立显卡，之后重启没问题之后再尝试启用独立显卡\n```\n\n之后重启，应该可以正常进入 X11 的桌面系统。\n\n## 安装 Wayland\n\n只需要装一个 `plasma-wayland-session` 就可以了。\n\n```bash\nsudo pacman -S plasma-wayland-session\n```\n\n安装完成之后登出，再从 DM 中应该可以找到 Plasma KDE (Wayland) 选项，选择这个登录进去。\n\n如果您出现了闪屏、抽风等问题，多半是因为显卡驱动的原因（Wayland 用 NVIDIA 驱动就抽风），尝试用 optimus-manager 禁用独立显卡之后应该可以变正常。\n\n## 安装 Waydroid\n\n分三步，第一步装 `waydroid` (AUR)。\n\n```bash\n# 或者别的 AUR 安装工具\npikaur -S waydroid\n```\n\n第二步装镜像，可以通过 `waydroid-image` (AUR) 安装，不过可能需要手动修改一下镜像的版本，一般使用最新的构建会比较好，因为咱用老版本他不工作，然后咱手动把版本更新到最新的镜像版本之后就可以了。\n\n或者可以不通过包管理器装镜像，直接跳转到下一步也是可以的。\n\n第三步初始化，直接通过 `waydroid init` 就可以了。\n\n```bash\nsudo waydroid init\n```\n\n注意如果第二步没有通过包管理器安装镜像的话初始化脚本会自动联网下载最新的构建版本。\n\n如果切换了镜像，或者做了一些别的什么修改，可以加一个 `-f` 来强制重新初始化一遍。\n\n最后启动服务\n\n```bash\nsudo systemctl enable --now waydroid-container.service\n```\n\n最后直接从桌面启动就可以了。\n\n## 安装 Arknights\n\n通过 Waydroid 给的工具安装 apk 文件。\n\n```bash\nwaydroid app install Downloads/arknights-hg-1801.apk\n```\n\n然后直接在里面打开应该就可以用了。\n\n## Troubleshooting\n\n### Waydroid 内联网失败\n\n编辑 `/etc/dnsmasq.conf`，找到 `#bind-interfaces` 这一行，把他去掉注释。\n\n然后重启 dnsmasq 服务。\n\n```bash\nsudo systemctl restart dnsmasq.service\nsudo systemctl restart waydroid-container.service\n```\n\n### 我明明有双显卡为什么只能检测到一个 NVIDIA 显卡？\n\n笔者电脑是联想拯救者 R7000P，BIOS 中默认开启了独显直连，会导致只能看到 NVIDIA 的显卡信息。\n\n从 BIOS 中把这个选项关掉就可以了。\n\n### 我基建里面怎么没法拖动了啊\n\n不知道，这个貌似是个特性。\n\n### 我肉鸽里面也没法拖动了啊，后面的路线都不到了\n\n不知道，这个貌似也是个特性。\n\n### Anbox 就没有上面的莫名其妙的问题，是不是 Waydroid 不行啊\n\n确实，我也是这么认为的。\n\n~~但是 Anbox 要用的 ashmem 模块在 linux-zen (>= 5.18) 之后就不提供支持了，除了自己编译内核之外可能没有别的选项了~~\n\n<img width=\"200\" src=\"/file/sticker.webp\"/>\n\n[2022/6/6]\n",
      "createdAt": "2022-06-06T23:12:50.543Z",
      "updatedAt": "2023-02-28T23:23:30.541Z",
      "banner": "/file/photo_2021-05-10_22-55-08.jpg",
      "category": "教程",
      "tags": ["waydroid", "arknights", "archlinux"],
      "pin": 0,
      "hidden": false,
      "views": 1258
    },
    {
      "slot": "canvas-live",
      "title": "使用 WebSocket 和 ffmpeg 直播 canvas",
      "content": "\n最近一直在折腾 rtmp 直播的相关内容，想要用 electron 写一个直播的软件。\n\n现在打算写一下我的实现方法。\n\n<!-- more -->\n\n在这之前，我们需要了解两个浏览器提供的 API: CanvasCaptureMediaStream 和 MediaRecorder API。\n\n[CanvasCaptureMediaStream][ccms] 用于从 canvas 元素创建原始视频流。\n\n[MediaRecorder API][mra] 允许在浏览器中使用编解码器，将原始视频转换为可有效发送到服务器的 VP8，VP9 或 H.264 编码视频。\n\n获取到视频之后，我们需要使用 WebSocket 将数据发送到后台，再在后台使用 ffmpeg 进行 rtmp 推流。\n\n大致思路就是这样。\n\n## 搭建 rtmp 服务器\n\n网上教程太多了。。。\n\n推荐个 [gwuhaolin/livego][livego]，下载即用，不用装什么乱七八糟的 nginx。\n\n启动之后可以直接 `rtmp://localhost:1935/live/video` 推流，之后用 VLC 播放器打开 `rtmp://localhost:1935/live/video.flv` 即可看到直播内容。\n\n可以先试着用 ffmpeg 推一个视频看看效果： `ffmpeg -re -i your_video.mp4 -vcodec libx264 -acodec aac -f flv rtmp://localhost:1935/live/video`\n\n不出意外一切正常。\n\n## 前端\n\nMediaStream 可以轻松的添加流轨道（Track）。\n\n```js\nconst ws = new WebSocket('ws://localhost:16547');\n\nws.addEventListener('open', (e) => {\n\n  const mediaStream = new MediaStream();\n\n  // 添加视频轨\n  const video = document.querySelector('canvas').captureStream(30);\n  video.getTracks().forEach(mediaStream.addTrack.bind(mediaStream));\n\n  // 添加音频轨（From <audio> element）\n  const audioContext = new AudioContext();\n  const audioSrc = audioContext.createMediaElementSource(document.querySelector('audio'));\n  const destination = audioContext.createMediaStreamDestination();\n  audioSrc.connect(destination);\n  destination.stream.getTracks().forEach(mediaStream.addTrack.bind(mediaStream));\n\n  // 创建 MediaRecorder\n  const mediaRecorder = new MediaRecorder(mediaStream, {\n    mimeType: 'video/webm;codecs=h264',\n    audioBitsPerSecond: 44100,  // 44.1kHz\n    videoBitsPerSecond: 3000000 // 3000k 画质\n  });\n\n  mediaRecorder.addEventListener('dataavailable', (e) => {\n    // 将数据发送到后台\n    // 发送时 e.data 的类型是 Blob\n    ws.send(e.data);\n  });\n\n  // 开始录制并每隔 1s 发送一次数据\n  mediaRecorder.start(1000);\n\n});\n```\n\n## 后端\n\n后端采用 nodejs 编写，打算用 PHP 的请退群。\n\n安装依赖：\n\n```bash\nnpm install ws\n```\n\n同样也是短的不得了\n\n```js\n#!/bin/node\n\nconst WebSocketServer = require('ws').Server;\nconst wss = new WebSocketServer({ port: 16547 }); // 随便开个端口\n\nconst { spawn } = require('child_process');\n\nconst RTMP_SERVER = 'rtmp://localhost:1935/live/video';\n\nwss.on('connection', (ws) => {\n\n  const ffmpeg = spawn('ffmpeg', [\n    // 从 stdin 中读入视频数据\n    '-i', '-',\n\n    // 视频转码\n    // 由于视频已经是 H.264 编码，可以直接复制\n    // 若需要转码则填 libx264\n    '-vcodec', 'copy',\n\n    // 音频转码\n    '-acodec', 'aac',\n\n    // 输出为 flv 格式\n    '-f', 'flv',\n\n    // RTMP 服务器\n    RTMP_SERVER\n  ]);\n\n  ws.on('message', (msg) => {\n    // 收到时 msg 的类型是 Buffer\n    ffmpeg.stdin.write(msg);\n  });\n  \n  ws.on('close', (e) => {\n    // 断开链接即中断推流\n    ffmpeg.kill('SIGINT');\n  });\n\n});\n```\n\n## 客户端\n\n可以直接使用 [DPlayer][dp] 和 [flv.js][flvjs] 来播放 HTTP-FLV 直播流。\n\n照样短的不得了\n\n```html\n<script src=\"flv.min.js\"></script>\n<script src=\"dplayer.min.js\"></script>\n<link rel=\"stylesheet\" href=\"dplayer.min.css\">\n\n<div id=\"dplayer\"></div>\n```\n\n```js\nconst dp = new DPlayer({\n  container: document.getElementById('dplayer'),\n  video: {\n    url: 'http://localhost:7001/live/video.flv'\n  },\n  live: true,\n  autoplay: true\n});\n```\n\n## 后话\n\n由于我最终使用 electron 包装，所以 WebSocket 这一步就免了。\n\n然后唯一的问题就是 Blob 转 Buffer 了。\n\n可以用 npm 上一个包 `blob-to-buffer` 解决。\n\n## 参考资料\n\n<https://github.com/fbsamples/Canvas-Streaming-Example>\n\n[end]\n\n[ccms]: https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasCaptureMediaStream\n[mra]: https://developer.mozilla.org/zh-CN/docs/Web/API/MediaRecorder\n[livego]: https://github.com/gwuhaolin/livego\n[dp]: https://github.com/MoePlayer/DPlayer\n[flvjs]: https://github.com/Bilibili/flv.js\n",
      "createdAt": "2018-08-23T07:42:11.000Z",
      "updatedAt": "2023-02-28T23:23:33.674Z",
      "banner": "",
      "category": "颓废",
      "tags": ["canvas", "ffmpeg", "websocket"],
      "pin": 0,
      "hidden": false,
      "views": 3415
    },
    {
      "slot": "x25519",
      "title": "Curve25519/X25519 原理与实现",
      "content": "研究 WireGuard 的时候突然好奇公钥和私钥的一堆字符串里面保存的究竟是什么东西，于是稍微研究了一下 X25519 和 ECDH 相关的内容。写一篇文章总结一下这套东西究竟是什么，以及用了什么奇技淫巧生成的公钥和私钥，希望对各位学习密码学 ECDH 相关内容有所帮助。\n\n<!-- more -->\n\n## 蒙哥马利曲线\n\n蒙哥马利曲线是一类椭圆曲线，其满足的通式为\n\n$$\nM_{A,B}: By^2=x^3+Ax^2+x\n$$\n\n其中满足 $B(A^2-4) \\ne 0$。\n\n关于曲线长什么样你们可以自己脑补，我就不贴图了。\n\n## 椭圆曲线上的加法\n\n我们定义椭圆曲线 $E$ 上的加法是指点 $P, Q \\in E$ 连成的直线 $L$ 与椭圆曲线 $E$ 所交的第三个点关于 $x$ 轴的对称点。\n\n显然根据定义我们可以知道这个加法运算满足交换律，即 $P+Q=Q+P$。\n\n当点 $P$ 与点 $Q$ 重合的时候，我们将此时椭圆曲线上点 $P$ 处的切线作为直线 $L$ 与椭圆曲线求交。\n\n当点 $P$ 与点 $Q$ 关于 $x$ 轴对称（我们记为 $P=Q^{-1}$）的时候，则可能 $L$ 与 $E$ 没有第三个交点，这时候我们人为添加一个无穷远点 $O$，用来作为这种情况下的解，即 $P+P^{-1}=O$。\n\n此外我们有\n\n$$\n\\begin{aligned}\nO + O &= O \\\\\nP + O &= P \\\\\n\\end{aligned}\n$$\n\n经过简单推导可以看出 $O$ 满足许多加法中零元的性质，因此我们可以将点 $O$ 看作是由集合 $S=\\{P | P\\in E\\}\\cup \\{O\\}$ 和加法 $\\left\\langle + \\right\\rangle$ 构成的群 $G=\\left\\langle S,+ \\right\\rangle$ 中的单位元。\n\n## Curve25519\n\nCurve25519 指的是一条曲线，这条曲线是指一条蒙哥马利曲线\n\n$$\nC: y^2=x^3+486662x^2+x\n$$\n\n并且定义在质数模域 $p=2^{255}-19$ 上，故将曲线称之为 Curve25519。\n\n我们定义群 $G$ 是由该椭圆曲线上的点和一个无穷远点 $O$，以及椭圆曲线上的加法运算 $\\left\\langle + \\right\\rangle$ 所定义的群，根据一些我也不知道怎么推的魔法手段可以得出群 $G$ 的阶，即 $|G| = hq$，其中 $h=2^c=8$ 被称为余因子（cofactor），$q$ 是一个比较大的质数，准确来说有 $q=2^{252}+27742317777372353535851937790883648493$。\n\n根据拉格朗日定理，我们可以知道如果群 $G$ 有子群 $E$，则 $|E|$ 必为 $|G|$ 的一个因子。所以我们可以知道，对于群 $G$ 中的任意元素的阶必定是 $1,2,4,8,q,2q,4q,8q$ 中的一个。\n\n## X25519 与 ECDH\n\nX25519 指的是在曲线 Curve25519 上计算的一套 ECDH 密钥交换算法，其中选择的基点是 $G=(9, y)$，并且可以通过计算可以知道点 $G$ 的阶是 $ord(G) = q$。\n\nECDH 的过程如下：\n\n1. Alice 生成自己的私钥 $a$，并且计算公钥 $A=a \\cdot G$\n2. Bob 生成自己的私钥 $b$，并且计算公钥 $B=b \\cdot G$\n3. Alice 和 Bob 将自己的公钥通过不安全信道发送给对方\n4. Alice 计算 $K=a \\cdot B = a \\cdot (b \\cdot G) = ab \\cdot G$\n5. Bob 计算 $K=b \\cdot A = b \\cdot (a \\cdot G) = ab \\cdot G$\n\nAlice 和 Bob 可以得到一个相同的结果作为接下来对称加密的密钥，但是攻击者仅通过偷听到的 $A$ 和 $B$ 很难计算出 $a, b$ 的值，也很难得出 $K$ 的结果。\n\n但是这个算法也有一些缺陷，假设 Alice 想要窃取 Bob 的密钥，那么 Alice 可以从 Curve25519 曲线中挑选出一个阶比较小的点 $S$ 作为自己的公钥，我们不妨设 $ord(S)=8$，即 $8 \\cdot S=O$。那么 Bob 在收到 Alice 的公钥之后会计算 $K=b \\cdot S$，并将 $K$ 作为接下来对称加密的密钥。而 Alice 知道 $K$ 只有可能是 $8$ 种不同的结果，并且可以根据 Bob 接下来的行为判断出 Bob 得到的是哪个密钥，从而得到 $b \\bmod 8$ 的结果，相当于泄露了 3 比特的密钥信息。这种攻击手段被称为小子群约束攻击（Small Subgroup Confinement Attack，~~我乱翻译的~~）。\n\n想要防范上面的攻击，可以当 Bob 收到对方密钥之后预先计算一下 $K'=h \\cdot A$ 是否等于无穷远点 $O$。可以证明，如果 Alice 的公钥的阶小于等于 $h$，则 $K'$ 的结果将必定是 $O$。这时候 Bob 可以认为 Alice 的公钥不合法，从而拒绝接下来的通信。\n\nX25519 并没有从上面的角度出发，而是直接钦点私钥的最低三位比特必须是 0，这样 Alice 将无法得到任何有用的信息。\n\n此外 X25519 也指定私钥的长度为 256 位，其中最高位比特必须为 0，次高位比特必须为 1，这将密钥的空间降低到了 $2^{251}$ 级别，同时将私钥的最高有效位也固定了下来，可以防止一些旁道攻击。\n\n## 如何计算点加法\n\n接下来具体介绍 X25519 的实现，我们在 ECDH 的全部过程中只需要一样操作，就是计算一个点 $P$ 自己加自己 $n$ 次的乘法 $n \\cdot P$。\n\n首先我们考虑计算点 $P, Q$ 之间加法的一般过程，分以下情况考虑：\n\n1.  $Q = O$ 或者 $P = O$，则有 $P + O = P$ 或者 $O + Q = Q$；\n2.  $x_P = x_Q, y_P = -y_Q$，即 $P = Q^{-1}$，则我们有 $P+Q=O$；\n3.  $x_P \\ne x_Q$，假设 $P+Q=R$，则我们令直线 $L$ 是经过点 $P, Q, R^{-1}$ 的直线，我们有\n\n    $$\n    L: y = kx+b\n    $$\n\n    其中 $k=\\frac{y_P-y_Q}{x_P-x_Q}$，我们将 $L$ 带入椭圆曲线 $E: y^2=x^3+Ax^2+x$ 中得到（其中 $A=486662$）\n\n    $$\n    (kx+b)^2=x^3+Ax^2+x\n    $$\n\n    即\n\n    $$\n    x^3+(A-k^2)x^2+(1-2kb)x-b^2=0\n    $$\n\n    根据代数基本定理，我们有\n\n    $$\n    (x-x_P)(x-x_Q)(x-x_R) = 0\n    $$\n\n    即\n\n    $$\n    x^3-(x_P+x_Q+x_R)x^2+(x_Px_Q+x_Px_R+x_Qx_R)x-x_Px_Qx_R=0\n    $$\n\n    比较系数可以得到\n\n    $$\n    A-k^2 = -(x_P+x_Q+x_R)\n    $$\n\n    即\n\n    $$\n    x_R = k^2-A-x_P-x_Q\n    $$\n\n    并且根据点 $P, R^{-1}$ 经过直线 $L$ 可以知道\n\n    $$\n    \\begin{aligned}\n    y_P&=kx_P+b\\\\\n    -y_R&=kx_R+b\n    \\end{aligned}\n    $$\n\n    将上述两式相减可以得到\n\n    $$\n    y_R=k(x_P-x_R)-y_P\n    $$\n\n    至此我们可以得到点 $R$ 的解\n\n    $$\n    \\begin{cases}\n    x_R = k^2-A-x_P-x_Q \\\\\n    y_R = k(x_P-x_R)-y_P\n    \\end{cases}\n    $$\n\n4.  $x_P = x_Q, y_P = y_Q$，即 $P = Q$ 的情况，这时候我们需要求椭圆曲线 $E$ 在点 $P$ 处的切线。我们可以先将椭圆曲线的表达式两边同时对 $x$ 求导，得到（其中 $A=486662$）\n\n    $$\n    2y\\frac{\\text{d}y}{\\text{d}x} = 3x^2+2Ax+1\n    $$\n\n    即\n\n    $$\n    k=\\frac{\\text{d}y}{\\text{d}x}=\\frac{3x_P^2+2Ax_P+1}{2y_P}\n    $$\n\n    接下来的情况与上述相同，将 $k$ 的值带入第三种情况的时候求得的最终式子即可。\n\n通过上面分析的四种情况，再使用快速幂相关的思想，我们已经可以实现一个计算点乘法的函数。但是实际上我们还可以再做进一步优化。\n\n## 蒙哥马利梯子算法\n\n这个名字是我乱翻译的，原名叫做 Montgomery Ladder 算法，基本思想是将点拆分成 $(X:Y:Z)$ 三元组，其中满足 $x=\\frac{X}{Z}, y=\\frac{Y}{Z}$，接着构造一个函数 $L(P, i)$ 满足（下面将 $i \\cdot P$ 简写成 $P_{i}$）\n\n$$\n\\begin{aligned}\nL(P, 0) &= (O, P) \\\\\nL(P, i) &= (P_i, P_{i+1}) \\\\\n\\end{aligned}\n$$\n\n考虑如何转移上面的式子，我们可以简单得出\n\n$$\n\\begin{aligned}\nL(P, 2i) &= (P_i + P_i, P_i + P_{i+1}) \\\\\nL(P, 2i+1) &= (P_i + P_{i+1}, P_{i+1} + P_{i+1})\n\\end{aligned}\n$$\n\n至此我们得到了一个通过 $L(P, i)$ 计算 $L(P, 2i)$ 和 $L(P, 2i+1)$ 的算法，我们可以将其用于一种另类的快速幂算法，同样可以在 $O(\\log n)$ 的时间内求出 $n \\cdot P$ 的值。\n\n接下来我们要考虑的就是如何优化求 $P_i + P_i$ 和 $P_i + P_{i+1}$ 的过程。\n\n首先我们考虑求 $P_{2i}=P_i + P_i$ 的情况，为了方便考虑，我们暂时排除  $P_i=O$ 和 $P_{2i} = O$ 的情况，将无穷远点的问题留到最后单独考虑。排除掉无穷远点的情况之后，这种就是上述的第四类情况，我们可以直接利用现成的结论\n\n$$\n\\begin{aligned}\nx_{2i} &= k^2-A-2x_i \\\\\n&= \\frac{(3x_i^2+2Ax_i+1)^2}{4y_i^2} -A-2x_i \\\\\n&= \\frac{(3x_i^2+2Ax_i+1)^2 - 4(x_i^3+Ax_i^2+x_i)(A+2x_i)}{4(x_i^3+Ax_i^2+x_i)} \\\\\n% &= \\frac{[9x_i^4+12Ax_i^3+(6+4A^2)x_i^2+4Ax_i+1] - [8x_i^4+12Ax_i^3+(8+4A^2)x_i^2+4Ax_i]}{4(x_i^3+Ax_i^2+x_i)} \\\\\n&= \\frac{x_i^4-2x_i^2+1}{4(x_i^3+Ax_i^2+x_i)} \\\\\n&= \\frac{\\frac{X_i^4}{Z_i^4}-2\\frac{X_i^2}{Z_i^2}+1}{4(\\frac{X_i^3}{Z_i^3}+A\\frac{X_i^2}{Z_i^2}+\\frac{X_i}{Z_i})} \\\\\n&= \\frac{X_i^4-2X_i^2Z_i^2+Z_i^4}{4(X_i^3Z_i+AX_i^2Z_i^2+X_iZ_i^3)} \\\\\n&= \\frac{(X_i^2-Z_i^2)^2}{4X_iZ_i(X_i^2+AX_iZ_i+Z_i^2)} \\\\\n\\end{aligned}\n$$\n\n从而我们可以得到递推式\n\n$$\n\\begin{cases}\nX_{2i} &= (X_i^2-Z_i^2)^2 \\\\\nZ_{2i} &= 4X_iZ_i(X_i^2+AX_iZ_i+Z_i^2)\n\\end{cases}\n$$\n\n之后考虑 $P_{2i+1} = P_i + P_{i+1}$ 的情况，同样为了方便考虑，我们暂时将下面几种情况排除，在最后单独进行考虑：\n\n1. $P_i = O$ 或者 $P_{i+1} = O$ 的情况；\n2. $P_i = P_{i+1}$，即 $P = O$ 的情况；\n3. $P_i = P_{i+1}^{-1}$，即 $P_{2i+1}=O$ 的情况。\n\n排除了上面的两种情况之后我们可以得到 $x_{i} \\ne x_{i+1}$，故可以采用之前的第三种情况。\n\n$$\n\\begin{aligned}\nx_{2i+1} &= k^2-A-x_i-x_{i+1} \\\\\n&=\\frac{(y_i-y_{i+1})^2}{(x_i-x_{i+1})^2} - A - x_i - x_{i+1} \\\\\n&=\\frac{y_i^2-2y_iy_{i+1}+y_{i+1}^2 - (A + x_i+x_{i+1})(x_i-x_{i+1})^2}{(x_i-x_{i+1})^2} \\\\\n% &=\\frac{(x_i^3+Ax_i^2+x_i-2y_iy_{i+1}+x_{i+1}^3+Ax_{i+1}^2+x_{i+1}) - (Ax_i^2-2Ax_ix_{i+1}+Ax_{i+1}^2+x_i^3-2x_i^2x_{i+1}+x_ix_{i+1}^2+x_i^2x_{i+1}-2x_ix_{i+1}^2+x_{i+1}^3)}{(x_i-x_{i+1})^2} \\\\\n&=\\frac{(1+x_ix_{i+1})(x_i+x_{i+1}) +2Ax_ix_{i+1}-2y_iy_{i+1}}{(x_i-x_{i+1})^2} \\\\\n\\end{aligned}\n$$\n\n此外，我们可以根据 $P_{i+1} = P_{i} + P$，即 $P = P_i^{-1}+ P_{i+1}$ 可以得到\n\n$$\n\\begin{aligned}\nx_P &= \\frac{(1+x_ix_{i+1})(x_i+x_{i+1}) +2Ax_ix_{i+1}+2y_iy_{i+1}}{(x_i-x_{i+1})^2} \\\\\n\\end{aligned}\n$$\n\n将上面两式相乘可以得到\n\n$$\n\\begin{aligned}\nx_{2i+1}x_P(x_i-x_{i+1})^4 &= [(1+x_ix_{i+1})(x_i+x_{i+1}) +2Ax_ix_{i+1}]^2-(2y_iy_{i+1})^2 \\\\\n&= [(1+x_ix_{i+1})(x_i+x_{i+1}) +2Ax_ix_{i+1}]^2-4(x_i^3+Ax_i^2+x_i)(x_{i+1}^3+Ax_{i+1}^2+x_{i+1}) \\\\\n&= ... \\\\\n&= (x_i-x_{i+1})^2(x_ix_{i+1}-1)^2\n\\end{aligned}\n$$\n\n进而我们可以得到\n\n$$\n\\begin{aligned}\nx_{2i+1} &= \\frac{(x_ix_{i+1}-1)^2}{x_P(x_i-x_{i+1})^2} \\\\\n&= \\frac{(\\frac{X_iX_{i+1}}{Z_iZ_{i+1}}-1)^2}{\\frac{X_P}{Z_P}(\\frac{X_i}{Z_i}-\\frac{X_{i+1}}{Z_{i+1}})^2} \\\\\n&= \\frac{Z_P(X_iX_{i+1}-Z_iZ_{i+1})^2}{X_P(X_iZ_{i+1}-Z_iX_{i+1})^2} \\\\\n\\end{aligned}\n$$\n\n从而我们可以得到递推式\n\n$$\n\\begin{cases}\nX_{2i+1} &= Z_P(X_iX_{i+1}-Z_iZ_{i+1})^2 \\\\\nZ_{2i+1} &= X_P(X_iZ_{i+1}-Z_iX_{i+1})^2\n\\end{cases}\n$$\n\n其中 $x_P = \\frac{X_P}{Z_P}$，我们可以直接令 $X_P = x_P, Z_P=1$。\n\n可以发现我们对于上面的两种情况都不需要 $y$ 坐标的参与，因此我们可以直接将 $y$ 坐标丢弃。\n\n接下来我们单独考虑各种地方出现无穷远点 $O$ 的情况，由于我们无法使用一个有限的坐标来表示无穷远点的情况，因此我们特别定义当 $X\\ne 0$ 并且 $Z=0$ 的时候表示无穷远点。\n\n幸运的是，上面得到的递推式恰好可以处理所有关于无穷远点 $O$ 的情况，关于这个结论的详细论证可以在[这篇文章][curve25519]的第 4.5 小节中找到，我懒得复制粘贴了。\n\n## 代码实现\n\n代码也懒得复制粘贴了，稍微说一点细节和原因，具体实现可以自己看[这篇文章][curve25519]。\n\n关于一个高精度表示，总共用 16 个 long long，每一个 long long 对应 16 比特信息。使用 long long 来保存是为了不用每次加减法都要运算一次进位。因此在代码中可以看到加法和减法做完之后都不再进行进位的操作。\n\n在做乘法的时候，直接使用 $O(n^2)$ 的算法两两相乘，最后加到数组中，值得注意的是，根据 $2^{256} a+b = (2p+38)a+b=38a+b \\pmod p$ 知道，可以直接将超出 $2^{256}$ 的部分乘以 $38$ 之后直接加到低位中。乘法结束之后处理两次进位，防止下一次乘法溢出。\n\n最后计算完毕之后进行三次进位操作，即可保证数组中的每个元素都落在 $[0, 2^{16}-1]$ 范围内。但这时候保存的数字的范围依旧是 $[0, 2^{256}-1]$，我们需要计算其在 $p$ 模域下的值，那么会有三种可能，分别是 $\\{t, t-p, t-2p\\}$。我们将 $t$ 依次减去 $p$，判断减法是否溢出，就可以知道取模的结果应该是三种情况中的哪一个。\n\n最后关于 Montgomery Ladder 算法的具体实现，文章中给出了输入 $(a, b, c, d) = (X_i, X_{i+1}, Z_i, Z_{i+1})$，输出 $(a, b, c, d) = (X_{2i}, 4X_{2i+1}, Z_{2i}, 4Z_{2i+1})$ 的一套计算过程。如果我们要计算的是 $P_{2i+1}$ 和 $P_{2i+2}$ 的话只需要将算法输入中的 $a, b$ 和 $c, d$ 对调即可，即将输入变为 $(a, b, c, d) = (X_{i+1}, X_i, Z_{i+1}, Z_i)$，输出就会变成 $(a, b, c, d) = (X_{2i+2}, 4X_{2i+1}, Z_{2i+2}, 4Z_{2i+1})$，将输出的 $a, b$ 和 $c, d$ 再次对调就可以得到下一轮的输入格式。\n\n计算完毕之后根据 $x_P = \\frac{X_P}{Z_P} = X_P Z_P^{-1} \\pmod p$ 计算出 $x_P$ 的值，就可以作为公钥，或者是 ECDH 的结果。\n\n有没有可能公钥或者 ECDH 计算的结果是无穷远点 $O$ 呢？\n\n根据私钥的范围我们可以知道 $a = 8(2^{251}+x) (x \\in [0, 2^{251}-1])$，如果 $A=a \\cdot G = O$，则我们可以知道 $q \\mid a$，即 $q \\mid 8(2^{251}+x)$。因为 $(q, 8) = 1, q \\nmid 8$，故必须有 $q \\mid 2^{251} + x$，但是由于 $q>2^{252}, 2^{251} \\le 2^{251}+x < 2^{252}$，所以必然有 $q \\nmid 2^{251} + x$，即合法的 X25519 公钥不可能是无穷远点 $O$。\n\n同理，若 ECDH 计算的最终结果 $K = ab \\cdot G = O$，则有 $q \\mid ab$，即 $q \\mid 64(2^{251}+x_1)(2^{251}+x_2)$。根据上述结论可以知道 $q \\nmid 64, q\\nmid 2^{251}+x_1, q \\nmid 2^{251}+x_2$，故 $q \\nmid 64(2^{251}+x_1)(2^{251}+x_2)$，因此 ECDH 结果也必然不会是无穷远点 $O$。\n\n## あとがき\n\n希望本文对各位在研究如何实现椭圆曲线加密的时候有所帮助。\n\n[curve25519]: https://www.cl.cam.ac.uk/teaching/2122/Crypto/curve25519.pdf\n",
      "createdAt": "2022-12-20T15:34:15.992Z",
      "updatedAt": "2023-03-01T20:11:57.795Z",
      "banner": "/file/photo_2022-11-16_10-20-06.jpg",
      "category": "教程",
      "tags": ["Crypto"],
      "pin": 0,
      "hidden": false,
      "views": 120
    },
    {
      "slot": "codeforces-round-396-div-2-solution",
      "title": "Codeforces Round #396 (Div. 2) 题解",
      "content": "\n# 前言\n\n继续颓废写 Codeforces 的题解。\n马上就要初赛了却越来越颓废了。\n\n![face1](/file/face1.jpg)![face2](/file/face2.jpg)\n\n# A. Mahmoud and Longest Uncommon Subsequence\n\n## 题意概述\n\n要你求两个串的最长不公共子序列\n\n<!-- more -->\n\n## 思路\n\nA 题不要想太多。\n如果 `a == b` 直接输出 `-1` 。\n否则输出 `max(a.length, b.length)` 。\n\n\n\n## 代码\n\n**JavaScript**\n\n```javascript\n;(function () {\n\tvar a = readline(),\n\t\tb = readline()\n\tif (a === b) print(-1)\n\telse print(Math.max(a.length, b.length))\n})();\n```\n\n# B. Mahmoud and a Triangle\n\n## 题意概述\n\n给你$n$个数，问你能不能找到三个数使其能组成一个三角形。\n\n## 思路\n\n$O(n^3)$的暴力显然是行不通的。\n可以想到，先排序一发，要找到三个数一定是连续的三个数。\n证明？\n\n> 这不是显然成立的嘛。\n\n> —— zyy & szb\n\n## 代码\n\n**JavaScript**\n\n```javascript\n;(function () {\n\tvar n = + readline()\n\tvar a = readline().split(' ')\n\tfor (var k = 0; k < n; k++)\n\t\ta[k] = + a[k]\n\ta.sort(function (a, b) {\n\t\treturn a - b;\n\t})\n\tvar isTri = function (a, b, c) {\n\t\treturn a + b > c && a + c > b && b + c > a\n\t}\n\tfor (var k = 2; k < n; k++)\n\t\tif (isTri(a[k-2], a[k-1], a[k]))\n\t\t\treturn print('YES')\n\tprint('NO')\n})();\n```\n\n**吐槽**\n\njavascript 的 sort 有毒的啊。。。\n连 number 都是按字典序排的啊。。。\n\n# C. Mahmoud and a Message\n\n## 题意概述\n\n给你一个字符串$s$和一个数组$a$，要你把$s$切开来。\n$a_i$表示第$i$个字母所在的片段的长度不能大于$a_i$。\n问你三个东西：\n\n- 全部的方案数$\\pmod{10^9+7}$\n- 切的最长的一段有多长\n- 最少切成几份\n\n## 思路\n\n动态规划。\n`f[i]` 表示方案数。\n`g[i]` 表示最长的长度。\n`r[i]` 表示最少的份数。\n然后 xjb 转移一下就好了。\n~~我最喜欢吃 htr 了~~\n\n## 代码\n\n**C++**\n\n```cpp\n#include <bits/stdc++.h>\n#define N 1020\n#define ll long long\n#define mod 1000000007\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=='-'&&(f=0)||(ch=getchar());\n\twhile(ch<='9'&&ch>='0')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f?x:-x;\n}\nint f[N], g[N], r[N], cnt[30];\nchar str[N];\nint main(int argc, char const *argv[]) {\n\tint n = read();\n\tscanf(\"%s\", str + 1);\n\tfor (int i = 0; i < 26; i++)\n\t\tcnt[i] = read();\n\tf[1] = 1;\n\tfor (int i = 2, len; i <= n + 1; i++) {\n\t\tlen  =   1 << 30;\n\t\tg[i] = - 1 << 30;\n\t\tr[i] =   1 << 30;\n\t\tfor (int j = i - 1; j; j--) {\n\t\t\tlen = min(len, cnt[str[j] - 'a']);\n\t\t\tif (len < i - j)\n\t\t\t\tbreak;\n\t\t\tf[i] = (f[i] + f[j]) % mod;\n\t\t\tg[i] = max(g[i], max(i - j, g[j]));\n\t\t\tr[i] = min(r[i], r[j] + 1);\n\t\t}\n\t}\n\tprintf(\"%d\\n%d\\n%d\\n\", f[n + 1], g[n + 1], r[n + 1]);\n\treturn 0;\n}\n```\n\n# D. Mahmoud and a Dictionary\n\n## 题意概述\n\n<ruby><rb>恶</rb><rt>e</rt><rb>魔</rb><rt>m</rt><rb>妈</rb><rt>m</rt><rb>妈</rb><rt>m</rt><rb>摸</rb><rt>m</rt><rb>妹</rb><rt>m</rt><rb>妹</rb><rt>m</rt></ruby>......\n就是每次告诉你一对近义词或者反义词，如果与之前冲突输出 `NO`，否则输出 `YES`。\n然后最后再问你一些词，是近义词输出 `1`，反义词输出 `2`，不确定输出 `3`。\n\n## 思路\n\n显然并查集。\n每个字符串拆成两个就行了。\n具体看代码。\n\n## 代码\n\n**C++**\n\n```cpp\n#include <bits/stdc++.h>\n#define N 200020\n#define ll long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=='-'&&(f=0)||(ch=getchar());\n\twhile(ch<='9'&&ch>='0')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f?x:-x;\n}\nmap<string, int> mp;\nstring str;\nint fa[N];\nint find(int x) {\n\treturn fa[x] == x ? x : fa[x] = find(fa[x]);\n}\nvoid merge(int x, int y) {\n\tint fx = find(x), fy = find(y);\n\tfa[fx] = fy;\n}\nint main(int argc, char const *argv[]) {\n\tint n = read(), m = read(), k = read();\n\tfor (int i = 0; i < n << 1; i ++)\n\t\tfa[i] = i;\n\tfor (int i = 0; i < n; i ++) {\n\t\tcin >> str;\n\t\tmp[str] = i << 1;\n\t}\n\twhile (m --) {\n\t\tint op = read();\n\t\tcin >> str;\n\t\tint x = mp[str];\n\t\tcin >> str;\n\t\tint y = mp[str];\n\t\tif (op == 1) {\n\t\t\tif (find(x ^ 1) == find(y)) puts(\"NO\");\n\t\t\telse puts(\"YES\"), merge(x, y), merge(x ^ 1, y ^ 1);\n\t\t} else {\n\t\t\tif (find(x) == find(y)) puts(\"NO\");\n\t\t\telse puts(\"YES\"), merge(x ^ 1, y), merge(x, y ^ 1);\n\t\t}\n\t}\n\twhile (k --) {\n\t\tcin >> str;\n\t\tint x = mp[str];\n\t\tcin >> str;\n\t\tint y = mp[str];\n\t\tif (find(x) == find(y)) puts(\"1\");\n\t\telse if (find(x ^ 1) == find(y)) puts(\"2\");\n\t\telse puts(\"3\");\n\t}\n\treturn 0;\n}\n```\n\n# E. Mahmoud and a xor trip\n\n## 题意概述\n\n给你一棵树，每个点有一个权值。\n定义两个点之间的路径长度为所有经过的点的权值的异或和。\n询问所有点对之间的长度和。\n\n## 思路\n\n按位拆分，然后稍微 dp 一下就行了。\n\n## 代码\n\n**C++**\n\n```cpp\n#include <bits/stdc++.h>\n#define N 1000020\n#define LG 22\n#define ll long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=='-'&&(f=0)||(ch=getchar());\n\twhile(ch<='9'&&ch>='0')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn f?x:-x;\n}\nint head[N/10], to[N/5], nxt[N/5], cnt;\nvoid insert(int x, int y) {\n\tto[++cnt] = y; nxt[cnt] = head[x]; head[x] = cnt;\n\tto[++cnt] = x; nxt[cnt] = head[y]; head[y] = cnt;\n}\nbool a[N][LG];\nint f[N][2], bit;\nll sum, ans;\nvoid dfs(int x, int fa) {\n\t// printf(\"%d %d :: %d\\n\", x, fa, bit);\n\tint qwq = a[x][bit];\n\tf[x][qwq] = 1;\n\tfor (int i = head[x]; i; i = nxt[i])\n\t\tif (to[i] != fa) {\n\t\t\tdfs(to[i], x);\n\t\t\tsum = sum + f[x][0] * f[to[i]][1] + f[to[i]][0] * f[x][1];\n\t\t\tf[x][1] += f[to[i]][1 ^ qwq];\n\t\t\tf[x][0] += f[to[i]][0 ^ qwq];\n\t\t}\n}\nint main(int argc, char const *argv[]) {\n\tint n = read();\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x = read();\n\t\tans += x;\n\t\tfor (int j = 0; j < LG; j++)\n\t\t\ta[i][j] = x >> j & 1;\n\t}\n\tfor (int i = 1; i < n; i++)\n\t\tinsert(read(), read());\n\tfor (bit = 0; bit < LG; bit++) {\n\t\tmemset(f, 0, sizeof f);\n\t\tsum = 0;\n\t\tdfs(1, 0);\n\t\tans = ans + (sum << bit);\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n\n# 总结\n\n这场还算简单，没有不可做题。\n\n下次做场难一点的吧。。。太水浪费时间。\n\n\n",
      "createdAt": "2017-10-12T11:26:50.000Z",
      "updatedAt": "2023-02-26T22:39:34.318Z",
      "banner": "",
      "category": "题解",
      "tags": ["codeforces", "javascript", "dp"],
      "pin": 0,
      "hidden": false,
      "views": 418
    },
    {
      "slot": "codeforces-round-439-div-2-solution",
      "title": "Codeforces Round #439 (Div. 2) 题解",
      "content": "\n# 前言\n\n吃着空写写水题题解。\n大佬就不要看了。\n\nP.S. 我发现同样一份代码打四遍是在浪费时间，所以这次每题只放一份代码。\n\n# A. The Artful Expedient\n\n## 题意概述\n\n给你两个数组，问你所有满足 `x[i] ^ y[j] == x[k]` 或者 `x[i] ^ y[j] == y[k]` 的数对$(i, j)$的数量的奇偶性。\n\n奇数输出`Koyomi`，偶数输出`Karen`。\n\n<!-- more -->\n\n## 思路\n\nemmmmmm......\n其实只要能找到一个$(i, j)$，那么$(i, k)$或者$(k, j)$也是满足条件的。\n所以一定是偶数。直接输出`Karen`就行了。\n\n\n\n## 代码\n\n**php**\n\n```php\nKaren\n```\n\n# B. The Eternal Immortality\n\n## 题意概述\n\n求$\\Pi^b_{i=a}\\pmod{10}$\n\n## 思路\n\n暴力求。\n当答案是$0$之后就直接跳出好了。\n\n## 代码\n\n**python**\n\n```python\na, b = map(int, input().split(' '))\nc = 1\na += 1\nwhile a <= b :\n\tc = c * a % 10\n\ta += 1\n\tif c == 0 :\n\t\tbreak\nprint(c)\n```\n\n# C. The Intriguing Obsession\n\n## 题意概述\n\n有三种颜色的岛。\n每种颜色的岛之间要么没有路，要么最短路大于等于 3 。\n输出方案数，对 $998,244,353$ 取模。\n\n## 思路\n\n考虑每两种岛之间连边。\n根据题目条件，每个岛要么连一条向另一种颜色的边，要么不连。\n这就是一个组合数问题了。\n然后总方案数就是三种颜色的岛两两计算的乘积了。\n\n## 代码\n\n**python**\n\n```python\na, b, c = map(int, input().split(' '))\np = 998244353\n\ndef calc (a, b) :\n\tif a > b:\n\t\ta, b = b, a\n\tans = 0\n\ttmp = 1\n\tfor i in range(a + 1):\n\t\tans = (ans + tmp) % p\n\t\ttmp = tmp * (a - i) * (b - i) * pow(i + 1, p - 2, p) % p\n\treturn ans\n\nans = calc(a, b) * calc(b, c) * calc(a, c) % p\n\nprint(ans)\n```\n\n# ~~D. The Overdosing Ubiquity~~\n\n不会\n\n# E. The Untended Antiquity\n\n## 题意概述\n\n平面内，每次让你删除一个矩形或者添加一个矩形，或者询问两个点$(x_1, y_1), (x_2, y_2)$能否不跨越矩形的边到达。\n\n**保证矩形不会重叠**\n\n## 思路\n\n直接上二维树状数组，要有信仰。\n\n## 代码\n\n**JavaScript**\n\n```javascript\n;(function () {\n\tvar f = new Array();\n\tfor (var i = 1; i <= 2520; i++)\n\t\tf[i] = new Array(2521).join(0).split('')\n\tvar str = readline().split(' '),\n\t\tn = +str[0],\n\t\tm = +str[1],\n\t\tk = +str[2],\n\t\tcnt = 0;\n\tvar add = function (a, b, v) {\n\t\tfor (var i = a; i <= n; i += i & -i)\n\t\t\tfor (var j = b; j <= m; j += j & -j)\n\t\t\t\tf[i][j] = +f[i][j] + v\n\t}\n\tvar ask = function (a, b) {\n\t\tvar ans = 0\n\t\tfor (var i = a; i; i ^= i & -i)\n\t\t\tfor (var j = b; j; j ^= j & -j)\n\t\t\t\tans += +f[i][j]\n\t\treturn ans\n\t}\n\tvar update = function (a, b, c, d, e) {\n\t\tadd(a, b, e);\n\t\tadd(a, d+1, -e);\n\t\tadd(c+1, b, -e);\n\t\tadd(c+1, d+1, e);\n\t}\n\tvar hash = function (a, b, c, d) {\n\t\treturn a * b * c * d;\n\t}\n\twhile (k --) {\n\t\tvar line = readline().split(' '),\n\t\t\top = +line[0],\n\t\t\tx1 = +line[1],\n\t\t\ty1 = +line[2],\n\t\t\tx2 = +line[3],\n\t\t\ty2 = +line[4],\n\t\t\tid = hash(x1, y1, x2, y2);\n\t\tif (op == 1) {\n\t\t\tupdate(x1, y1, x2, y2, id);\n\t\t} else if (op == 2) {\n\t\t\tupdate(x1, y1, x2, y2, -id);\n\t\t} else {\n\t\t\tprint(ask(x1, y1) === ask(x2, y2) ? 'Yes' : 'No');\n\t\t\t// print(ask(x1, y1))\n\t\t\t// print(ask(x2, y2))\n\t\t}\n\t}\n})();\n```\n\n# 总结\n\nAB 送分，C 题有一定的思维难度，D 题不会，E 题没读清题面导致傻掉。\n\n总体来讲还行。\n\n这场就这样吧。\n",
      "createdAt": "2017-10-11T13:14:12.000Z",
      "updatedAt": "2023-02-24T18:34:48.922Z",
      "banner": "",
      "category": "题解",
      "tags": ["codeforces", "javascript", "python"],
      "pin": 0,
      "hidden": false,
      "views": 345
    },
    {
      "slot": "html5-game",
      "title": "HTML5 游戏初探",
      "content": "\n尝试写一个类似 [diep.io](https://diep.io) 的 HTML5 多人在线游戏？\n\n> HTML5 是什么？兼容性怎么样？\n\nHTML5 早在 2014 年就已问世。\n目前来讲，所有的主流浏览器都支持 HTML5 的语法了。\n所以我们大可不必担心兼容性问题。\n<span class=\"truth\" title=\"你知道的太多了\">其实我们只用一个 canvas 就行了</span>\n\n<!-- more -->\n\n> 为什么选择 HTML5 而不是 flash 或 unity 呢？\n\nHTML5 不需要用插件，也不会有跨平台问题。\nflash 已经逐渐被埋没了。\n\n> HTML5 是编程语言吗？怎么用它写游戏？\n\n**不是。**\n\n<details>\n<summary>事实的真相</summary>\n<img src=\"/file/html5.jpg\">\n</details>\n\n# 依赖项目\n\n- [pixi.js](http://www.pixijs.com/) 用来绘制游戏画面\n- [socket.io](https://socket.io) 用来服务端与客户端之间通信，基于 WebSocket 技术\n\n\\* *上面两个项目可以手写，但是直接用现成的可以方便很多*\n\n# 逻辑框架\n\nMVC 框架相信大家就算不知道，也肯定有所耳闻。\n虽然这是个 50 多年前就提出的框架，但是依旧有参考价值。\n\nMVC 是指 **M**odel(模型)、**V**iew(视图) 以及 **C**ontroller(控制器)\n\n## Model(模型)\n\n建模是肯定要建的。\n\n考虑一下我们要保存什么。\n\n- 地图\n  - 宽(width)和高(height)\n  - 每个格子的具体方块([[int]])\n- 玩家\n  - 每个玩家一个唯一 id 用来识别身份(hash)\n  - 横纵坐标(vector)\n  - 目前的移动方向（速度）(vector)\n- 子弹\n  - 由谁射出（确保不会伤害到自己）(hash)\n  - 横纵坐标和移动方向(vector)\n\n其他的慢慢添加。\n\n## View(视图)\n\n用户层面，将从服务器接收的数据显示给用户。\n\n这里我们使用 pixi.js 简化开发过程。\n\n具体过程请参考 [pixi.js 简体中文教程](https://github.com/Zainking/learningPixi)，本文不再赘述。\n\n## Controller(控制器)\n\n`window.addEventListener` 监听按键和鼠标事件即可。\n每次移动方向有变化就向服务器发送一次数据。\n\n取消右键菜单 `document.oncontextmenu = (e) => false;`。\n\n# 具体分配工作\n\n- **游戏的逻辑全部在服务端运行**\n\n  包括玩家移动、子弹伤害、碰撞检测等内容，全部在服务端实现。\n  客户端只需要传回控制事件即可。\n  这一点非常重要。\n  不然很容易作弊（直接瞬移）。\n\n- **定时广播**\n\n  服务端每隔 1000/60ms 进行一次计算，并且将全部数据广播到客户端，由客户端向用户显示。\n  1000/60ms 可以保证有 60fps 的帧率。\n\n# 可能遇到的坑\n\n1. **socket.io 无法直接发送 Map 对象？**\n\n   socket.io 内部是使用 WebSocket 的。\n   由于它需要支持传送 JavaScript Object，就只能先将其转变成 JSON 再发送。\n   然而 Map Object 好像不支持 `JSON.stringify`（返回 `“{}”`）。\n   那么我们只能这么写：\n\n   ```js\n   // server\n   socket.emit('update', Array.from(players));\n\n   // client\n   socket.on('update', (_players) => {\n     const players = new Map(_players);\n   })\n   ```\n\n2. **蜜汁卡顿？**\n\n   那就卡顿吧，修不好的。\n\n3. **写到一半放弃梦想？**\n\n   那就放弃了吧。\n\n# 我的成果\n\n[swwind/ctanet](https://bitbucket.org/swwind/ctanet) <span class=\"hide\">权限是不可能给的，这辈子都不可能给的</span>\n\n![shiina-mashiro](/file/shiina-mashiro.jpg)\n\n\n\n\n\n\n",
      "createdAt": "2018-08-01T09:46:35.000Z",
      "updatedAt": "2023-02-25T20:59:51.345Z",
      "banner": "",
      "category": "教程",
      "tags": ["javascript"],
      "pin": 0,
      "hidden": false,
      "views": 314
    },
    {
      "slot": "reverse-sentense",
      "title": "翻转字符串！",
      "content": "\n<span class=\"hide\">突然想水博客</span>\n\n今天在网易云上看到这样一个评论：\n\n> ¡ǝɹɐ noʎ oɥʍ ʍouʞ uɐɔ I os uoʇʇnq ǝɥʇ ʞɔı̣lɔ uɐɔ noʎ 'ƃuǝʇuɐpǝpuɐı̣x lǝǝɟ oslɐ noʎ ʇɐɥʇ suɐǝɯ ǝƃɐssɐd sı̣ɥʇ pɐǝɹ uɐɔ noʎ ɟı̣ 'ǝƃɐssɐd sı̣ɥʇ uı̣ ƃuı̣ɥʇǝɯos noʎ llǝʇ oʇ ǝʌɐɥ I :ɹɐǝp ʎɯ\n\n看起来是不是很酷？\n\n那我们就试着来写一个这样的一个翻译器。\n\n<!-- more -->\n\n用什么写呢？\n\n<details>\n  <summary>一张用来搞笑的图</summary>\n  <img src=\"https://cdn.vijos.org/file/059e249ee4ab1314ac1f786ec5cee3e9fb164709\">\n</details>\n\n那我们就用上边提到的三样东西都写一遍，做一下对比。\n\n首先一张表是一定要打的啦。\n\n```javascript\nconst trans = {\"a\": \"ɐ\", \"b\": \"q\", \"c\": \"ɔ\", \"d\": \"p\", \"e\": \"ǝ\", \"f\": \"ɟ\", \"g\": \"ƃ\", \"h\": \"ɥ\", \"i\": \"ı\", \"j\": \"ɾ\", \"k\": \"ʞ\", \"l\": \"l\", \"m\": \"ɯ\", \"n\": \"u\", \"o\": \"o\", \"p\": \"d\", \"q\": \"b\", \"r\": \"ɹ\", \"s\": \"s\", \"t\": \"ʇ\", \"u\": \"n\", \"v\": \"ʌ\", \"w\": \"ʍ\", \"x\": \"x\", \"y\": \"ʎ\", \"z\": \"z\", \"!\": \"¡\", \"&\": \"⅋\", \"_\": \"‾\", \"?\": \"¿\", \"A\": \"∀\", \"B\": \"q\", \"C\": \"Ɔ\", \"D\": \"p\", \"E\": \"Ǝ\", \"F\": \"Ⅎ\", \"G\": \"פ\", \"H\": \"H\", \"I\": \"I\", \"J\": \"ſ\", \"K\": \"ʞ\", \"L\": \"˥\", \"M\": \"W\", \"N\": \"N\", \"O\": \"O\", \"P\": \"Ԁ\", \"Q\": \"Q\", \"R\": \"ɹ\", \"S\": \"S\", \"T\": \"┴\", \"U\": \"∩\", \"V\": \"Λ\", \"W\": \"M\", \"X\": \"X\", \"Y\": \"⅄\", \"Z\": \"Z\", \"9\": \"6\", \"6\": \"9\", \"7\": \"ㄥ\", \"3\": \"Ɛ\", \",\": \"`\", \"]\": \"[\", \"[\": \"]\", \"(\": \")\", \")\": \"(\", \"}\": \"{\", \"{\": \"}\", \"\\\\\": \"/\", \"/\": \"\\\\\", \"<\": \">\", \">\": \"<\", \"`\": \",\"};\nString.prototype.reverse = function () {\n  return [...this].reverse().map(c => trans[c] || c).join([])\n}\n```\n\n### jQuery 大法\n\n首先就用我最早接触的 jQuery 啦 ( • ̀ω•́ )✧\n\n简短而不失风度。\n\n```javascript\n$('#jquery textarea').on('input', (e) => {\n  let elem = $(e.currentTarget)\n  elem.next().text(elem.val().reverse())\n})\n```\n\n```html\n<div id=\"jquery\">\n  <p><b>jQuery Demo</b></p>\n  <textarea></textarea>\n  <div id=\"jquery-result\"></div>\n</div>\n<!-- cdn -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n```\n\n### React 大法\n\n接着我们来用用一个灰常好的框架：React。\n\n你也不需要做太多的事情。\n\n~~无视高亮~~\n\n```jsx\nclass Reverser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: ''\n    }\n  }\n  handle() {\n    this.setState({\n      text: this.refs.input.value\n    });\n  }\n  render() {\n    return (\n      <div>\n        <p><b>React Demo</b></p>\n        <textarea onChange={ this.handle.bind(this) } ref=\"input\"></textarea>\n        <div>{ this.state.text.reverse() }</div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Reverser/>,\n  document.getElementById('react-demo')\n)\n```\n\n```html\n<div id=\"react-demo\"></div>\n<!-- 下面素质三连 -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/16.4.0-alpha.0911da3/umd/react.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.4.0-alpha.0911da3/umd/react-dom.production.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/7.0.0-beta.3/babel.min.js\"></script>\n```\n\n### Vue 大法\n\n没听说过 Vue？\n洛谷的前端似乎就是用 Vue 写的。\n<span class=\"truth\" title=\"你知道的太多了\">所以洛谷的 UI 经常会爆炸</span>\n\n```javascript\nvar vuedemo = new Vue({\n  el: '#vue-demo',\n  data: {\n    result: ''\n  },\n  methods: {\n    handle: function (e) {\n      this.result = e.srcElement.value.reverse()\n    }\n  }\n})\n```\n\n```html\n<div id=\"vue-demo\">\n  <p><b>Vue Demo</b></p>\n  <textarea v-on:input=\"handle\"></textarea>\n  <div v-text=\"result\"></div>\n</div>\n<!-- cdn -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.17-beta.0/vue.min.js\"></script>\n```\n\n### 对比\n\n数字均为越小越好。\n\n项目 | js 代码长度 | html 代码长度 | 依赖大小\n--- | ---------- | ------------ | ------\njQuery | 1 | 2 | 87KB\nReact | 3 | 1 | 1.15MB\nVue | 2 | 2 | 86KB\n\n~~事实证明，jQuery 还是很不错的。~~\n\n但是 jQuery 太好破解了。\n\n~~看看人家 BZOJ，用户名合法性验证写在前端~~\n~~中文 ID 随便注册~~\n\n经过打包压缩后的 React 可不这么容易破解。\n\n",
      "createdAt": "2018-04-11T10:19:03.000Z",
      "updatedAt": "2023-02-26T01:54:57.667Z",
      "banner": "",
      "category": "颓废",
      "tags": ["jQuery", "React", "Vue"],
      "pin": 0,
      "hidden": false,
      "views": 329
    },
    {
      "slot": "zjoi-day2",
      "title": "ZJOI day2 游记",
      "content": "\n## Day0\n\n中午出发，一个小时多一点就到了宾馆。\n~~我 swwind 就是饿死，死这儿，从这里跳下去，也不会去食堂吃晚饭的。~~\n\n晚上贝爷来了我们房间，并且似乎打算三天都待在这里了。（可怜的小猪独守空房\n\n网上没事干，打算更新一下我的个人主页。\n\n吐槽一句：Matter.js 的中文文档就这么少么。\n搞得我只能用 `console.log` 查 API。\n\n<!-- more -->\n\n## Day1\n\n乖乖地去了 7 楼吃早饭。\n我后悔了。\n\n上午坐在第一排听课。\n讲 SCSS 的时候满脑子想着 [SCSS](https://www.npmjs.com/package/scss)。\n我是不是没救了。\n\n下午杂题选讲。\n\n晚上试机。\n~~哇塞，坐我旁边的是个妹子~~\n\n- 开机 5 分钟\n- XP 系统\n- 1.96 GB 内存\n- 3.2 GHz\n\n> 等省选比完就把这里的电脑全部扔掉。\n\n> ——余姚中学\n\n~~晚饭真香。~~\n\n晚上把首页的小游戏写好了。\npush 上去一发！看看多久才有人发现。\n\n## Day2\n\n早饭去大食堂吃。\n\n上午讲集训队互测题。\n一回头发现 zhzh2001 正在玩我的首页。\n这发现的也太快了吧。。\n\n下午杂题选讲。\n\n晚上睡得比较早。\n\n## Day3\n\n8 点放出了密码。\n双击 pdf。。怎么打不开。。。\n\n那我换个打开方式。\n嗯、、Photoshop？\n卧槽打开了（惊）。\n\nT1 什么鬼，打表似乎有 20 分。\nT2 看起来似乎很可做的样子。\nT3 卧槽计算几何、果断弃疗。\n回去先打 T2 暴力。嗯？怎么 WA 了？\n调了半天调不出来，就放着打 T1 哈希去了。\n哈希打完，发现 $n=10$ 的时候萎掉了。\n乱搞搞了好久，发现还是过不了样例。\nfake 回去调 T2。突然发现自己没开 `long long`。\n然后我似乎有了一个绝妙的 $O(nmk)$ 的算法，发现只有半个小时了。\n调了好久，终于过了小样例。\n一测大样例，凉了。\n\n出来以后估分贝爷 90，司机 140，zyy 80。\n%%% wzp AC T2。\n\n## Day4\n\n哇塞出成绩了。\n\n%%% szb & wzp 130 rk1\n\nszb: 卧槽我 T2 写了 60 分算法 A 了\n\n我只有 10+20+0=30 分。\n\n-----\n\n![我永远喜欢雪ノ下雪乃](/file/yukinoshita-yukino.jpg \"我永远喜欢雪ノ下雪乃\")\n\n",
      "createdAt": "2018-04-24T02:14:51.000Z",
      "updatedAt": "2023-02-24T18:35:46.389Z",
      "banner": "",
      "category": "游记",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 298
    },
    {
      "slot": "certificate",
      "title": "给 localhost 颁发一份证书",
      "content": "\n~~我们可以直接使用 `openssl`。~~\n\n什么 `openssl`，不存在的，我就是要用 nodejs 写。\n\nnpm 上有一个 `node-forge` 库，相当于纯 js 写的 `openssl`。\n\n我们来讲讲怎么用它。\n\n<!-- more -->\n\n# 生成并安装自签名的 CA 根证书\n\n```js\n// 创建一份随机钥匙对\nconst keys = forge.pki.rsa.generateKeyPair(2048);\n// 创建证书\nconst cert = forge.pki.createCertificate();\n// 使用公钥\ncert.publicKey = keys.publicKey;\n// 序列号（？\ncert.serialNumber = String(Date.now());\n// 设置有效日期\ncert.validity.notBefore = new Date();\ncert.validity.notBefore.setFullYear(cert.validity.notBefore.getFullYear() - 5);\ncert.validity.notAfter = new Date();\ncert.validity.notAfter.setFullYear(cert.validity.notAfter.getFullYear() + 20);\n// 属性设置\nconst attrs = [\n  { name: 'commonName', value: 'My Certificate Authority' },\n  { name: 'countryName', value: 'CN' },\n  { shortName: 'ST', value: 'Zhejiang' },\n  { name: 'localityName', value: 'Shaoxing' },\n  { name: 'organizationName', value: 'Myself' },\n  { shortName: 'OU', value: 'https://blog.swwind.me' }\n];\n// 设置 subject\ncert.setSubject(attrs);\n// 设置颁发者\ncert.setIssuer(attrs);\n// 设置 Extensions\n// 这里不用改\ncert.setExtensions([{\n  name: 'basicConstraints',\n  critical: true,\n  cA: true\n}, {\n  name: 'keyUsage',\n  critical: true,\n  keyCertSign: true\n}, {\n  name: 'subjectKeyIdentifier'\n}]);\n\n// 用自己的私钥给 CA 根证书签名\ncert.sign(keys.privateKey, forge.md.sha256.create());\n\n// 公钥 ca.crt\nconsole.log(forge.pki.certificateToPem(cert));\n// 私钥 ca.key.pem\nconsole.log(forge.pki.privateKeyToPem(keys.privateKey));\n```\n\n接下来我们需要的是安装我们的 CA 根证书（添加到信任列表）。\n\n## Windows\n\n```cmd\ncertutil -addstore -f \"ROOT\" ca.crt\n```\n\n## MacOS\n\n```bash\nsudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain ca.crt\n```\n\n## Linux\n\n直接通过浏览器 import，简单粗暴。\n\n# 签发 localhost 的证书\n\n```js\n// 读取根证书 caCert 和 caKey\nconst caCertPem = fs.readFileSync('ca.crt', 'utf8');\nconst caKeyPem = fs.readFileSync('ca.key.pem', 'utf8');\nconst caCert = forge.pki.certificateFromPem(caCertPem);\nconst caKey = forge.pki.privateKeyFromPem(caKeyPem);\n\n// 生成随机秘钥对\nconst keys = forge.pki.rsa.generateKeyPair(2048);\n// 生成证书\nconst cert = forge.pki.createCertificate();\ncert.publicKey = keys.publicKey;\ncert.serialNumber = String(Date.now());\ncert.validity.notBefore = new Date();\ncert.validity.notBefore.setFullYear(cert.validity.notBefore.getFullYear() - 1);\ncert.validity.notAfter = new Date();\ncert.validity.notAfter.setFullYear(cert.validity.notAfter.getFullYear() + 10);\n\nconst attrs = [\n  { name: 'commonName', value: 'localhost' },\n  { name: 'countryName', value: 'CN' },\n  { shortName: 'ST', value: 'Zhejiang' },\n  { name: 'localityName', value: 'Shaoxing' },\n  { name: 'organizationName', value: 'Myself' },\n  { shortName: 'OU', value: 'https://blog.swwind.me' }\n];\n\n// 颁发者设置为根证书\ncert.setSubject(attrs);\ncert.setIssuer(caCert.subject.attributes);\n\n// 证书设置\ncert.setExtensions([{\n  name: 'basicConstraints',\n  critical: true,\n  cA: false\n}, {\n  name: 'keyUsage',\n  keyCertSign: true,\n  digitalSignature: true,\n  nonRepudiation: true,\n  keyEncipherment: true,\n  dataEncipherment: true\n}, {\n  name: 'extKeyUsage',\n  serverAuth: true,\n  clientAuth: true,\n  codeSigning: true,\n  emailProtection: true,\n  timeStamping: true\n}, {\n  name: 'nsCertType',\n  client: true,\n  server: true,\n  email: true,\n  objsign: true,\n  sslCA: true,\n  emailCA: true,\n  objCA: true\n}, {\n  name: 'subjectAltName',\n  // 这里填多个域名或者 ip\n  altNames: [{\n    type: 2, // DNS\n    value: 'localhost'\n  }, {\n    type: 7, // ipv4\n    ip: '127.0.0.1'\n  }, {\n    type: 7, // ipv6\n    ip: '[::1]'\n  }]\n}, {\n  name: 'subjectKeyIdentifier'\n}]);\n// 使用根证书签名\ncert.sign(caKey, forge.md.sha256.create());\n\n// 公钥 localhost.crt\nconsole.log(forge.pki.certificateToPem(cert));\n// 私钥 localhost.key.pem\nconsole.log(forge.pki.privateKeyToPem(keys.privateKey));\n```\n\n然后就可以用 `localhost.crt` 和 `localhost.key.pem` 为所欲为啦。\n\n可以用 `http-server` 测试一下\n\n```bash\nyarn global add http-server\necho hello world > index.html\nhttp-server -S -C localhost.crt -K localhost.key.pem\n```\n\n效果：\n\n![chrome-https](/file/chrome-https.png)\n\n<span class=\"truth\" title=\"还是我操作不对\">firefox 上截不了图</span>\n\n# 其他偷懒方法\n\n~~[mkcert](https://github.com/FiloSottile/mkcert) 只需要两句话~~\n\n```bash\nmkcert -install\nmkcert localhost 127.0.0.1 ::1\n```\n\n<span class=\"hide\">我就是要把最方便的方法放在最后面</span>\n\n[end]\n",
      "createdAt": "2019-04-06T03:01:55.000Z",
      "updatedAt": "2023-02-28T23:23:37.857Z",
      "banner": "",
      "category": "教程",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 1119
    },
    {
      "slot": "anbox-arknights",
      "title": "在 Arch Linux 上用 Anbox 玩舟游",
      "content": "本文简单总结在 Arch Linux 上安装 Anbox 并用其来玩舟游的一些步骤。\n\n*注意：也许您应该多参考 [ArchWiki](https://wiki.archlinux.org/title/Anbox) 而不是本博客。*\n\n*注意：Anbox 可悲的兼容性也许只能用来勉强玩玩舟游。*\n\n*⚠⚠⚠警告⚠⚠⚠：(2022/6/6) 本文已经过时，新的 linux-zen 5.18 内核已经不再提供 ashmem 模块，而是使用 memfd 作为替代。如果您还想继续玩 Arknights，您可以使用 [Waydroid](https://wiki.archlinux.org/title/Waydroid) 作为 Anbox 的替代，或者自己编译 linux 内核。*\n\n<!-- more -->\n\n## 安装 Anbox\n\n以前的直接安装 `dkms` 的方法已经在新版本的内核下失效，我们只能用别的办法。\n\n### 安装内核\n\n安装使用 `linux-zen` 内核。\n\n```bash\nsudo pacman -S linux-zen\n# update grub (maybe differ)\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n```\n\n之后重启计算机。\n\n### 添加 binderfs\n\n```bash\nsudo mkdir /dev/binderfs\nsudo mount -t binder none /dev/binderfs\n```\n\n让系统每次启动的时候都自动执行上面的两行指令：\n\n1. 新建文件 `/etc/tmpfiles.d/anbox.conf`\n\n   ```\n   d! /dev/binderfs 0755 root root\n   ```\n\n2. 在 `/etc/fstab` 中最后添加一行\n\n   ```\n   none                         /dev/binderfs binder   nofail  0      0\n   ```\n\n### 安装 Android 镜像\n\n```bash\nsudo pacman -S anbox-image\n```\n\n不建议使用带 GApps 的镜像，因为你会发现 Google Play 里面的 App 一个都装不了。\n\n### 安装 Anbox\n\n```bash\nsudo pacman -S anbox-git\nsudo systemctl enable --now anbox-container-manager.service\n```\n\n### 配置网络\n\n如果你用 NetworkManager：\n\n```bash\nnmcli con add type bridge ifname anbox0 -- connection.id anbox-net ipv4.method shared ipv4.addresses 192.168.250.1/24\n```\n\n### 启动 Anbox\n\n直接在你的 kde 菜单里面找到 `anbox`，然后点击即可。\n\n如果启动失败，则需要排查问题。\n\n> 博主遇到的一个问题：\n> \n> ```\n> [client.cpp:48@start] Failed to start container: Failed to start container: Failed to set config item lxc.group.devices.deny\n> ```\n> \n> 降级 lxc 至 4.0.6 版本解决。\n\n## 安装舟游！\n\n首先到官网里面直接下载 apk（不会真的有人玩 b 服吧）。\n\n之后通过 `adb` 安装。\n\n```bash\nsudo pacman -S android-tools\n\nadb devices\n# you should see such that:\n#   List of devices attached\n#   emulator-5558\tdevice\n\nadb install Downloads/arknights-hg-1501.apk\n```\n\n等待片刻即安装完毕。\n\n之后可以直接在系统 Applications 里面找到 Arknights，直接点击启动即可。\n\n## 若干问题的解决方案\n\n### 窗口上方的白条不见了\n\n> Q: 我怎么点什么按钮都有垂直方向上的偏差啊\n\n这是因为你原来在窗口上方应该存在的高度 42px 的窗口栏不见了（因为特性）。\n\n打开别的什么 Anbox App，或者在别的 Anbox App 里面多点几下，窗口栏应该会回来。\n\n注意窗口栏回来之后就不要再修改窗口大小或者移动窗口了，否则他又会消失了。\n\n或者参考我的 PR: [anbox/anbox#1810](https://github.com/anbox/anbox/pull/1810)\n\n### 帧率太低\n\n> Q: 老子高配电脑怎么还掉帧啊\n\n可能是你的 Nvidia 驱动没装好。\n\n安装 Nvidia 驱动（警告：做好重装电脑准备）：\n\n```bash\nsudo pacman -S linux-headers linux-zen-headers\nsudo pacman -S dkms\npikaur -S nvidia nvidia-dkms opencl-nvidia\n```\n\n然后重启（祝你好运）。\n\n## 结尾\n\nAnbox 虽然安装过程过于复杂，而且兼容性也非常感人，但是其性能是真的不错，比在 VirtualBox 里面用 Android x86 虚拟机不知道快到哪里去了。\n\n另：欢迎加好友带带我 `swwind#2659`。\n",
      "createdAt": "2021-05-10T14:42:11.000Z",
      "updatedAt": "2023-02-28T23:23:39.142Z",
      "banner": "/file/photo_2021-05-10_22-55-08.jpg",
      "category": "教程",
      "tags": ["anbox", "arknights", "archlinux"],
      "pin": 0,
      "hidden": false,
      "views": 2148
    },
    {
      "slot": "vue3-ssr-tutorial",
      "title": "Vue 3 SSR 全站框架指南",
      "content": "距离 Vue 3 的发布已经过去很久了，本人由于奇妙的大一年度计划被迫重新走上了前端的开发之路。个人感觉，Vue 3 相较于 Vue 2 确实改进了许多东西。其中的 Composition API 大大简化了代码的分散程度，以及 Async Component 更是对异步请求页面的服务端渲染提供了完美的支持。\n\n由于本人折腾的时间过长，因此决定有必要总结一下目前个人将 Vue 3 网站全面实现服务端渲染（SSR）的解决方案。\n\n**注意：本文已经过时**\n\n<!-- more -->\n\n## 安装依赖\n\n`@vue/server-renderer` 是专门为 Vue 3 量身定制的 SSR 代码库，但是令人惶恐的是他只提供了一个方法 `renderToString`，并且没有提供任何文档。\n\n与此同时在网上能找到的 Vue SSR 文档都是关于 `vue-server-renderer` 这个只能支持 Vue 2 的包的使用指南。\n\n所以我们只能自己折腾了，不过基本的思路还是跟 Vue 2 的 SSR 类似。\n\n## 渲染成字符串\n\n`@vue/server-renderer` 中提供了 `renderToString` 方法，其中第一个参数接受一个用 `Vue.createSSRApp` 来创建的实例。该方法会将实例渲染成 html 代码，但是仅仅只是包括 html 代码，所以别的什么东西还是要靠自己解决。\n\n```javascript\nconst App = {\n  data() { return { msg: 'hello' }; },\n  template: `<div>{{ msg }}</div>`,\n}\n\nconst app = Vue.createSSRApp(App);\nconst html = await renderToString(app); // \"<div>hello</div>\"\n```\n\n这是最基本的使用方法，同时他也可以渲染 Async Component，但是需要套在一个 `<Suspense>` 里面。`<Suspense>` 是专门用来渲染 Async Component 的一个东西，直接用就可以了。\n\n```js\nconst AsyncComponent = {\n  template: `<div>{{ msg }}</div>`,\n  async setup() {\n    await new Promise((s) => setTimeout(s, 1000));\n    // 这里可以发送一些异步的请求并处理结果\n    return {\n      msg: 'Elaina is my waifu!',\n    }\n  }\n}\n\n// 把异步控件套在 Suspense 里面\nconst App = {\n  template: `<Suspense><AsyncComponent/></Suspense>`,\n  components: { AsyncComponent },\n}\n\nconst app = Vue.createSSRApp(App);\nconst html = await renderToString(app); // \"<div>Elaina is my waifu!</div>\"\n```\n\n## 结合 vue-router\n\n把 `<Suspense>` 结合到 `<router-view>` 里面需要用一些奇怪的写法，并且可以顺便处理一下页面加载失败的情况。\n\n```html\n<router-view v-slot=\"{ Component }\">\n  <suspense>\n    <template #default>\n      <component :is=\"Component\"/>\n    </template>\n    <template #fallback>\n      <div>Loading...</div>\n    </template>\n  </suspense>\n</router-view>\n```\n\n如此这样，我们便可以直接在 vue-router 当中使用 Async Component 了。\n\n```js\nconst router = createRouter({\n  routes: [{\n    path: '/async',\n    component: AsyncComponent,\n  }],\n});\n```\n\n值得注意的是，这里似乎有一个奇怪的特性，如果你想让 vue-router 把 params 当成 props 传入 Async Component 的话必须手动指定 props 的类型。否则你将会得不到任何 props。\n\n```js\nconst RegionView = {\n  template: `\n\t<div>Region: {{ region }}</div>\n\t<div>Post: {{ post }}</div>\n  `,\n  props: {\n    region: {\n      type: String,\n      required: true,\n    },\n    post: {\n      type: String,\n      required: true,\n    }\n  },\n  async setup(props) {\n    const { region, post } = Vue.toRefs(props);\n    \n    // region.value => string\n    // post.value => string\n      \n    // 如果你不添加 props 属性\n    // region => undefined\n    // post => undefined\n  }\n}\n\nconst router = createRouter({\n  routes: [{\n    path: '/r/:region/:post',\n    component: AsyncComponent,\n    props: true, // 把 params 当成 props 传入\n  }],\n});\n```\n\n## 渲染标题和其他 meta 标签\n\n`vue-router` 可以给路由添加一些 meta 属性，这些属性可以在服务端渲染的时候被使用。\n\n```js\nconst router = createRouter({\n  // ...\n  routes: [{\n    path: '/async',\n    component: AsyncComponent,\n    meta: {\n      title: 'Async Page',\n    }\n  }],\n});\n\nrouter.push('/async');\nawait router.isReady();\n\nrouter.currentRoute.value.meta; // { title: 'Async Page' }\n```\n\n但是很多时候我们发现，这些属性是需要根据页面内容动态更新的。因此个人感觉 `vue-router` 的 meta 属性不适合处理这些信息。\n\n那怎么办呢，我们可以使用 Vuex 的状态来模拟这些 meta 属性，甚至是 HTTP 响应码。\n\n```js\n// @/store/ssr.js\n\nexport default {\n  // 注意状态一定要用函数形式\n  state: () => ({\n    title: '',\n    status: 200,\n  }),\n  mutations: {\n    [MutationTypes.HTTP_STATUS](state, payload) {\n      state.status = paylaod;\n    },\n    [MutationTypes.SET_TITLE](state, payload) {\n      state.title = paylaod;\n    },\n  },\n}\n```\n\n这样我们就可以在 `setup` 函数里面游刃有余地控制这些 meta 属性了。\n\n```js\nimport { useStore } from 'vuex';\n\nexport default {\n  async setup() {\n    const store = useStore();\n    // fetch some data\n    const result = await fetch('https://example.com');\n    if (result.status === 200) {\n      store.commit(MutationTypes.HTTP_STATUS, 200);\n    } else {\n      store.commit(MutationTypes.HTTP_STATUS, 404);\n    }\n    // ...\n  }\n}\n```\n\n同理还可以添加更多的 meta 属性提供给 SSR。\n\n## 渲染状态\n\n服务端渲染的时候我们可以将当前的状态保存，并且在客户端加载的时候直接使用。\n\n```js\n// 服务端代码\nconst store = createStore({ ... });\napp.use(store);\n// ...\nconst html = await renderToString(app);\n// ...\nconst stateStr = JSON.stringify(store.state);\n\n// 将 stateStr 插入到 html 中\nresponseHTML = responseHTML.replace('</head>', `<script>window.__INITIAL_STATE__=${stateStr};</script></head>`);\n```\n\n```js\n// 客户端代码\nif (window.__INITIAL_STATE__) {\n  store.replaceState(window.__INITIAL_STATE__);\n}\n```\n\n## 一些小细节\n\n当我们访问服务器的时候可能带有一些例如 Cookie 的属性，而服务端渲染的时候默认不会使用这些 Cookie，导致渲染出来的页面可能和客户端渲染出来的页面不同。因此我们需要在服务端渲染的时候添加上这些特殊的身份识别属性。\n\n```js\naxios.defaults.headers.common['Cookie'] = ctx.get('Cookie');\n```\n\n但是这样会有一些问题，不同的请求可能同时到达服务器，直接设置 axios 的全局默认值可能导致 Cookie 的覆盖，从而导致很严重的安全问题。\n\n这个问题有两种解决方案，一种是对于每一个实例都单独新建一个 axios 的对象，还有一种就是使用一种类似于同步锁之类的东西。\n\n这里给出同步锁的示例代码\n\n```js\nlet locked = false;\nconst pendings = [];\nconst updateQueue = () => {\n  if (locked) {\n    return;\n  }\n  const top = pendings.shift();\n  if (!top) {\n    return;\n  }\n  locked = true;\n  top();\n};\n\nexport const lock = () => {\n  return new Promise((resolve) => {\n    pendings.push(resolve);\n    updateQueue();\n  });\n};\n\nexport const unlock = () => {\n  locked = false;\n  updateQueue();\n};\n\n// 使用时\nawait lock(); // 上锁\n// 设置 axios 全局 cookie\n// 发送所有请求\nconst html = await renderToString(app);\n// 清空 axios 的全局 cookie\nunlock(); // 解锁\n```\n\n这个同步锁可以保证 `await lock()` 和 `unlock()` 之间的代码同一时间只能有一个线程在执行，因此可以保证不会产生请求的冲突。\n\n## 打包\n\n我们需要打两份包：一份给客户端用，另外一份给服务端 SSR 用。\n\n由于折腾 webpack 过于复杂，这里直接偷懒用 `vue-cli-service build`。需要添加一份 `vue.config.js` 来区别对待这两份构建。\n\n```js\nconst nodeExternals = require(\"webpack-node-externals\");\nconst path = require('path');\n\nexports.chainWebpack = (webpackConfig) => {\n  if (process.env.SSR) {\n    webpackConfig\n      .entry(\"app\")\n      .clear()\n      .add(\"./src/main.server.js\");\n    webpackConfig.target(\"node\");\n    webpackConfig.output.libraryTarget(\"commonjs2\");\n    webpackConfig.externals(nodeExternals({ allowlist: [\n      /\\.(css|vue)$/,\n      /@babel/,\n    ] }));\n    webpackConfig.optimization.splitChunks(false).minimize(false);\n    webpackConfig.plugins.delete(\"hmr\");\n    webpackConfig.plugins.delete(\"preload\");\n    webpackConfig.plugins.delete(\"prefetch\");\n    webpackConfig.plugins.delete(\"progress\");\n    webpackConfig.plugins.delete(\"friendly-errors\");\n  } else {\n    // 使用 cdn 加载这三份依赖\n    webpackConfig.externals({\n      'vue': 'Vue',\n      'vuex': 'Vuex',\n      'vue-router': 'VueRouter',\n    });\n  }\n};\n\nexports.productionSourceMap = false;\n\nif (process.env.SSR) {\n  exports.filenameHashing = false;\n  exports.outputDir = path.resolve(__dirname, 'build', 'ssr');\n}\n```\n\n```bash\nvue-cli-service build          # 构建客户端\nSSR=true vue-cli-service build # 构建 SSR\n```\n\n如此，客户端的代码都将放入 `dist` 文件夹中，SSR 的代码都将放入 `build/ssr` 中。\n\n可以直接使用 `require('./build/ssr/app.js')` 来获取 SSR 部分的代码，并且拿 `dist/index.html` 来当作服务端渲染的模板。\n\n总体来说就是这样：\n\n```js\nconst template = await fs.readFile('dist/index.html', 'utf-8');\nconst gentemp = (title, meta, html, statestr) => {\n  const metastr = `<title>${title}</title>` + Object.keys(meta).map((key) => {\n    return `<meta name=\"${key}\" content=\"${meta[key]}\">`;\n  }).join('');\n\n  return template\n    .replace('<meta charset=\"utf-8\">', '<meta charset=\"utf-8\">' + metastr)\n    .replace('<div id=\"app\"></div>', `<div id=\"app\">${html}</div>`)\n    .replace('</head>', `<script>window.__INITIAL_STATE__=${statestr};</script></head>`);\n};\n```\n\n至此 Vue 3 SSR 框架搭建完毕，并且能够正常工作（大概。\n\n## 总结\n\n这个解决方案可能目前还不是很优美，但 Vue 3 仍在开发阶段，期待以后能有更加简便的解决方案。\n\n[end]\n\n",
      "createdAt": "2020-12-05T03:30:11.000Z",
      "updatedAt": "2023-02-28T23:23:39.487Z",
      "banner": "",
      "category": "教程",
      "tags": ["Vue", "javascript"],
      "pin": 0,
      "hidden": false,
      "views": 1931
    },
    {
      "slot": "bstar-unlock",
      "title": "bilibili 东南亚版本使用指南",
      "content": "本文简单讲解 bilibili 东南亚版本的情况，以及简单说明如何使用神秘手段访问其服务的方法。\n\n<!-- more -->\n\n## 关于 bilibili 东南亚版本\n\nbilibili 东南亚版本是叔叔给泰国以及东南亚的用户单独分离出去的一个站点，主要用于提供泰国以及东南亚的用户使用。为了避免和国内主站叫混，也有时称其为 Bstar。\n\n目前其网站端主域名为 `bilibili.tv`，视频流服务主要使用 `*.akamaized.net` 域名。网页端只需要有东南亚地区的 IP 地址即可访问。\n\n安卓端的 App ID 为 `com.bstar.intl`，可以从 [Google Play](https://play.google.com/store/apps/details?id=com.bstar.intl) 上直接下载。App 中的访问限制比较多，因此解锁访问较为麻烦，下文将会详细介绍解锁过程。\n\n## 网页端的使用\n\n前往新加坡即可直接访问网页端的 bilibili 东南亚版本。如果 IP 地址不在东南亚地区，则会看到白屏。\n\n注意某些软件中 `*.bilibili.tv` 和 `*.akamaized.net` 两个域名可能需要手动设置为经过代理才会生效。\n\n网页端可以访问基本全部内容，只是不能给叔叔钱开大会员。\n\n## 移动端的使用\n\n如果您想要给叔叔送钱开大会员，则需要使用 bilibili 东南亚版本的 App。\n\n首先您需要一台带有 Google Play 框架的安卓手机。\n\n### 注册 Google 小号\n\n**注意：如果您的 Google 帐号没有被锁区（或者没有进行过任何充值），则可以直接尝试切换到新加坡区。但是如果您已经被锁区（或者有可用余额），则不建议使用其一年一次的地区切换功能强行切换到新加坡区，个人建议可以直接注册一个新的帐号当作新加坡区小号来用。**\n\n首先将手机切换成英文，退出原有的 Google 帐号，并且飞往美国，使用美国的 IP 地址进行下面的操作。\n\n点开任意一个 Google 全家桶，然后按照流程注册。注意生日填写 15 岁，这时 Google 会认为你还没有手机，于是不会向您索要手机号码。\n\n这时便可以成功注册一个没有绑定任何手机号码的 Google 小号。注意千万不要忘记关联一个自己的邮箱地址，否则以后将会无法登陆。\n\n### 切换 Play 商店到新加坡区\n\n保持手机语言为英文，飞往新加坡，使用新加坡的 IP 地址进行下面的操作。\n\n设置中选择 Google Play，强制停止（Force stop），然后选择 Clear Storage 与 Clear Cache，这样就可以清除 Google Play 的缓存。\n\n重新打开 Google Play，这时应该可以看到商店变成了新加坡区的内容。\n\n之后直接点击安装 [bilibili](https://play.google.com/store/apps/details?id=com.bstar.intl) 即可。\n\n### 突破访问限制\n\n直接打开 App 也许看到的是一片空白（即使使用新加坡的 IP 地址），这是由于叔叔的技术手段限制，因此我们需要透过一些渠道去绕过它。\n\n按照手机是否 Root 分两种情况，关于如何安装 Magisk 和启用 LSPosed 均不在本文介绍范畴。\n\n1. 我的手机已经 Root，并且已经装好了 LSPosed：\n\n   直接安装这个插件 [com.github.bstartweaks](https://t.me/biliroaming_chat/416377)，启用之后强制停止 bilibili 之后再打开便可以突破访问限制。\n\n2. 我没法 Root：\n\n   访问 Telegram 频道 [@biliroaming_lspatch](https://t.me/biliroaming_lspatch) 并查看带有 `#bstar` 标签的内容，选择适合您的方法进行突破。\n\n突破之后登录就可以直接在手机上看 720p 画质的番剧了，不过要想看更加高清的画质就要给叔叔钱了。\n",
      "createdAt": "2022-02-19T19:19:30.644Z",
      "updatedAt": "2023-02-28T23:44:25.991Z",
      "banner": "",
      "category": "教程",
      "tags": ["bilibili"],
      "pin": 0,
      "hidden": false,
      "views": 3211
    },
    {
      "slot": "clean-bilibili",
      "title": "净化 b 站环境一键脚本",
      "content": "> b 站以陈睿的一句“b 站未来有可能会倒闭，但绝对不会变质”为嚆矢。滥觞于 ACG 的期望正失去它们的借鉴意义。但面对看似无垠的未来天空，我想循卡尔维诺“树上的男爵”的生活好过过早地振翮。\n> <!-- more -->\n> 我们怀揣热忱的灵魂天然被赋予对正版番剧的追求，不屑于广电总局的约束，钟情于在别处的芬芳。但当这种期望流于对敏感内容不假思索的批判，乃至走向圣光与暗牧主义时，便值得警惕了。与秩序的落差、错位向来不能为越矩的行为张本。而纵然我们已有翔实的蓝图，仍不能自持已在浪潮之巅立下了自己的沉锚。\n> \n> “我认为教育小孩‘世界上没有黑暗’是一件非常糟糕的事情。”虚渊玄之言可谓切中了肯綮。人的社会性是不可祓除的，而我们欲上青云也无时无刻不在因风借力。社会与家庭暂且被我们把握为一个薄脊的符号客体，一定程度上是因为我们尚缺乏体验与阅历去支撑自己的认知。而这种偏见的傲慢更远在知性的傲慢之上。\n> \n> 在孜孜矻矻以求生活意义的追番路上，对自己的期望本就是在与家庭与社会对接中塑型的动态过程。而我们的底料便是对不同生活方式、不同角色的觉感与体认。国家队的广自幼结识了 02，与其一同操控鹤望兰，最终拯救了地球。他的生活观念是厚实的，也是实践的。倘若我们在对一些福利镜头借广电之言“和谐”后，又对不断自我审查的 b 站进行“干杯”，那么在丢失外界预期的同时，未尝也不是丢了自我。\n> \n> 毫无疑问，从家庭与社会角度一觇的日本动漫有偏狭过时的成分。但我们所应摒弃的不是对此的批判，而是其批判的廉价，其对批判投诚中的反智倾向。在尼采的观念中，如果在成为狮子与孩子之前，略去了像骆驼一样背负前人遗产的过程，那其“永远重复”洵不能成立。何况当矿工诗人陈年喜顺从编辑的意愿，选择写迎合读者的都市小说，将他十六年的地底生涯降格为桥段素材时，我们没资格斥之以媚俗。\n> \n> 蓝图上的落差终归只是理念上的区分，在实践场域的分野也未必明晰。譬如当我们追寻心之所向时，在途中涉足权力的玉墀，这究竟是伴随着期望的泯灭还是期望的达成？在我们看番的同时，番剧也在浇铸我们。既不可否认原生的家庭性与社会性，又承认自己的图景有轻狂的失真，不妨让体验走在言语之前。用不被禁锢的头脑去体味切斯瓦夫·米沃什的大海与风帆，并效维特根斯坦之言，对无法言说之事保持沉默。\n> \n> 用在树上的生活方式体现个体的超越性，保持婞直却又不拘泥于所谓“遗世独立”的单向度形象。这便是卡尔维诺为我们提供的理想期望范式。生活在树上——始终热爱大地——升上天空。\n\n此脚本功能：屏蔽所有弹幕和评论(动态除外)，并且封锁 b 站番剧区。\n\n特殊情况可以按 `ctrl+z` 重新显示弹幕和评论。\n\n```js\n// ==UserScript==\n// @name         净化 b 站，世界清净\n// @namespace    https://www.bilibili.com/\n// @version      0.1\n// @description  fuck bilibili\n// @author       swwind\n// @match        https://www.bilibili.com/video/*\n// @match        https://www.bilibili.com/bangumi/play/ss*\n// @match        https://www.bilibili.com/bangumi/play/ep*\n// @grant        none\n// ==/UserScript==\n\n// 大幅改善 b 站使用体验\n\n(function() {\n    'use strict';\n\n    var style;\n\n    var mount = () => {\n        style = document.createElement('style');\n        style.innerHTML = '#comment,.media-rating,.review-module,.comment-wrapper,.bilibili-player-video-danmaku{opacity:0;}';\n        document.body.appendChild(style);\n    }\n\n    var unmount = () => {\n        if (style) style.remove();\n        style = null;\n    }\n\n    mount();\n\n    window.addEventListener('keydown', (e) => {\n        if (e.ctrlKey && e.code==='KeyZ') {\n            if (style) unmount();\n            else mount();\n        }\n    });\n\n    if (location.pathname.startsWith('/bangumi/play/')) {\n        document.write(\"<h1><b>DO NOT WATCH BANGUMI ON BILIBILI</b></h1>\");\n    }\n})();\n```",
      "createdAt": "2021-04-04T11:12:26.000Z",
      "updatedAt": "2023-02-24T18:34:36.505Z",
      "banner": "",
      "category": "工具",
      "tags": ["javascript"],
      "pin": 0,
      "hidden": false,
      "views": 368
    },
    {
      "slot": "galois-theory",
      "title": "【口胡】五次方程为何没有求根公式",
      "content": "为什么五次方程没有求根公式呢？本文将口胡伽罗瓦理论来证明五次及以上的方程没有求根公式。\n\n本文内容基本来自[这个口胡视频](https://youtu.be/CdBbPkXxc3E?list=PLYtoePJQbGmiq3lqkJcxSKW0eW5objmjQ)，因此你也可以直接去看这个视频。\n\n<!-- more -->\n\n## 五次以下方程的求根公式\n\n对于五次以下的方程数学家们老早就帮我们找好了求根公式。\n\n### 一次方程\n\n对于一元一次方程 $ax+b=0$ 易知有解 $x=-\\frac ba$。\n\n### 二次方程\n\n对于一元二次方程 $ax^2+bx+c=0$（其中 $a,b,c\\in\\mathbb R,a\\neq 0$），根据代数基本定理可知，该方程有两个复数根，设其为 $x_1,x_2$，于是我们可以将方程改写为 $a(x-x_1)(x-x_2)=0$，即 $ax^2-a(x_1+x_2)x+ax_1x_2=0$，与原式联立得\n\n$$\n\\begin{cases}\nx_1+x_2=-\\frac ba \\\\\nx_1x_2=\\frac ca\n\\end{cases}\n$$\n\n因此有\n\n$$\n\\begin{aligned}\n(x_1-x_2)^2&=(x_1+x_2)^2-4x_1x_2\\\\\n&=(-\\frac ba)^2-4\\frac ca \\\\\n&=\\frac{b^2-4ac}{a^2}\n\\end{aligned}\n$$\n\n可得\n\n$$\nx_1-x_2=\\pm\\frac{\\sqrt{b^2-4ac}}{a}\n$$\n\n又已知\n\n$$\nx_1+x_2=-\\frac ba\n$$\n\n联立得\n\n$$\nx_1,x_2=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}\n$$\n\n### 三次方程\n\n对于一元三次方程 $ax^3+bx^2+cx+d=0$，为简化问题，我们将每一项的系数都除以 $a$，得到 $x^3+Ax^2+Bx+C=0$。\n\n将 $x=y-\\frac A3$ 带入上式得\n\n$$\n\\begin{aligned}\n(y-\\frac A3)^3+A(y-\\frac A3)^2+B(y-\\frac A3)+C&=0 \\\\\n(y^3-Ay^2+\\frac {A^2}3y-\\frac {A^3}{27})+(Ay^2-\\frac {2A^2}3y+\\frac{A^3}9)+(By-\\frac {AB}3)+C&=0\\\\\ny^3+(B-\\frac{A^2}3)y+(\\frac{2A^3}{27}-\\frac{AB}3+C)&=0\n\\end{aligned}\n$$\n\n从而我们去掉了二次项。令 $p=B-\\frac{A^2}3,q=\\frac{2A^3}{27}-\\frac{AB}3+C$，可简写为\n\n$$\ny^3+py+q=0\n$$\n\n设原三次方程的其中一个解为 $x_1$，令 $y_1=x_1+\\frac A3=m+n$（其中 $m,n$ 为任取），则有\n\n$$\n\\begin{aligned}\n(m+n)^3+p(m+n)+q&=0\\\\\nm^3+n^3+3mn(m+n)+p(m+n)+q&=0\\\\\n(m+n)(p+3mn)+(q+m^3+n^3)&=0\n\\end{aligned}\n$$\n\n假设我们取的 $m,n$ 满足\n\n$$\n(m+n)(p+3mn)=q+m^3+n^3=0\n$$\n\n可得\n\n$$\n\\begin{cases}\nm^3+n^3=-q \\\\\nmn=-\\frac p3\n\\end{cases}\n$$\n\n由于\n\n$$\n\\begin{aligned}\n(m^3-n^3)^2&=(m^3+n^3)^2-4m^3n^3 \\\\\n&=q^2+\\frac{4p^3}{27}\n\\end{aligned}\n$$\n\n于是有\n\n$$\nm^3-n^3=\\pm\\sqrt{q^2+\\frac{4p^3}{27}}\n$$\n\n联立解得\n\n$$\nm^3,n^3=-\\frac q2\\pm\\sqrt{\\frac{q^2}4+\\frac{p^3}{27}}\n$$\n\n即\n\n$$\nm,n=\\sqrt[3]{-\\frac q2\\pm\\sqrt{\\frac{q^2}4+\\frac{p^3}{27}}}\n$$\n\n于是可以得到\n\n$$\n\\begin{aligned}\nx_1&=m+n-\\frac A3 \\\\\n&=\\sqrt[3]{-\\frac q2+\\sqrt{\\frac{q^2}4+\\frac{p^3}{27}}}+\\sqrt[3]{-\\frac q2-\\sqrt{\\frac{q^2}4+\\frac{p^3}{27}}}-\\frac A3\n\\end{aligned}\n$$\n\n对于三次方程 $x^3=1$，可以化为\n\n$$\n(x-1)(x^2+x+1)=0\n$$\n\n因此可以求得其三个根分别为\n\n$$\n\\begin{cases}\nx_1=1\\\\\nx_2=\\frac{-1+\\sqrt{3}i}2\\\\\nx_3=\\frac{-1-\\sqrt{3}i}2\n\\end{cases}\n$$\n\n令 $\\omega=x_2=\\frac{-1+\\sqrt{3}i}2$，则原三次方程的另外两个根即为\n\n$$\n\\begin{cases}\nx_2=\\omega m+\\omega^2n-\\frac A3 \\\\\nx_3=\\omega^2m+\\omega n-\\frac A3\n\\end{cases}\n$$\n\n### 四次方程\n\n同上，对于四次方程 $x^4+ax^3+bx^3+cx^2+dx+e=0$，将 $x=y-\\frac a4$ 带入可以消去三次项。将带入后所得的新方程设为 $y^4+Ay^2+By+C=0$，将其写成两个二次方程的乘积\n\n$$\n(y^2+ky+l)(y^2+my+n)=0\n$$\n\n展开后得\n\n$$\ny^4+(k+m)y^3+(l+km+n)y^2+(lm+kn)y+ln=0\n$$\n\n对比系数得\n\n$$\n\\begin{cases}\nk+m=0 \\\\\nl+km+n=A \\\\\nlm+kn=B \\\\\nln=C \\\\\n\\end{cases}\n$$\n\n解方程组得\n\n$$\nm=-k \\\\\n\\Rightarrow\n\\begin{cases}\nl+n=A+k^2 \\\\\nn-l=\\frac Bk \\\\\n\\end{cases} \\\\\n\\Rightarrow\n\\begin{cases}\n2n=A+k^2+\\frac Bk \\\\\n2l=A+k^2-\\frac Bk \\\\\n\\end{cases} \\\\\n\\Rightarrow\n(A+k^2+\\frac Bk)(A+k^2-\\frac Bk)=4C\n$$\n\n化简即得\n\n$$\nk^6+2Ak^4+(A^2-4C)k^2-B^2=0\n$$\n\n这是一个关于 $k^2$ 的一元三次多项式，因此 $k^2$ 可解，即 $k$ 可解，从而 $l,m,n$ 均可解。\n\n易知四次方程的其中两个根 $y_1,y_2$ 为二次方程 $y^2+ky+l=0$ 的两个根，$k, l$ 均可解，于是 $y_1,y_2$ 也均可解。\n\n同理，另外两个根 $y_3,y_4$ 满足 $y^2+my+n=0$，均可解。\n\n至此原四次方程的四个根都可解。\n\n最后的结果过于复杂此处略去。\n\n## 群论\n\n### 定义\n\n一个群由一个集合 $G$ 和一个二元运算（一般为 “$\\cdot$”）构成，并且要满足以下四个群公理：\n\n1. 封闭性：对于 $\\forall a,b \\in G$，满足 $a \\cdot b \\in G$；\n2. 结合律：对于 $\\forall a,b,c \\in G$，满足 $a \\cdot (b \\cdot c)= (a \\cdot b) \\cdot c$；\n3. 单位元：存在唯一 $e \\in G$ 使得对于 $\\forall a \\in G$ 满足 $a \\cdot e = a$；\n4. 逆元：对于 $\\forall a \\in G$，存在 $a^{-1} \\in G$ 满足 $a \\cdot a^{-1}=e$。\n\n比如，所有整数（$\\mathbb Z$）和加法操作满足群公理，因此可以称为一个群，我们将其称为整数加法群，记为 $\\langle\\mathbb Z, +\\rangle$。\n\n同样道理的还有 $\\langle\\mathbb Q, +\\rangle$、$\\langle\\mathbb R, +\\rangle$ 以及 $\\langle\\mathbb C, +\\rangle$。\n\n值得注意的是 $\\langle\\mathbb R, \\times\\rangle$ 并不是群，因为 $0$ 没有逆元。$\\langle\\mathbb R - \\{0\\}, \\times\\rangle$ 则是一个群。\n\n群的阶即为集合的元素个数，记为 $|G|$。\n\n### 阿贝尔群\n\n对于一个群 $G$，如果对于 $\\forall a,b \\in G$ 都满足 $a \\cdot b = b \\cdot a$（交换律），则称该群为**阿贝尔群**。\n\n### 置换，轮换与对换\n\n对于一个仅由三个元素构成的排列 $(1, 2, 3)$，我们可以知道其存在 $6$ 种不同的置换并且可以组成一个群，我们将这个群记为 $S_3$。\n\n| 置换               | 记号  | 结果        |\n| ------------------ | ----- | ----------- |\n| 什么也不干         | $e$   | $(1, 2, 3)$ |\n| 所有元素左移一位   | $a_1$ | $(2, 3, 1)$ |\n| 所有元素左移两位   | $a_2$ | $(3, 1, 2)$ |\n| 对换第一个和第二个 | $b_1$ | $(2, 1, 3)$ |\n| 对换第一个和第三个 | $b_2$ | $(3, 2, 1)$ |\n| 对换第二个和第三个 | $b_3$ | $(1, 3, 2)$ |\n\n其中每两种置换都可以复合，即先执行第一个再执行第二个。\n\n如果置换 $h$ 等价于先执行 $f$ 后执行 $g$，则我们记为 $h=g \\cdot f$。\n\n注意这里顺序要反着写，因为如果我们将置换看成函数的话就相当于 $h(x)=g(f(x))$，因此先执行的置换要写在右边。\n\n我们将仅交换两个元素的置换称为**对换**，易知对于 $S_3$ 中的所有置换，都可以通过不同的对换复合得到。\n\n$$\n\\begin{cases}\ne&=b_1 \\cdot b_1 = b_2 \\cdot b_2 = b_3 \\cdot b_3 \\\\\na_1&=b_3 \\cdot b_1 = b_1 \\cdot b_2 \\\\\na_2&=b_2 \\cdot b_1 = b_1 \\cdot b_3 \\\\\nb_1&=b_1 \\\\\nb_2&=b_2 \\\\\nb_3&=b_3 \\\\\n\\end{cases}\n$$\n\n经过简单的观察发现，经过奇数次对换后的置换永远只能通过奇数次对换得到，偶数同理。\n\n于是我们将通过奇数次对换后得到的置换称为**奇置换**，通过偶数次对换后得到的置换称为**偶置换**。\n\n显然对于 $n$ 次的置换群 $S_n$，其总共拥有的 $n!$ 种不同的置换中总有一半是奇置换，一半是偶置换。\n\n其中所有的偶置换可以形成一个新的群，我们将其称为**交错群**，记为 $A_n$。\n\n> 曾经有一道经典的数字华容道谜题（仅对换了 $14$ 和 $15$），我们来证明其为何无解。\n>\n> ```\n> 1  2  3  4\n> 5  6  7  8\n> 9  10 11 12\n> 13 15 14 __\n> ```\n>\n> 我们将右下角的空缺看做 $16$，则每次操作相当于将 $16$ 与周围的数字进行一次对换。\n>\n> 将原棋盘黑白染色，由于初始 $16$ 的位置和结束状态 $16$ 的位置相同，因此易知结束的局面必然是将 $16$ 对换了偶数次的结果（偶置换）。\n>\n> 由于初始局面仅对换了 $14$ 和 $15$，是个奇置换，因此无论如何也无法从结束状态经过偶数次置换到达奇置换的初始状态。\n>\n> 因此此题无解。\n> \n> ----------\n> \n> 将一个普通三阶魔方强行扭转一个角块之后形成的局面无法复原，但是再扭转一次角块（无论是不是原来扭转的角块）之后便可以复原的原理也是类似。\n\n### 循环群\n\n对于一个群 $G$，如果对于任意元素 $a \\in G(a \\ne e)$，使得 $G$ 中的所有元素都可以通过 $a$ 反复自我复合得到，则称群 $G$ 为一个**循环群**。\n\n下面证明一个素数阶的群 $G$ 必然是一个循环群。\n\n> **拉格朗日定理**：对于群 $G$ 的任意一个子群 $H$（$H \\subseteq G$）， 群 $H$ 的阶必定为群 $G$ 的阶的一个约数。\n>\n> 由拉格朗日定理可知，对于一个**素数阶**的群 $G$，不存在除了其本身和**幺群**（$\\{e\\}$）之外的子群。\n>\n> 我们从群 $G$ 中任意找出一个元素 $a$，用其构造一个循环群 $H = \\{e, a, a^2, a^3, ..., a^{-1}\\}$。\n>\n> 由群公理可知群 $H$ 必定为群 $G$ 的一个子群。\n>\n> 1. 如果 $a = e$，则子群 $H=\\{e\\}$，是幺群。\n> 2. 如果 $a \\ne e$，则子群 $H$ 的阶必定大于 $1$，不是幺群，只能是群 $G$ 本身，即 $H=G$。\n>\n> 由于素数 $\\gt 1$，因此必定能找到元素 $a \\in G (a \\ne e)$ 能够构造出与群 $G$ 同构的循环群 $H$，因此群 $G$ 必定是循环群。\n>\n> 至此原命题得证。\n\n下面证明每个循环群都是阿贝尔群。\n\n> 对于一个循环群 $H=\\{e, a, a^2, ..., a^n\\}$，其中的每个元素都可以表示成 $a^x(x\\in{0,1,2,...,n})$ 的形式。\n>\n> 由群公理中的结合律可知 $a^x \\cdot a^y = a^{x+y} = a^y \\cdot a^x$，因此满足交换律，是阿贝尔群。\n\n### 正规子群\n\n对于一个群 $G$，设其存在子群 $H$，使得对于 $\\forall a \\in G$，都满足 $a \\cdot H = H \\cdot a$，则我们称子群 $H$ 为群 $G$ 的一个**正规子群**，记为 $G \\Delta H$。\n\n元素与集合的运算定义为 $a \\cdot \\{b_1, b_2, ..., b_n\\} = \\{a \\cdot b_1, a \\cdot b_2, ..., a \\cdot b_n\\}$，左右交换同理。\n\n易知群 $G$ 本身与**幺群**都是群 $G$ 的**正规子群**，定义这两个群是群 $G$ 的**平凡正规子群**。\n\n所有**阿贝尔群**的所有子群都是**正规子群**。\n\n### 商群\n\n对于群 $G$ 的一个**正规子群** $H$，定义**商群**为 $G$ 中所有元素分别与 $H$ 运算后形成的群，记为 $G/H$，且商群的阶 $|G/H|=\\frac{|G|}{|H|}$。\n\n易知任意群对幺群的商群都是其本身，即 $G/\\{e\\}=G$。\n\n### 单群\n\n对于群 $G$，如果不存在除了**平凡正规子群**之外的其他**正规子群**，则称群 $G$ 为**单群**。\n\n以下几种群都是单群：\n\n- 素数阶循环群\n- $n \\ge 5$ 的交错群\n- $...$\n\n### 可解群\n\n对于一个群 $G$，我们找到一个**正规子群列**形如\n\n$$\nG \\Delta G_1 \\Delta G_2 \\Delta G_3 \\Delta ... \\Delta G_n \\Delta \\{e\\}\n$$\n\n其中每一个群都是前一个群的正规子群。\n\n如果这个正规子群列满足每两个相邻的群的商群都是阿贝尔群，则称群 $G$ 是**可解群**。\n\n易知所有的阿贝尔群都是可解群。\n\n## 玄学开始\n\n### 伽罗瓦说了什么\n\n一个 $n$ 次方程是否可解，本质上即为方程的 $n$ 个根能否被区分开来。如果一个 $n$ 次置换群是可解群，那么说明一个 $n$ 次方程可解。反之则不可解。\n\n### 具体一点\n\n对于二次置换群 $S_2$，我们可以发现 $S_2$ 与 $C_2$ 同构，是阿贝尔群，因此可知 $S_2$ 是可解群，二次方程可解。\n\n对于三次置换群 $S_3$，我们可以找到 $S_3 \\Delta A_3 \\Delta \\{e\\}$。\n\n- 对于 $S_3/A_3$，它的阶是 $2$，是一个素数，因此这个商群是一个循环群，是阿贝尔群。\n- 对于 $A_3/\\{e\\}$，我们发现 $A_3$ 与 $C_3$ 同构，而且 $C_3$ 是循环群，是阿贝尔群，因此这个商群也是阿贝尔群。\n- 于是 $S_3$ 是可解群，因此三次方程也可解。\n\n对于四次置换群 $S_4$，我们可以找到 $S_4 \\Delta A_4 \\Delta V \\Delta \\{e\\}$，其中 $V$ 是克莱因四元群（$\\{(1,2,3,4),(1,2,4,3),(2,1,3,4),(2,1,4,3)\\}$）。\n\n- 对于 $S_4/A_4$，阶为 $2$，是素数阶循环群，是阿贝尔群。\n- 对于 $A_4/V$，阶为 $3$，是素数阶循环群，是阿贝尔群。\n- 对于 $V/\\{e\\}$，根据定义知 $V$ 是阿贝尔群。\n- 于是 $S_4$ 是可解群，因此四次方程也可解。\n\n对于五次置换群 $S_5$，我们可以找到 $S_5 \\Delta A_5 \\Delta \\{e\\}$。\n\n- 对于 $S_5/A_5$，阶为 $2$，是素数阶循环群，是阿贝尔群。\n- 对于 $A_5/\\{e\\}$，阶为 $60$ 不是素数，商群不是阿贝尔群。\n- 于是 $S_5$ 为不可解群，因此五次方程不可解。\n\n对于五次以上的置换群 $S_n(n\\gt 5)$，$S_5$ 必为其一个正规子群，$S_5$ 为不可解群，因此 $S_n$ 也必然为不可解群，因此五次以上的方程都没有求根公式。\n\n### 为什么为什么为什么\n\n> 为什么这样就是对的啊？\n>\n> 为什么可以抽象成这个样子的啊？\n>\n> 为什么群不可解就是方程没有求根公式啊？\n\n我怎么知道，本来这就是口胡。\n\n以上。",
      "createdAt": "2020-08-19T10:15:52.000Z",
      "updatedAt": "2023-02-28T04:47:26.466Z",
      "banner": "",
      "category": "教程",
      "tags": ["群论"],
      "pin": 0,
      "hidden": false,
      "views": 679
    },
    {
      "slot": "happy-new-year-2021",
      "title": "2020 年度总结",
      "content": "一转眼 2020 年就过去了，写一篇总结文章吧。\n\n<!-- more -->\n\n1. 一月：首考爆蛋，回家摸鱼\n2. 二月：家里摸鱼\n3. 三月：家里摸鱼\n4. 四月：家里摸鱼 / 学校摸鱼\n5. 五月：学校摸鱼\n6. 六月：学校摸鱼\n7. 七月：高考爆蛋，去杭州参加三一，结果什么卵用都没有\n8. 八月：家里划水，然后得知被哈尔滨工业大学（威海）卡线录取\n9. 九月：开学，军训，混进了校 acm 队，试图以此转到计算机专业\n10. 十月：熟悉了大学的摸鱼生活，ccpc Cu，开始着手一个奇怪的年度计划\n11. 十一月：摸鱼，ccpc Cu，没救了\n12. 十二月：摸鱼，大学的生活一切都显得如此平淡\n\n追过的番剧\n\n- 一月\n    - 某科学的超电磁炮T\n    - 虚构推理（一半弃\n    - ~~异种族风俗娘~~（我不是我没有\n    - 怕痛的我，把防御力点满就对了\n- 四月\n\t- 公主连结Re:Dive（一半弃\n\t- BNA（这烂尾烂的\n- 七月\n    - Re:从零开始的异世界生活 2nd season(前半)（吹爆\n    - 刀剑神域 Alicization War of Underworld -THE LAST SEASON-（我看了个啥\n    - 租借女友（一半弃，男主太废了\n- 十月\n\t- 成神之日（~~这不比成神之日催泪？~~\n\t- 总之就是非常可爱（一半弃\n\t- 安达与岛村（一半弃\n\t- 魔女之旅（我老婆\n\t- One Room Third Season（吹爆\n- 补番\n\t- 在地下城寻找邂逅是不是搞错了什么 S1 S2（弃，太废了\n\t- 少女编号（女主太可爱了\n\t- 境界的彼方（没有未来的未来不是我想要的未来\n\t- 轻音少女（我永远喜欢 yui\n\t- JoJo 的奇妙冒险 S1 S2 S3 S4[1..2] S5[1..n/2]（kono dio da\n- 映画（不包括 TV 动画剧场版）\n\t- 知晓天空之蓝的人啊（冈妈 * 1\n\t- 想哭的我带上了猫的面具（冈妈 * 2\n\t- 心灵想要大声呼喊（冈妈 * 3\n\n*列表可能不全，问题不大*\n\n~~今年又是颓废的一年呢（~~\n\n明年要努力了呀。",
      "createdAt": "2020-12-31T15:56:58.000Z",
      "updatedAt": "2023-02-28T08:10:15.609Z",
      "banner": "",
      "category": "公告",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 816
    },
    {
      "slot": "noip2017-travel",
      "title": "NOIP2017游记",
      "content": "\n第一次考提高组。\n\n# Day 0\n\n## 晚\n在宾馆放了一下行李后就直接到衢州中学来领狗牌+吃晚饭了。\n晚上稍微<ruby><rb>休息</rb><rt>浪</rt></ruby>了一会，10:10 就睡下了。\n\n<!-- more -->\n\n# Day 1\n\n## 早\n\n6:30 ~~做梦做到一半~~被室友叫醒，刷了刷牙就出来了。\n\n## 上午\n\n来到试场，发现是 xp 的系统。\n\n![mengbi](/file/mengbi.jpg)\n\n发现还没有 notepad++。\n\n![mengbi](/file/mengbi.jpg)\n\n公布密码后，先看 T1，发现是道打表找规律题。\n\n找了半小时没找到规律，就先放着做 T2 去了。\n\n先敲了半天没调出来，越改越乱，就直接重码了一边，过样例后就不管了。\n\n看到 T3。。。决定回去做 T1。\n\n肛了半个小时终于找出来规律了。\n\n对拍了一下 100\\*100 发现没问题就不管了。\n\nT3 想了半天想不出来，就直接打了一个比暴力还要暴力的暴力交了上去（谁知道我在想什么）。\n\n出考场后就直接去吃饭了。\n\n## 下午\n\n~~浪了一个下午，为第二天爆蛋做铺垫~~\n\n# Day 2\n\n## 上午\n\nT1 计算几何。。看来敦爷真的要吃笔记本了。\n做完 T1 后看了 T2，先打了蒙特卡罗，发现正确率有点感人。\n然后就写了一个状压的 dp，过了样例感觉稳了。\nT3 看了半天不会，果断打了一个 30 分的暴力。\n\n## 中午\n\n突然想到 T1 好像没有有个地方没有开 long long，感觉要 AFO 了。\n\n# 几天后\n\n洛谷 410，绍一的数据 370，学军的也是 370，感觉稳 AFO 了。\n\n最终成绩出来 400，悬啊。。。\n\n结果一等线360。。。卡线一等。\n\nAFO\n",
      "createdAt": "2017-11-11T05:09:20.000Z",
      "updatedAt": "2023-02-24T18:35:23.374Z",
      "banner": "",
      "category": "游记",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 431
    },
    {
      "slot": "bt-download",
      "title": "BT 下载指南",
      "content": "记录一下本人在使用 BT 下载时候遇到过的坑。\n\n<!-- more -->\n\n## 迅雷\n\n我最先了解到的还是迅雷，如果不管它被人骂死的吸血行为，其拥有的离线下载功能还是很不错的。\n\n这个离线加速下载其实就是他们会把一个种子的文件预先下载到自己的服务器上，然后通过直接从迅雷的服务器处下载从而加速传统的 P2P 下载。换句话说，就是有一个专门为迅雷用户上传的巨大的 leech，这对于非迅雷用户来讲是很不受欢迎的，但是正因为有这个 leech 在，一些没有速度的老种子才有可能可以在迅雷上下载成功。\n\n但是你不氪金就不要想用这个了（~~以及开车~~）。\n\n不支持 Linux 平台，如果你仍然想用，可以安装 AUR 里的 `deepin-wine-thunderspeed`。\n\n## BitComet\n\n比特彗星，我第二个长期使用的 BT 下载工具。他在一定程度上和迅雷一样封闭和商业化。\n\n比特彗星有一个和迅雷差不多的优点，他的种子库是使用自己的服务的，所以索引特别快。\n\n只支持 Windows 系统。\n\n## qBittorrent\n\n这是我要重点推荐的一款 BT 下载软件。\n\n- [x] 跨平台\n- [x] 开源\n- [x] 纯正简洁\n\n### 安装\n\n```bash\nsudo pacman -S qbittorrent\n```\n\nqBittorrent 并不能开箱就用，在下载之前需要稍微配置一下。\n\n首先我们需要一张能用的 Tracker 列表，可以从 [ngosang/trackerslist][trackerslist] 中复制。\n\n接着打开 qBittorrent 的 Tools > Preferences > BitTorrent\n\n这个选项面板的最下面有一个 Automatically add these trackers to new downloads，把它选上，然后在下面的框框里面粘贴复制来的 Trackers，最后点 OK。\n\n### 下载\n\n直接打开 magnet 链接或者种子文件就行了。\n\n如果不出所料，qBittorrent 会陷入无止境的 Retrieving metadata 的状态，不用担心，选择好保存地址之后点击 OK 开始。\n\n接着选中这个 Retrieving metadata 的下载任务，点击下面的 Trackers，你会发现 qBittorrent 在一个一个尝试能用的 Tracker，或者发现了一个能用但是没有人的 Tracker 然后吊死在了那里。\n\n这时候就需要手动救援了，选中一个 Not contacted yet 或者 Not working 的 Tracker，然后点击一下 Trackers 右边的一个向上的按钮（虽然我并不知道那个按钮到底是啥），qBittorrent 就会同时向所有 Tracker 发起请求。经过这样一轮的扫描，能够通讯的 peer 应该会多不少，Retrieving metadata 也应该马上会变成 Downloading。\n\n接着就是享受满带宽下载的快感了。\n\n（~~然后发现是满带宽上传~~）\n\n## 其他下载工具\n\n- `aria2`：命令行的 BT 下载工具，可惜没速度。\n- μTorrent：？\n- transmission：？\n- ktorrent：？（KDE 原生的？？？）\n- fragments：？（给 GNOME 的？？？）\n\n\n\n[trackerslist]: https://github.com/ngosang/trackerslist",
      "createdAt": "2019-10-12T15:50:01.000Z",
      "updatedAt": "2023-02-28T14:09:47.030Z",
      "banner": "",
      "category": "教程",
      "tags": ["bt"],
      "pin": 0,
      "hidden": false,
      "views": 800
    },
    {
      "slot": "blog-update-2021",
      "title": "博客更新日志",
      "content": "博客已经由原来的 [Xplosiss](https://github.com/ntzyz/Xplosiss) 引擎更换为了新的 [Rara](https://github.com/swwind/rara) 引擎。\n\n> 名称的来源：菈菈·格雷拉特（ララ・グレイラット）\n> \n> 鲁迪乌斯的次女，第二个小孩，甲龙历427年生。鲁迪与洛琪希所生的第一个女儿。\n\n<!-- more -->\n\n> 头发为水蓝色，长长的头发绑成一条辫子。与洛琪希不同，可以使用米格路德族天生的念话能力交谈，在塞妮丝变成废人后，似乎一直使用念话与塞妮丝对话。兽神预言中的勇者神之子，从小受到圣兽保护，有着骂人笨蛋的口头禅。喜欢恶作剧，却总是能做到刚好不会受罚的程度。经常一副睡不饱的样子，时常睡觉，没事时就在占卜。事实上她是鲁迪乌斯的子女里面真正最为早熟的人，慵懒的外表下隐藏着深不可测的智慧，连她的双亲与家人都看不透她。在阿斯拉王立学校毕业后担任魔法大学的魔术研究员，研究的内容为召唤魔术与占命魔术，并且拥有个人研究所。正传的最终，因想画画而自行取下酒醉的鲁迪戴在手腕上的龙神护腕，令鲁迪连接到人神并看到人神的下场与年老自己的未来。\n> \n> 有着上级至圣级的战斗实力。\n> \n> 长大后把头发绑到背后的样子与洛琪希十分神似，连鲁迪都曾误认过而从背后拥抱上去的程度。最初有尝试接受洛琪希所提议的相亲，但因为个性冷漠的问题，所有相亲对象都相处的不好，最后洛琪希也放弃了。常常给予身为弟弟的齐格建议，在齐格离开时终于承认齐格能独当一面，这让齐格感到非常的高兴，也少见的露出了笑容。\n> \n> ![rara](/file/raraa.jpg)\n> \n> 最后利用占命魔术看到了微妙的未来，本想偷偷离开家中却被雷欧咬住阻止，此时正好被鲁迪等人撞见，留下了「久远的以后会带着男人一起回来」及「我稍微去改变一下未来」的言论后离家，是所有兄弟姐妹之中最晚离家的一位。从她对占命术中所得出的结论是「这样下去，会输」的言论中，貌似她得知了在遥远的未来中，自己会与人神对决，因此决定在关键时刻离家，据说以后会与龙神联合打败人神，是人神害怕的因素之一，继承了洛琪希的帽子以及鲁迪的傲慢的水龙王，以及艾莉丝的匕首型魔剑「指折」、希露菲的特制食谱，其最为中意的却是鲁迪用来包裹傲慢的水龙王的鼠灰色旧法师袍，是鲁迪曾经作为冒险者时所穿着的。\n\n新博客在技术方面主要的更新有：\n\n- Vue 3 + Koa\n- 服务端渲染\n- SEO 优化\n- 切换语言（<span class=\"truth\">不会真的有人不会说魔神語吧</span>）\n\n在 UI 方面的变化：\n\n- ~~大势所趋的 border-radius 圆角风格~~\n- 加了一个比较美观那么一点的 footer\n\n\n博客依旧处于早期开发阶段，欢迎各位留下反馈！qwq\n\n最近计划：\n\n1. ~~准备开始集中修复所有旧文章的死链~~ 修复完毕\n\n",
      "createdAt": "2021-12-06T14:53:25.470Z",
      "updatedAt": "2023-02-28T23:23:29.832Z",
      "banner": "/file/rara.png",
      "category": "公告",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 1319
    },
    {
      "slot": "archlinux-setup",
      "title": "Arch Linux i3wm 的安装与配置",
      "content": "i3wm 是经典的平铺 wm，用惯了的话操作起来还是很上手的。\n\n这里从成功安装了 Arch Linux 之后继续讲起，可以得到的最终效果如下：\n\n<!-- more -->\n\n![1596090744488-2020-07-30_14-31.png](/file/1596090744488-2020-07-30_14-31.png)\n\n## 启用 archlinuxcn 源\n\n```bash\necho -e '[archlinuxcn]\\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch' | sudo tee -a /etc/pacman.conf > /dev/null\nsudo pacman -Syy\nsudo pacman -S archlinuxcn-keyring\n```\n\n## 安装 i3wm 以及一些必要组件\n\n```bash\nsudo pacman -S xorg i3-gaps polybar dunst fcitx compton xorg-init curl \\\n               zsh wqy-microhei wqy-zenhei pulseaudio pulseaudio-alsa \\\n               pamixer nitrogen lxappearance pavucontrol polkit-gnome fcitx-{gtk2,gtk3,qt4,qt5} \\\n               pikaur xfce4-terminal nerd-fonts-complete flameshot git playerctl python-gobject \\\n               libsodium xclip thunar\n# 下面是夹带的私货\nsudo pacman -S google-chrome visual-studio-code-bin electron-netease-cloud-music typora\n```\n\n安装我正在使用的 i3wm 主题。\n\n```bash\ncd $HOME\ngit clone https://github.com/swwind/dotfiles .dotfiles\ncd .dotfiles\n./install_config.sh\n```\n\n## 安装 lightdm\n\n```bash\nsudo pacman -S lightdm lightdm-webkit2-greeter\n\nsudo vim /etc/lightdm/lightdm.conf\n# greeter-session=lightdm-webkit2-greeter\n\nsudo systemctl enable lightdm.service\n```\n\n安装完毕之后可以 `reboot` 重启电脑进入 i3wm 桌面环境。\n\n如果你 lightdm 崩了，请使用 `Ctrl + Alt + f1-f7` 切 tty 进行抢救操作。\n\n## i3wm 主题操作指南\n\n该主题系博主 fork 自 timber3252 的 i3wm 主题。\n\n### polybar\n\n左上角是一个 playerctl 和音量调节的快捷按键。\n\n- 对于 playerctl 的操作：\n    - 左键：下一首\n    - 中键：暂停\n    - 右键：上一首\n- 对于音量调节的操作：\n    - 滚轮：调节大小\n    - 左键：静音/取消静音\n\n左下角是桌面和窗口的标题。\n\n右上角放有网络配置、时间，以及应用程序的图标。\n\n右下角是当前的 CPU 和内存的使用状况，以及温度和电量。\n\n### 快捷键\n\n_以下 $mod 表示你电脑上的 Windows 键_\n\n- `$mod + d` 打开 dmenu 选择 command\n- `$mod + z` 打开 dmenu 选择 Application\n- `$mod + Enter` 打开终端（`xfce4-terminal`）\n- `$mod + w` 使用分页模式\n- `$mod + e` 使用平铺模式\n- `$mod + f` 全屏/退出全屏\n- `$mod + Shift + Space` 切换窗口浮动/平铺\n- `$mod + Shift + q` 关闭窗口\n- `$mod + 1-9` 切换到桌面 1-9\n- `$mod + Shift + 1-9` 将当前窗口移至桌面 1-9\n- `$mod + {h,j,k,l}` 切换 focus 窗口\n- `$mod + Shift + {h,j,k,l}` 将当前窗口移动至桌面的左/下/上/右\n- 按住 `$mod` 和鼠标右键并拖动：调节浮动的窗口大小\n\n### 快捷入口\n\n- `$mod + o` 快速打开应用，不出所料，你应该可以看到左下角的标题栏变成了下面的样子：\n  \n  > App: (w)eb browser, (f)ile manager, (m)usic player, (t)ypora\n  \n  之后再次按 `w`, `f`, `m` 或者 `t` 即可快速打开应用。\n  具体请查看 `~/.config/i3/config`；\n- `$mod + p` 快速打开设置，具体请查看 `~/.config/i3/config`；\n- `$mod + 0` 快速锁屏/关机，具体请查看 `~/.config/i3/config`。\n\n### 锁屏/壁纸\n\n壁纸使用 `nitrogen`，直接打开即可。\n\n锁屏需要使用 `betterlockscreen`。\n\n```bash\nsudo pacman -S betterlockscreen\nbetterlockscreen -u path/to/image.png # 设置锁屏壁纸\nbetterlockscreen -l # 直接锁屏\n```\n\n锁屏之后直接敲入用户密码即可解锁（~~对，他连一个输入框也不需要~~）。\n\n### 鼠标，图标与 gtk 主题\n\n以下是个人正在使用的主题\n\n```bash\nsudo pacman -S capitaine-cursors papirus-icon-theme arc-gtk-theme\n```\n\n安装完成之后使用 `lxappearance` 即可选择主题。(Arc-Dark, Papirus-Dark, Capitaine Cursors)\n\n\n## 科学上网\n\n_有一部分内容请自行 Google。_\n\n由于从 AUR 里面获取应用很慢，于是我们需要用 proxychains 在终端使用代理。\n\n```bash\nsudo pacman -S proxychains-ng\nsudo vim /etc/proxychains.conf # 修改最后一行 SOCKS5 localhost 1080\n```\n\n之后便可以安装 aur 里面的内容。\n\n```bash\nproxychains -q pikaur -S lux clipit electron-ssr fcitx-sogoupinyin\n```\n\n`lux` （一个调整亮度的工具）在使用前需要先用 sudo 权限运行一次。\n\n```bash\nsudo lux\n```\n\nGoogle Chrome 临时使用代理的方法：\n\n```bash\ngoogle-chrome-stable --proxy-server=socks5://localhost:1080\n```\n\n安装 oh-my-zsh：\n\n```bash\nsh -c \"$(proxychains -q curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n## Steam\n\n安装 steam 需要先启用 multilib 来提供 32 位的支持。\n\n```bash\nsudo vim /etc/pacman.conf\n```\n\n找到以下两行并取消注释\n\n```toml\n[multilib]\nInclude = /etc/pacman.d/mirrorlist\n```\n\n接着更新一下系统\n\n```bash\nsudo pacman -Syyu\n```\n\n然后就可以直接从官方源里面安装 steam。\n\n```bash\nsudo pacman -S steam\n```\n\n## 安装 Anbox 玩手游\n\n```bash\nsudo pacman -S anbox-git anbox-image anbox-modules-dkms-git linux-headers\nsudo systemctl enable anbox-container-manager.service\n```\n\n安装完毕之后重启电脑。\n\n之后直接打开 `anbox` 即可。\n\n安装 apk 请使用以下方法：\n\n```bash\nsudo pacman -S android-tools\nadb devices\nadb install xxxxx.apk\n```\n\n注意：这个 Anbox 兼容性感人，只能玩玩 Arknights，其他游戏不要想了（特别是 Google Play 上的那些东西）。\n\n## あとがき\n\n祝你好运。\n\n以上。",
      "createdAt": "2020-07-30T06:32:12.000Z",
      "updatedAt": "2023-02-28T23:23:31.335Z",
      "banner": "",
      "category": "教程",
      "tags": ["archlinux", "lightdm"],
      "pin": 0,
      "hidden": false,
      "views": 2603
    },
    {
      "slot": "bevy-engine-ichi",
      "title": "Bevy 引擎游戏开发简介（上）",
      "content": "Bevy Engine 是一个基于 ECS 构架的 Rust 游戏引擎，内置了大部分实用的特性，个人认为比定位相同的 Amethyist 引擎要更加易用一些。\n\n本文简要介绍一下该引擎的一些理念和代码。\n\n<!-- more -->\n\n*注意：bevy 引擎还处于早期开发阶段，也就是说许多接口可能随时会产生变化。截止本文发表，Bevy 引擎的最后 Release 版本为 0.5.0，本文采用的是 github 上的最新开发版，因此某些地方可能同时兼有 0.6.0 和 0.5.0 的特性，具体可以自行查询文档*\n\n***注意：本文中给出的代码均为示意代码，也许大部分并不能直接运行***\n\n\n\n## ECS\n\nECS 构架，即 Entity-Component-System（实体-组件-系统）构架，相比较于传统 OOP 来讲耦合度更加小，也在一些设定复杂的游戏机制下能够有更好的性能和可读性。\n\n简单来说，ECS 构架中，实体(Entity)是若干个组件(Component)构成的集合，而世界(World)便是由所有的实体构成的集合。系统(System)则是可以对世界中所有或某些同时含有若干个特定组件的对象统一进行调整的函数。\n\n换句话说，可以将世界想象成一个数据表，每条记录是一个实体，每个字段则是一个组件。\n\nEntity | Velocity | Position\n------ | -------- | --------\n1      | (1, 0)   | (0, 0)\n2      | (0, 1)   | (2, 0)\n3      |          | (1, 1)\n\n如上表，一个实体含有 Position 组件，则代表该实体拥有位置的属性。含有 Velocity 组件，则代表实体拥有移动速度的属性。\n\n移动物理系统则可以抽象为对于所有同时含有 Velocity 字段和 Position 字段的对象执行移动的操作。\n\n用直觉感受一下下面的代码。\n\n```rust\nstruct Position(Vec2);\nstruct Velocity(Vec2);\n\nfn movement(\n  mut query: Query<(&Velocity, &mut Position)>\n) {\n  // 枚举每一个符合条件的 Entity\n  for (velocity, mut position) in query.iter_mut() {\n    // 将对象的 Position 加上 Velocity\n    position.0 += velocity.0;\n  }\n}\n```\n\n如上，`movement` 函数便是一个正常的系统。\n\n将系统添加到游戏中，则需要使用 `App::add_system(&mut self, system: System)` 方法。\n\n```rust\nuse bevy::prelude::*;\n\nfn main() {\n  App::new()\n    .add_system(movement)\n    .run()\n}\n```\n\n想要从中加入实体，我们可以让系统带一个 `mut commands: Commands` 参数。\n\n```rust\nfn add_entity(\n  mut commands: Commands\n) {\n  commands.spawn() // 创建一个实体\n    .insert(Velocity(Vec2::new(1, 0)))  // 给实体添加组件\n    .insert(Position(Vec2::new(0, 0)));\n  \n  commands.spawn()\n    // 或者一口气加多个\n    .insert_bundle((Velocity(Vec2::new(1, 0)), Position(Vec2::new(0, 0))));\n\n  // 或者直接这样\n  commands.spawn_bundle((Velocity(Vec2::new(1, 0)), Position(Vec2::new(0, 0))));\n}\n```\n\n之后使用 `add_startup_system` 来使系统只在最初运行一次。\n\n```rust\nfn main() {\n  App::new()\n    .add_plugins(DefaultPlugins) // bevy engine\n    .add_startup_system(add_entity) // startup system\n    .add_system(movement) // normal system\n    .run(); // launch the game\n}\n```\n\n在解释 `Commands` 参数的工作原理前，我们先了解一些 bevy 引擎的特性。\n\n\n\n## Stage / SystemLabel\n\nStage 和 SystemLabel 是用来严格定义系统运行顺序的特性。\n\n一般情况下 bevy 会使用多线程来优化程序运行的效率，其中就包括同时运行好几个不同的系统。\n\n所有被注册过的系统都会在保证任意组件不会被同时进行多次可变借用的前提下尽可能地同时运行。\n\n然而有些情况下系统有一个更加基本的先后顺序，如果没有事先定义这些系统的先后顺序，就有可能导致产生一些不稳定的输出。\n\n这时候我们就需要使用 Stage / SystemLabel 的特性。\n\nSystemLabel 是可以用来给系统打上的标签类型，可以使用 `.before` 和 `.after` 来快速定义系统的运行顺序。\n\n```rust\nfn update_velocity() { ... } // update velocity according to user's input (etc.)\nfn update_position() { ... } // update position according to its velocity\n\nfn main() {\n  App::new()\n    .add_plugins(DefaultPlugins)\n    .add_system(update_velocity.label(\"velocity\"))\n    .add_system(update_position.after(\"velocity\"))\n    .run();\n}\n```\n\n如果需要管理的系统和顺序比较多，则可以使用 SystemSet 来统一定义，并且使用实现了 SystemLabel 的 enum 类型。\n\n```rust\n#[derive(SystemLabel)]\nenum PhysicalLabel {\n  UpdateVelocity,\n  UpdatePosition,\n}\n\nfn main() {\n  App::new()\n    .add_plugins(DefaultPlugins)\n    .add_system_set(\n   \t  SystemSet::new()\n        .label(PhysicalLabel::UpdateVelocity)\n        .with_system(update_velocity_according_to_user_input)\n        .with_system(update_velocity_according_to_game_logic)\n    )\n    .add_system_set(\n   \t  SystemSet::new()\n        .label(PhysicalLabel::UpdatePosition)\n        .after(PhysicalLabel::UpdateVelocity)\n        .with_system(update_position)\n    )\n    .run();\n}\n```\n\n注意，在使用 `before` 和 `after` 函数时，必须保证最终形成的顺序图是个 DAG（有向无环图），否则引擎将会报错。\n\n与 SystemLabel 定义顺序的方式不同，Stage 则是一个更加底层的概念。\n\n一般来说，在系统运行时对组件的内容进行修改并不会造成什么其他问题，但是如果需要对实体本身或者组件进行删改操作，则会对其他同时运行的系统产生难以预测的影响。\n\n因此 bevy 引擎使用了 `Commands` 在系统运行的时候记录下这些更改，而将真正的操作留到当前 Stage 结束的时候。\n\n系统自带有一个引擎内核的 `enum CoreStage`，其中包括 `First`, `PreUpdate`, `Update`, `PostUpdate`, `Last` 五个 Stage，这些 Stage 会在每 Tick 运行时按前后顺序依次运行。\n\n使用 `App::add_system` 会默认将系统添加到 `CoreStage::Update` Stage 中，可以使用 `App::add_system_to_stage` 来指定目标的 Stage。\n\n```rust\nfn main() {\n  App::new()\n    .add_plugins(DefaultPlugins)\n    .add_system_to_stage(CoreStage::PostUpdate, debug_system)\n    .add_system_to_stage(CoreStage::PostUpdate, print_system)\n    .run();\n}\n```\n\n添加到 `CoreStage::PostUpdate` 中的系统都只会在添加到 `CoreStage::Update` 中的系统执行完成，并且所有 `Commands` 都已经更新完毕之后才会执行。\n\n\n\n## Resource\n\nResource 是独立于实体和组件之外的一个特性，Bevy 引擎将其用于一些独立于任何实体和组件之外的全局变量，可以用来保存游戏设置或者游戏分数等全局内容。\n\n这些内容不属于任何一个具体的实体，而是只与游戏本身相关。\n\n想要插入一个 Resource，可以直接使用 `App::insert_resource()`。\n\n```rust\nstruct Score(u32);\n\nfn main() {\n  App::new()\n    // ...\n    .insert_resource(Score(0u32))\n    // ...\n}\n```\n\n如果在初始化 Resouce 的时候需要获取 World / 其他 Resource 作为参数，那么可以实现 `trait FromWorld`，并使用 `App::init_resource::<T>()` 来初始化。\n\n```rust\nstruct MaxScore(u32);\nstruct Score(u32);\n\nimpl FromWorld for Score {\n  fn from_world(world: &mut World) -> Self {\n    let max_score = world.get_resource::<MaxScore>().unwrap();\n    Score(max_score.0 / 2u32)\n  }\n}\n\nfn main() {\n  App::new()\n    // ...\n    .insert_resource(MaxScore(100u32))\n    .init_resource::<Score>()\n    // ...\n}\n```\n\n注意上面的样例如果把 `insert_resource` 和 `init_resource` 反着写会 panic 喔。\n\n想要在系统中获取 Resource 的话，只需要添加 `Res<T>` 或者 `ResMut<T>` 参数即可，但是如果是不确定存在与否的 Resource，可以使用 `Option<Res<T>>`, `Option<ResMut<T>>`。\n\n```rust\nfn example_system(\n  res1: Res<Resource1>,\n  mut res2: ResMut<Resource2>,\n  res3: Option<Res<Resource3>>,\n  res4: Option<ResMut<Resource4>>,\n) {\n  if let Some(mut res4) = res4 {\n    // ...\n  }\n}\n```\n\n说到这里就有必要讲一讲上面提到的 `movement` 系统，这个系统本身有一个巨大的问题：程序每秒能循环运行的次数是随系统而变化的。也就是说在性能高的电脑上面也许每秒能运行几百次，而在一些性能比较落后的电脑上也许只能勉勉强强运行 60 次。这就会造成一个问题，不同电脑上面玩家实际的移动速度会不一样。\n\n想要解决这个问题有基本两种方法，第一种是直接使用引擎自带的 `Res<Time>`，可以直接获取到每 Tick 所用的时间。\n\n```rust\nstruct Position(Vec2);\nstruct Velocity(Vec2);\n\nfn movement(\n  time: Res<Time>,\n  mut query: Query<(&Velocity, &mut Position)>,\n) {\n  // 枚举每一个符合条件的 Entity\n  for (velocity, mut position) in query.iter_mut() {\n    // Δx = v * Δt\n    position.0 += velocity.0 * time.delta_seconds();\n  }\n}\n```\n\n以此便可以在任何帧率下面均能够实现玩家的匀速运动。\n\n如果对游戏每秒内运行的 Tick 数量有硬性要求的（比如经典的 Minecraft 是 20 tick/s，也就是每秒运行 20 次计算），这种情况下面 `Time` 就不能发挥实际用处，我们需要通过一个叫做 Run Criteria 的东西来实现 Fixed Timestamp 运行。\n\n```rust\nfn main() {\n  App::new()\n    // ...\n    .add_system_set(\n      SystemSet::new()\n        // 以 60 tps 速度稳定运行 movement 系统\n        .with_run_criteria(FixedTimestep::step(1000.0 / 60.0))\n        .with_system(movement)\n    )\n    // ...\n}\n```\n\n当然这个方案如果在主机本身就无法以 60 tps 的速度稳定运行的情况下，那么 `movement` 系统也达不到 60 tps 的运行速度。\n\n~~这时你就可以输出这么一句：`Can't keep up! Is the server overloaded? Running 114514ms or 1919810 ticks behind`~~\n\n\n\n## State\n\nState 是 bevy 用来定义游戏目前状态的特性，具体可以用于实现游戏页面的切换等功能。\n\n本质是存放在 Resource 的栈，可以往栈中添加或者删除一个 State，每次都只有栈顶的 State 是当前的活动 State。\n\n使用 SystemSet 可以绑定一些系统到特定的 State 变更事件中，包括\n\n- `SystemSet::on_update`: 当前 State 位于栈顶（满足条件就一直执行）\n- `SystemSet::on_enter`: 当前 State 被插入栈顶（每次改动只执行一次，下同）\n- `SystemSet::on_exit`: 当前 State 被弹出栈顶\n- `SystemSet::on_pause`: 当前 State 被新插入的栈顶元素覆盖\n- `SystemSet::on_resume`: 当前 State 的上层元素被弹出，State 成为了新的栈顶\n- ......\n\n```rust\n#[derive(Debug, Clone, Eq, PartialEq, Hash)]\nenum AppState {\n  Menu,\n  Game,\n}\n\nfn main() {\n  App::new()\n    // ...\n    .add_state(AppState::Menu)\n    .add_system_set(\n      SystemSet::on_enter(AppState::Menu)\n        .with_system(initialize_menu_page)\n    )\n    .add_system_set(\n      SystemSet::on_exit(AppState::Menu)\n        .with_system(destory_menu_page)\n    )\n    // ...\n}\n```\n\n如果想在系统中获取/修改 State，可以使用 `Res<State<AppState>>` 和 `ResMut<State<AppState>>`，具体可以查询文档。\n\n值得注意的是如果使用 `State<T>::push/pop` 等操作，Bevy 引擎会在同一 Tick 内重新运行一遍发生 State 修改变化的 Stage。\n\n\n\n## Events\n\nEvents 可以用于实现事件的触发和监听。\n\nEvents 可以应用在许多事情上，比如想要结束游戏进程，就可以使用 `EventWriter<AppExit>`。\n\n```rust\nfn exit_game(\n  mut exit_event_writer: EventWriter<AppExit>,\n) {\n  if should_exit() {\n    exit_event_writer.send(AppExit);\n  }\n}\n```\n\n想要读取事件，则可以使用 `EventReader<T>`。\n\n```rust\nfn listen_mouse_position(\n  mut events: EventReader<MouseMotion>,\n) {\n  for event in events.iter() {\n    println!(\"{:?}\", event);\n  }\n}\n```\n\n想要添加一个自己的事件触发器和监听器，使用 `App::add_event` 即可\n\n```rust\nstruct MyEvent {\n  // ...\n}\n\nfn main() {\n  App::new()\n    // ...\n    .add_event::<MyEvent>()\n    // ...\n}\n```\n\n\n\n## Query\n\nQuery 是系统中对所有实体进行筛选和过滤的类型。\n\n前面已经有讲到一个最基本的例子，但是 Query 可以携带更多的参数。\n\n- 第一个参数用来筛选必须同时拥有的组件，同时获取该组件的引用；\n- 第二个参数可以用来进行一些复杂的筛选，但是不获取对组件的引用。\n\n```rust\nfn example_system(\n  mut commands: Commands,\n  mut query: Query<\n    // Entity 实体的一个引索\n    // &Component1 不可变借用\n    // &mut Component2 可变借用\n    // Option<&Component3> 可有可无的不可变借用\n    (Entity, &Component1, &mut Component2, Option<&Component3>),\n    // Or<(T1, T2, ...)> 逻辑或（外层 tuple 是逻辑与）\n    // Changed<T> 有被修改过\n    // With<T> 有这个组件\n    // Without<T> 没有这个组件\n    (Or<(Changed<Component4>, Changed<Component5>)>, With<Component5>)\n  >\n) {\n  for (entity, comp1, mut comp2, comp3) in query.iter_mut() {\n    if comp3.is_some() {\n      *comp2 = Component2;\n    }\n    // Entity 用来从 Commands 中获取实体本身 \n    commands.entity(entity)\n      .remove::<Component5>();\n  }\n}\n```\n\n如果有多个询问就可以使用多个 Query 参数。\n\n然而如果这几个 Query 中包含对某个组件的多次可变借用(或者可变+不可变)，那么即便我们在内部使用 `if` 分支保证在运行时每次只会调用其中的一个 Query，编译器依旧会认为系统有冲突并且报错。\n\n解决方案是采用 `QuerySet<(Q1, Q2, ...)>` 的形式。\n\n```rust\nfn example_system(\n  mut query_set: QuerySet<(\n    Query<&mut Position>,\n    Query<&Position>,\n  )>\n) {\n  if should_first_query() {\n    query_set.q0_mut().iter_mut() // ...\n  } else {\n    query_set.q1().iter() // ...\n  }\n}\n```\n\n\n\n## Plugins\n\n如果我们对 App 的操作有点多，那么可以选择将其中的一部分封装成一个插件(Plugin)，以降低整体代码的耦合度。\n\n多个插件可以组成一个插件组(PluginGroup)，再次降低耦合度。\n\n```rust\nstruct MyPlugin;\n\nimpl Plugin for MyPlugin {\n  fn build(&self, app: &mut App) {\n    app\n      .insert_resource(...)\n      .add_event::<...>()\n      .add_system_set(...)\n      // ...\n  }\n}\n\nstruct MyPlugins;\n\nimpl PluginGroup for MyPlugins {\n  fn build(&mut self, group: &mut PluginGroupBuilder) {\n    group\n      .add(MyPlugin)\n      .add(AnotherPlugin)\n      // ...\n  }\n}\n\nfn main() {\n  App::new()\n    .add_plugins(DefaultPlugin) // bevy 引擎内核插件\n    .add_plugin(MyPlugin)\n    .add_plugins(MyPlugins)\n    // ...\n}\n```\n\n\n\n\n\n## 后记\n\n至此，我们介绍了 bevy 引擎的一些最基本的特性，下一篇将会开始介绍 bevy 引擎中 UI 框架的部分。\n\n<<-- TO BE CONTINUED\n",
      "createdAt": "2021-10-13T01:50:47.000Z",
      "updatedAt": "2023-02-28T23:23:34.162Z",
      "banner": "https://i.loli.net/2021/10/13/SN6rAjxdRuoszqn.jpg",
      "category": "教程",
      "tags": ["rust", "bevy"],
      "pin": 0,
      "hidden": false,
      "views": 1960
    },
    {
      "slot": "lightdm-theme-writing",
      "title": "自己写一个 lightdm 主题",
      "content": "\nlightdm 是一个非常好用的 desktop manager，其中有一个插件 lightdm-webkit2-greeter 使得你可以用 HTML 自定义登录界面。\n\n哇，这不是吊炸天。\n\n_本文内容均在 Arch Linux 下测试有效_\n\n<!-- more -->\n\n# 安装 lightdm\n\n```bash\nsudo pacman -S lightdm lightdm-webkit2-greeter\n\nsudo vim /etc/lightdm/lightdm.conf\n#=> greeter-session=lightdm-webkit2-greeter\n\nsudo systemctl enable lightdm.service\n# 同时 disable 掉其他 DM\n```\n\n重启，确保 lightdm 工作正常。\n\n如果 lightdm 崩了，切 tty 即可改回原来的 DM。\n\n如果工作正常，那么就可以开始写主题啦\\~\\\\(≧▽≦)/~。\n\n# 写主题\n\n首先我们创建一个文件夹，命名为主题的名字，比如叫做 `ass-we-can`。\n\n进入这个文件夹，创建一个 `index.theme` 文件，写入以下内容（根据需要魔改）：\n\n```conf\n[theme]\nname=ass-we-can\ndescription=Deek Dark Fantasy\nengine=lightdm-webkit-greeter\nurl=index.html\n```\n\n接着我们创建一个 `index.html` 文件，这将会在登录的时候自动加载。\n\n自动加载的时候会在全局中定义一个 `lightdm` 对象，该对象保存了登录的选项和 API。\n\n可以导入[这个脚本](https://github.com/swwind/lightdm-theme-gradient/blob/master/assets/js/mock.js)来生成该对象来模拟登录，以便在浏览器中预览和调试。\n\n简单看一下上面的脚本就可以知道一些重要的数据的保存方法，这里不再赘述。\n\n讲讲登录的流程。\n\n> 下文中 `user` 指 `lightdm.users[]` 中选中的一项。\n> `session`、`language` 同理。\n\n**第一步**\n\n调用 `lightdm.start_authentication(user.name)` 开始认证用户 `user`。\n\n**第二步**\n\n认证用户时，调用 `lightdm.provide_secret(password)` 确认用户密码：\n\n- 无论密码是否正确，都将调用全局中的 `authentication_complete` 函数作为回调函数；\n- 如果密码正确，`lightdm.is_authenticated` 将会是 `true`，这时候调用 `lightdm.login(lightdm.authentication_user, session.key)` 即可以该用户身份登录 `session`。\n- 如果密码错误，`lightdm.is_authenticated` 将会是 `false`。\n\n如果要再次输入密码或者切换用户，必须使用 `lightdm.cancel_authentication()` 取消当前用户的认证，之后才能回到第一步重新认证。\n\n<span class=\"truth\" title=\"你知道的太多了\">language 应该用在哪边我不知道。。。</span>\n<span class=\"truth\" title=\"你知道的太多了\">不选好像也没什么问题。。</span>\n\n**记住密码/记住选择**\n\n直接用 `localStorage` 保存即可，记住不要保存之后马上 `login`，这样可能会没有时间保存。\n\n稍微留一点时间放放登录动画，或者监听修改，一修改就保存。\n\n# 安装主题\n\n```bash\nsudo vim /etc/lightdm/lightdm-webkit2-greeter.conf\n#=> webkit_theme = ass-we-can\n\nsudo cp -r ass-we-can /usr/share/lightdm-webkit/themes/ass-we-can\n# 注意不能偷懒用软连接，否则会出问题\n```\n\n然后就可以 logout 看好戏了。\n\n----\n\n~~最后暴露写作目的~~\n\n> 推销一个我 fork 的主题： <https://github.com/swwind/lightdm-theme-gradient>\n> 预览地址： <https://stoic-meninsky-7063ba.netlify.com/>\n\n[end]\n",
      "createdAt": "2019-02-07T18:13:58.000Z",
      "updatedAt": "2023-02-28T23:23:36.062Z",
      "banner": "",
      "category": "教程",
      "tags": ["lightdm"],
      "pin": 0,
      "hidden": false,
      "views": 1093
    },
    {
      "slot": "quick-js",
      "title": "QuickJS 尝鲜",
      "content": "\nQuickJS 是 Fabrice Bellard 大神于 2019 年 7 月 9 日突然发布的一个 js 引擎，据说堪比 V8。\n\n于是我想看看这玩意究竟怎么样。\n\n<!-- more -->\n\n# 安装\n\n## Arch Linux\n\n```bash\npikaur -S quickjs\n```\n\n## 其他\n\n[自己找](https://bellard.org/quickjs/)\n\n# 基本功能\n\n## 运行和编译\n\n先创建 `./hello.js`。\n\n```js\nconst a = 0.1;\nconst b = 0.2;\nconsole.log(a + b);\n```\n\n直接运行：\n\n```bash\n$ qjs hello.js\n0.30000000000000004\n```\n\n编译后运行：\n\n```bash\n$ qjsc -o hello hello.js\n$ ./hello\n0.30000000000000004\n```\n\n编译出来有 3.6MiB。\n\n## async/await\n\n```js\nconst wait = async () => {\n  console.log('wait');\n}\n\nconst main = async () => {\n  console.log('main');\n\n  await wait();\n\n  console.log('main finished');\n}\n\nmain();\n\nconsole.log('invoked main');\n```\n\n```bash\n$ qjs hello.js\nmain\nwait\ninvoked main\nmain finished\n```\n\n## ES6 模块支持\n\n使用 `qjs -m hello.js` 或者将文件后缀名改为 `.mjs`，即可以使用 `import` 和 `export` 了。\n\n据说还能支持 dynamical import。(?)\n\n```js\n// ./module.js\nexport default \"2333\";\n```\n\n```js\n// ./hello.js\nimport module from './module.js'\nconsole.log(module);\n```\n\n```bash\n$ qjs -m hello.js\n2333\n```\n\n关于模块的解析，介绍中说道：\n\n- 以 `.` 或者 `..` 开头的是当前目录下的文件；\n- 不以 `.` 或者 `..` 开头的是系统模块；\n- 以 `.so` 结尾的是用 QuickJS C API 的本地模块。\n\n目前有两个系统模块：`std` 和 `os`。\n\n看了看 `std` 的 [API](https://bellard.org/quickjs/quickjs.html#std-module)，卧槽怎么和 C/C++ 的 API 这么像的呢。。。\n\n```js\nimport * as std from 'std';\n\nstd.printf('%s is my waifu\\n', 'Emilia');\n```\n\n```bash\n$ qjs -m hello.js\nEmilia is my waifu\n```\n\n但是 `printf` 似乎无法处理 `%.2f` 的小数位数。(?)\n\n对于 `.so` 后缀的模块，可能是 C 语言模块？可以用 C 语言来写 JS 的模块了？\n\n# 运行效率\n\n让我们跑一个 1e8 的累加。\n\n```js\nlet sum = 0;\nfor (let i = 0; i < 1e8; ++ i) {\n  sum += i;\n}\n\nconsole.log(sum);\n```\n\n```bash\n$ time qjs hello.js\n4999999950000000\nqjs hello.js  2.95s user 0.00s system 99% cpu 2.955 total\nqjs hello.js  2.89s user 0.00s system 99% cpu 2.892 total\nqjs hello.js  2.89s user 0.01s system 99% cpu 2.901 total\nqjs hello.js  2.89s user 0.00s system 99% cpu 2.901 total\nqjs hello.js  2.88s user 0.00s system 99% cpu 2.883 total\n\n$ qjsc -o hello hello.js\n$ time ./hello\n4999999950000000\n./hello  3.01s user 0.00s system 99% cpu 3.019 total\n./hello  2.93s user 0.00s system 99% cpu 2.936 total\n./hello  2.91s user 0.01s system 99% cpu 2.923 total\n./hello  2.92s user 0.00s system 99% cpu 2.927 total\n./hello  2.88s user 0.04s system 98% cpu 2.950 total\n\n$ time node hello.js\nnode hello.js  0.24s user 0.03s system 98% cpu 0.274 total\nnode hello.js  0.19s user 0.03s system 98% cpu 0.217 total\nnode hello.js  0.20s user 0.02s system 99% cpu 0.214 total\nnode hello.js  0.19s user 0.03s system 99% cpu 0.218 total\nnode hello.js  0.20s user 0.01s system 99% cpu 0.216 total\n```\n\n如此一看发现 QuickJS 其实也没怎么优秀。\n\n而且刚刚我在实验的时候又发现了一堆 bug：\n\n- `console.log` 第一个参数无法作为 format string\n- `console.time` 不见踪影\n- 编译之后 `Date` 对象也不见踪影（直接运行是有的\n- ......\n\n\n# 总结\n\n新东西嘛，我们不能马上就对它要求太高。\n\n目前来讲能够直接编译就已经是 V8 无可比拟的优点了。\n\n我们要用发展的眼光看问题，物质是运动的，运动是永恒的、绝对的。\n\n原作者同时也是 ffmpeg 的作者，说明其能力也是世界一流的。\n\n所以我相信，也许过不了几年，QuickJS 真的能成为抗衡 V8 的另一大 JS 引擎。\n\n<span class=\"truth\" title=\"你知道的太多了\">可能 Lua 真的要凉了</span>\n",
      "createdAt": "2019-07-17T03:43:27.000Z",
      "updatedAt": "2023-02-28T23:23:36.167Z",
      "banner": "",
      "category": "颓废",
      "tags": ["javascript", "quickjs"],
      "pin": 0,
      "hidden": false,
      "views": 1186
    },
    {
      "slot": "about-me",
      "title": "Welcome to swwind's blog!",
      "content": "这里是 swwind 的个人博客，本人是一名退役 OIer，同时也是一名 ACG 爱好者，所以如果你在博客里看到一些奇怪的发言千万不要觉得尴尬，那些只是我中二时期的发言而已。\n\n<!-- more -->\n\n## status\n\n博客的服务器在 Aliyun Singapore，虽然带宽很小，但是访问速度应该还是可以的，因为博客优(mei)化(you)很(ren)好(kan)。\n\n博客目前使用本人自己手写的 [rara](https://github.com/swwind/rara) 引擎，如果发现有任何 BUG 或者安全隐患可以告诉我。\n\n## updates\n\n- [2020.7.14] 高考结束，重新开始更新博客。\n- [2020.8.16] 和同学一起购买了人生中第一个手办（~~虽然是盗版~~\n- [2021.12.6] 更新博客至新的引擎。（<span class=\"truth\">没错，前面一年多什么事情也没发生</span>）\n- [2022.4.13] 更新博客至新的引擎（没错我又重写了一遍）\n\n## other\n\n~~关于暗色主题：博客支持明暗两种主题，目前还没有手动切换的方式，但是可以按照 CSS 的 `@media (prefers-color-scheme: dark)` 来自动选择。Windows 下的 Chrome 用户可以在系统设置中选择暗色模式，但 Linux 下的 Chrome 好像无法自动识别 GTK 主题是否是暗色主题，只能在启动 Chrome 的时候添加参数 `--force-dark-mode --enable-features=WebUIDarkMode` 来强制使用暗色主题。Firefox 可以识别 GTK 暗色主题，但好像在一些奇怪的地方和 Chrome 显示的不太一样，本人推荐使用 Chrome 来浏览本博客。移动端怎么显示我不太会注意到，因为本人不怎么使用手机看网站，因此如果出现了什么奇怪的 bug 也请在评论区反馈。~~\n\n[2022.4.13] 新的博客引擎已经可以资瓷切换明暗色主题了！按钮在右上角！！\n\n如果想要挂友情链接可以在下方评论区留言\\(>▽<)/。\n\n另外整个网站有一个彩蛋，不知道你们能不能找到呢（\n\n<span class=\"truth\"><s>提示：网站上可以使用某个水圣级魔术</s>[2022.4.13] 已经删除</span>\n\n以上。\n",
      "createdAt": "2021-12-06T06:46:21.594Z",
      "updatedAt": "2023-02-28T23:23:34.901Z",
      "banner": "/file/1595234345032-81880838_p0.jpg",
      "category": "公告",
      "tags": ["通知"],
      "pin": 5,
      "hidden": false,
      "views": 1344
    },
    {
      "slot": "happy-new-year",
      "title": "Happy New Year",
      "content": "\n祝大家新年快乐！\n\n好像没什么好写的。\n\n我就点几首歌吧。\n\n<!-- more -->\n\n### 日系\n\n**花火 - 清浦夏実**\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=4920727&auto=0&height=66\"></iframe>\n\n> <span class=\"meiryo\">lalala グッバイ泣いてた日々</span>\n> <span class=\"meiryo\">この気持ちはこの空に預けるよ</span>\n> <span class=\"meiryo\">だから グッバイあの思い出は</span>\n> <span class=\"meiryo\">心の中 大切にするね</span>\n> <span class=\"meiryo\">ありがとう</span>\n\n### Kawaii Bass\n\n**Daijoubu - Axlance / Shiro**\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=412902695&auto=0&height=66\"></iframe>\n\n> <span class=\"meiryo\">大丈夫</span>\n\n### Future Bass\n\n**All Falls Down - Alan Walker**\n\nhttp://music.163.com/#/song?id=515453363\n\n> Cause when it all falls down, then whatever\n> When it don't work out for the better\n> If we just ain't right, and it's time to say goodbye\n> When it all falls down, when it all falls down\n> I'll be fine\n\n### Melodic House\n\n**The Colour Of My Dreams - Xwdit**\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=469295289&auto=0&height=66\"></iframe>\n\n> ~~02后中学制作人~~\n\n",
      "createdAt": "2018-01-01T00:06:10.000Z",
      "updatedAt": "2023-02-24T22:49:22.099Z",
      "banner": "",
      "category": "公告",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 305
    },
    {
      "slot": "ascii-to-gbk",
      "title": "GBK 乱码问题",
      "content": "\n最近在网上下载了一个压缩包，据说密码写在压缩包注释中。\n\n我的解压软件可爱地把压缩包的注释告诉了我：\n\n    Comment =\n    ½âÑ¹ÃÜÂë£ºJune\n\n我沉默了。。。\n\n那么我们就来聊一聊 GBK 乱码的解决方法。\n\n<!-- more -->\n\n好吧，其实简单的不得了。\n\n```js\nconst source = '½âÑ¹ÃÜÂë£ºJune';\nconst array = new Uint8Array(source.split([]).map((c) => c.charCodeAt(0)));\nconsole.log(new TextDecoder('GBK').decode(array));\n// => \"解压密码：June\"\n```\n\n既然如此我就直接写个工具了。\n\n<div id=\"apps\">\n  <textarea id=\"input\" oninput=\"javascript:handleChange();\" class=\"left\" placeholder=\"输入...\"></textarea>\n  <div class=\"middle\"></div>\n  <div id=\"result\" class=\"right\"></div>\n</div>\n\n<style>\n#apps {\n  display: flex;\n  width: 100%;\n  box-sizing: border-box;\n  height: 200px;\n  background: transparent;\n  border-radius: 5px;\n  justify-content: space-between;\n}\n#apps .middle {\n  background: #aaa;\n  width: 2px;\n}\n#apps .left {\n  background: transparent;\n  flex: 1;\n  border: none;\n  outline: none;\n  padding: 10px;\n  font-family: monospace;\n  resize: none;\n}\n#apps .right {\n  flex: 1;\n  padding: 10px;\n}\n</style>\n\n<script type=\"text/javascript\">\nfunction handleChange() {\n      const array = new Uint8Array(document.getElementById('input').value.split([]).map((c) => c.charCodeAt(0)));\n      document.getElementById('result').textContent = new TextDecoder('GBK').decode(array);\n    }\n</script>\n\n\n",
      "createdAt": "2019-01-31T18:36:24.000Z",
      "updatedAt": "2023-02-28T23:23:33.012Z",
      "banner": "",
      "category": "工具",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 806
    },
    {
      "slot": "load-cover-from-mp3-file",
      "title": "从 mp3 文件中加载专辑封面",
      "content": "\n偶然翻出了以前在网上搜到的加载封面的脚本，今天就来分析一下。\n\n我们的目的是实现一个函数 `parseCover(data)`，用来从二进制文件中解析出专辑封面。\n\n<!-- more -->\n\n## 判断是否有含有封面\n\n需要满足两点：\n\n- 文件以 `\"ID3\"` 开头\n- 文件中能找到 `\"APIC\"`\n\n## 获取文件大小\n\n文件大小保存于 `\"APIC\"` 之后的四个字符，以十六进制存储。\n\n## 获取文件\n\n文件大小之后跳过两个字符，接下来长度为 `filesize` 的内容就是文件的主体。\n但是图片的实际内容是从 `ffd8`（16 进制）之后才开始的。\n在此之前会有一些关于图片类型的说明，这个我们用不到，所以不用管。\n\n-------\n\n给出源代码：\n\n```javascript\n// @author swwind\nvar parseCover = function (data) {\n  if (data.substr(0, 3) !== 'ID3') {\n    return false;\n  }\n  var index = data.indexOf('APIC');\n  if (index < 0) {\n    return false;\n  }\n  var calc = function (code) {\n    var res = code.charCodeAt(0) * 0x1000000\n            + code.charCodeAt(1) * 0x10000\n            + code.charCodeAt(2) * 0x100\n            + code.charCodeAt(3) * 0x1;\n    return res;\n  }\n  var filesize = calc(data.substr(index + 4, 4));\n  var pic1 = data.substr(index + 10, filesize);\n  var pic2 = pic1.slice(pic1.indexOf('\\xff\\xd8'));\n  return 'data:image/jpeg;base64,' + btoa(pic2);\n}\n```\n\n顺便讲讲怎么从本地读取文件。\n\n首先，你只能从 `<input type=\"file\">` 中获取文件。\n接着你只需要一个 `FileReader`。\n兼容性还可以。[caniuse](https://caniuse.com/#search=FileReader)\n\n```javascript\nvar reader = new FileReader();\nreader.onload = function (e) {\n  var data = this.result;\n  var image = parseCover(data);\n  document.getElementById('cover').src = image || '';\n}\nreader.readAsBinaryString(file);\n```\n\n",
      "createdAt": "2018-04-05T13:49:04.000Z",
      "updatedAt": "2023-02-28T23:23:39.684Z",
      "banner": "",
      "category": "颓废",
      "tags": [],
      "pin": 0,
      "hidden": false,
      "views": 616
    },
    {
      "slot": "js-ts-gui-framework",
      "title": "js/ts 的桌面图形界面框架汇总",
      "content": "随着 NodeJS 和 Deno 的逐渐普及，JavaScript 社区也在一直寻找着可以用的桌面 APP 解决方案。由于桌面 GUI 的框架大多是用 C/C++ 写的，NodeJS 和 Deno 不得不需要一些使用别的语言包装好的框架。Deno 相比于 Node 可以原生支持 Rust 编写插件，但是目前整个 Deno 社区还在开荒阶段，因此想要用 Rust 里的 GUI 框架也许还要等上几个月（或者几年？）。\n\n目前常见的有以下几种解决方案：\n\n<!-- more -->\n\n1. 包装 Chromium；\n2. 封装 Qt 之类的 C/C++ 框架；\n3. 在不同平台调用不同的系统原生 webview 组件（Cocoa/WebKit on macOS, webkit2gtk on Linux and Edge on Windows 10）并提供统一 API；\n4. 利用 Chrome DevTools Protocol 直接调用已经安装的 Chrome 浏览器创建窗口。\n\n其中第一类包括 [Electron](https://www.electronjs.org/) 以及 [NW.js](https://nwjs.io/) 等框架，Web 兼容性最强，但是包装出来的应用有点大（因为需要塞一个 Chromium）\n\n第二类包括 [Proton Native](https://proton-native.js.org/) 等框架。\n\n第三类包括 [webview_deno](https://github.com/webview/webview_deno), [neutralino](https://neutralino.js.org/), [tauri](https://tauri.studio/) 等框架，Web 兼容性可能没有第一类强，但是包装出来的应用可以很小。\n\n第四类包括 [carlo(unmaintained)](https://github.com/GoogleChromeLabs/carlo) 等框架，由于需要宿主机有至少一个 Chromium 的换皮浏览器，因此可能支持面有一点不全面。\n\n---\n\n四类框架各有优缺点，但是普遍渲染性能较差。因此如果需要对图形渲染要求高的话，还是不建议使用以上的框架。最好去学 C/C++ <span class=\"truth\">或者鬼畜的 Rust </span>以使用高性能的 GUI 框架。",
      "createdAt": "2020-07-26T03:59:43.000Z",
      "updatedAt": "2023-02-28T23:23:38.545Z",
      "banner": "",
      "category": "工具",
      "tags": ["javascript"],
      "pin": 0,
      "hidden": false,
      "views": 1113
    }
  ],
  "replies": [
    {
      "id": 1,
      "postSlot": "codeforces-round-396-div-2-solution",
      "nickname": "Ziqi&nbsp;Liang",
      "homepage": "https://github.com/liangziqi",
      "content": "我NOIP要AK",
      "email": "lzqlzq233@163.com",
      "github": "liangziqi",
      "qq": "",
      "createdAt": "2017-10-12T15:09:17.254Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 2,
      "postSlot": "codeforces-round-396-div-2-solution",
      "nickname": "jzqjzq",
      "homepage": "",
      "content": "楼上的你肯定会爆零，我NOIP才要AK，你们通通都给我爆蛋",
      "email": "jzq123456788@126.com",
      "github": "",
      "qq": "",
      "createdAt": "2017-10-28T05:02:18.650Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 3,
      "postSlot": "codeforces-round-396-div-2-solution",
      "nickname": "Menci",
      "homepage": "https://men.ci",
      "content": "233",
      "email": "huanghaorui301@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2017-10-28T05:04:42.362Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 4,
      "postSlot": "codeforces-round-396-div-2-solution",
      "nickname": "SW_Wind",
      "homepage": "https://swwind.top",
      "content": "我NOIP也要AK",
      "email": "swwind2333@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2017-10-28T05:05:37.451Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 5,
      "postSlot": "codeforces-round-396-div-2-solution",
      "nickname": "SW_Wind",
      "homepage": "https://swwind.top",
      "content": "我NOIP要AK",
      "email": "swwind2333@qq.com",
      "github": "",
      "qq": "swwind2333",
      "createdAt": "2017-10-28T05:05:38.605Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 6,
      "postSlot": "codeforces-round-396-div-2-solution",
      "nickname": "SW_Wind",
      "homepage": "https://swwind.top",
      "content": "我NOIP也要AK",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2017-10-28T05:06:01.080Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 7,
      "postSlot": "codeforces-round-396-div-2-solution",
      "nickname": "SW_Wind",
      "homepage": "https://swwind.top",
      "content": "我NOIP还要AK",
      "email": "2670529647@qq.com",
      "github": "",
      "qq": "2670529647",
      "createdAt": "2017-10-28T05:07:09.816Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 8,
      "postSlot": "noip2017-travel",
      "nickname": "shenzhebei",
      "homepage": "http://shenzhebei.github.io",
      "content": "%%%",
      "email": "1246431727@qq.com",
      "github": "",
      "qq": "1246431727",
      "createdAt": "2017-11-19T09:28:02.648Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 9,
      "postSlot": "noip2017-travel",
      "nickname": "lzq",
      "homepage": "",
      "content": "我太强了，我今年NOIP要AK",
      "email": "swwind2333@qq.com",
      "github": "",
      "qq": "swwind2333",
      "createdAt": "2018-02-09T07:40:41.699Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 10,
      "postSlot": "noip2017-travel",
      "nickname": "SW_Wind",
      "homepage": "https://swwind.top",
      "content": "[@SW\\_Wind](#5a7d5079d50eee0042cf47d2) ，%%%lzq NOIP AK",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-02-10T00:28:34.605Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36",
      "replyTo": 9
    },
    {
      "id": 11,
      "postSlot": "happy-new-year",
      "nickname": "zhzh2001",
      "homepage": "https://zhzh2001.github.io/",
      "content": "我的Links中_唯一_写了这个的，看来我也要写一篇。顺便说一下，我的bitbucket仓库已经变成了[https://bitbucket.org/zhzh2001/learning.201\\*\\*8\\*\\*](https://bitbucket.org/zhzh2001/learning.201**8**)，旧的仓库已经被重命名为learning.201**7**。我已经发送了邀请。",
      "email": "zhangzheng0928z@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-01-01T06:27:18.111Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 12,
      "postSlot": "happy-new-year",
      "nickname": "冯小贤",
      "homepage": "https://toyou.ren",
      "content": "嘿，boy♂",
      "email": "i@mdzz.name",
      "github": "",
      "qq": "",
      "createdAt": "2018-01-07T15:27:21.686Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 13,
      "postSlot": "happy-new-year",
      "nickname": "S",
      "homepage": "",
      "content": "HEY",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2018-01-15T13:22:29.351Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
      "replyTo": 12
    },
    {
      "id": 14,
      "postSlot": "happy-new-year",
      "nickname": "S2",
      "homepage": "",
      "content": "[@S](#5a5cab1544d904006aaec828) ，222",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2018-01-15T13:22:47.755Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
      "replyTo": 13
    },
    {
      "id": 15,
      "postSlot": "zjoi2018-day1",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "<img src=\"\" onerror=\"alert('XSS!')\" />",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-03-28T12:59:08.143Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 16,
      "postSlot": "zjoi2018-day1",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "233",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2018-03-28T13:00:52.820Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 17,
      "postSlot": "zjoi2018-day1",
      "nickname": "&lt;img src=&quot;&quot; onerror=&quot;alert(&#39;XSS!&#39;)&quot; /&gt;",
      "homepage": "https://q234rty.top",
      "content": "233",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-03-28T13:01:17.140Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 18,
      "postSlot": "zjoi2018-day1",
      "nickname": "Anonymous",
      "homepage": "",
      "content": "没有烤基头照骗差评",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2018-03-29T04:47:42.544Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 19,
      "postSlot": "zjoi2018-day1",
      "nickname": "SHENZHEBEI",
      "homepage": "http://SHENZHEBEI.github.io",
      "content": "没有烤基头照骗差评",
      "email": "1246431727@qq.com",
      "github": "",
      "qq": "1246431727",
      "createdAt": "2018-03-29T09:15:33.170Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 20,
      "postSlot": "zjoi2018-day1",
      "nickname": "SW_Wind",
      "homepage": "https://swwind.top",
      "content": "据说 i.loli.net 经常炸掉？",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-04-08T23:40:53.686Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 21,
      "postSlot": "zjoi2018-day1",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "![QQ图片20180707162741.jpg](/img/sgr.png)",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-07-07T08:28:18.545Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 22,
      "postSlot": "how-to-use-live2d-in-hexo",
      "nickname": "SW_Wind",
      "homepage": "https://swwind.top",
      "content": "事实上我发现，有一些模型解压出来的图片似乎经过了加密  \n比这更糟糕的是 Steam 还不支持创意工坊的直接下载（用 Steamworkshopdownloader 也不行",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-03-17T10:32:32.143Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 23,
      "postSlot": "how-to-use-live2d-in-hexo",
      "nickname": "Pr",
      "homepage": "https://problem233.github.io",
      "content": "源代码编译时没有经过混淆，所以符号名是正常的。\n\nSteam的创意工坊文件可以在Steam库\\\\workshop\\\\content下找到，但是所有游戏的工坊文件都是混在一起的，需要自己找出来。。",
      "email": "problem233@outlook.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-06-02T00:05:02.837Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0",
      "replyTo": null
    },
    {
      "id": 24,
      "postSlot": "how-to-use-live2d-in-hexo",
      "nickname": "Pr",
      "homepage": "https://problem233.github.io",
      "content": "啊错了。。并不是混在一起的，每个游戏单独一个文件夹，但是只有数字标识，到底哪个是哪个还是要自己找。。",
      "email": "problem233@outlook.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-06-02T01:10:40.011Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0",
      "replyTo": null
    },
    {
      "id": 25,
      "postSlot": "how-to-use-live2d-in-hexo",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "假的呀，解压出来一堆 .bin 文件\n\n还是自己画一张吧",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-06-07T13:05:46.279Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36",
      "replyTo": 23
    },
    {
      "id": 26,
      "postSlot": "how-to-use-live2d-in-hexo",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "注意：现在网络上的大部分 lpk 文件里面的图片都经过加密处理，此文章已经过时，仅供参考。",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-02-11T11:43:02.213Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.96 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 27,
      "postSlot": "how-to-use-live2d-in-hexo",
      "nickname": "shajjl",
      "homepage": "",
      "content": "所以您为什么不加上live2d呢QWQ",
      "email": "cuiyue5910@163.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-08-13T12:20:26.651Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 28,
      "postSlot": "how-to-use-live2d-in-hexo",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "太死宅了（",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-08-13T12:29:02.863Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36",
      "replyTo": 27
    },
    {
      "id": 29,
      "postSlot": "write-a-simple-acg-game",
      "nickname": "nn020701",
      "homepage": "https://nn020701.coding.me/",
      "content": "扔个Chrome进去还行……",
      "email": "723221403@qq.com",
      "github": "",
      "qq": "723221403",
      "createdAt": "2018-04-02T06:11:04.508Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 30,
      "postSlot": "write-a-simple-acg-game",
      "nickname": "Pr",
      "homepage": "https://problem233.github.io",
      "content": "这个exe确实是这样的😂",
      "email": "problem233@outlook.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-06-02T00:02:03.220Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0",
      "replyTo": null
    },
    {
      "id": 31,
      "postSlot": "write-a-simple-acg-game",
      "nickname": "Dsg",
      "homepage": "",
      "content": "。嘤嘤嘤看不懂",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-13T12:31:01.536Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 32,
      "postSlot": "write-a-simple-acg-game",
      "nickname": "tourist",
      "homepage": "",
      "content": "啪啪啪",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-09-02T04:27:25.623Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 33,
      "postSlot": "reverse-sentense",
      "nickname": "jzqjzq",
      "homepage": "https://jzqjzq.coding.me",
      "content": "ɐl ƃuɐı̣b ı̣ɐʇ puı̣ʍ‾ʍs",
      "email": "jzq123456788@126.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-04-11T12:49:04.171Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 34,
      "postSlot": "reverse-sentense",
      "nickname": "Pr",
      "homepage": "https://problem233.github.io",
      "content": "vuejs的版本挂了",
      "email": "problem233@outlook.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-06-02T00:03:03.608Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0",
      "replyTo": null
    },
    {
      "id": 35,
      "postSlot": "reverse-sentense",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "垃圾 bootcdn 封我 .top 域名 果然还是 cloudflare 吼~",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-06-07T13:03:50.179Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36",
      "replyTo": 34
    },
    {
      "id": 36,
      "postSlot": "reverse-sentense",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "现在我发现 `<div>{{ result }}</div>` 失效，改成 `<div v-text=\"result\"></div>` 修复。",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-01-16T08:33:04.559Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
      "replyTo": 34
    },
    {
      "id": 37,
      "postSlot": "reverse-sentense",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "因为博客框架原因，React 和 Vue 的样例均已删除",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-10-03T07:37:26.221Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 38,
      "postSlot": "zjoi-day2",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "%%%",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-04-29T15:09:53.525Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 39,
      "postSlot": "zjoi-day2",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "test",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-04-29T15:10:02.863Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 40,
      "postSlot": "zjoi-day2",
      "nickname": "lzq",
      "homepage": "",
      "content": "草，随便翻开一篇发现你雪之下的图片没了（",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-04-07T15:20:04.535Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 41,
      "postSlot": "zjoi-day2",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "问题不大",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-04-08T06:11:54.897Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36",
      "replyTo": 40
    },
    {
      "id": 42,
      "postSlot": "tensorflow",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "%%%",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-07-12T13:38:01.510Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 43,
      "postSlot": "tensorflow",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "(=・ω・=)",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-07-14T14:26:32.137Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0",
      "replyTo": null
    },
    {
      "id": 44,
      "postSlot": "html5-game",
      "nickname": "tourist",
      "homepage": "",
      "content": "死宅真恶心",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-06-19T01:40:25.704Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 45,
      "postSlot": "html5-game",
      "nickname": "tourist",
      "homepage": "",
      "content": "同上",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-06-19T01:40:37.626Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 46,
      "postSlot": "canvas-live",
      "nickname": "tourist",
      "homepage": "",
      "content": "找啊",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2018-08-27T11:36:59.165Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 47,
      "postSlot": "canvas-live",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "233",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-08-31T05:00:18.419Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 48,
      "postSlot": "canvas-live",
      "nickname": "tourist",
      "homepage": "",
      "content": "[https://slay.one/?server=prod-cn-bj&game=102423&mode=4](https://slay.one/?server=prod-cn-bj&game=102423&mode=4)",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2018-09-06T06:25:35.768Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 49,
      "postSlot": "canvas-live",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "![](/img/haipa.png)",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-09-06T10:36:41.001Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36",
      "replyTo": 48
    },
    {
      "id": 50,
      "postSlot": "canvas-live",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "然后学校就更新防火墙了。。",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-09-28T12:55:18.107Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36",
      "replyTo": 48
    },
    {
      "id": 51,
      "postSlot": "canvas-live",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "test",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-10-06T00:44:09.501Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Mobile Safari/537.36",
      "replyTo": null
    },
    {
      "id": 52,
      "postSlot": "canvas-live",
      "nickname": "jzqjzq",
      "homepage": "https://jzqjzq.coding.me",
      "content": "666",
      "email": "jzq123456788@126.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-10-25T04:43:04.348Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 53,
      "postSlot": "canvas-live",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": " 为什么这篇文章看的人这么多（还是说都是刷的 (￣3￣)",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-21T09:06:10.237Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 54,
      "postSlot": "canvas-live",
      "nickname": "sft",
      "homepage": "",
      "content": "您好，我使用livego搭建之后，用obs推流告诉我无法连接服务器\r\n",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-05-06T18:37:35.021Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1 Safari/605.1.15",
      "replyTo": null
    },
    {
      "id": 55,
      "postSlot": "canvas-live",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "用 ffmpeg 可以正常推流吗？",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-05-11T08:48:31.037Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36",
      "replyTo": 54
    },
    {
      "id": 56,
      "postSlot": "canvas-live",
      "nickname": "zise",
      "homepage": "",
      "content": "你好，请问可以给我一份关于electron直播的那个源码吗，遇到一点点小问题，谢谢",
      "email": "1056824847@qq.com",
      "github": "",
      "qq": "1056824847",
      "createdAt": "2020-11-21T04:14:53.608Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 57,
      "postSlot": "number-theory",
      "nickname": "jzqjzq",
      "homepage": "https://jzqjzq.coding.me",
      "content": "SW_Wind AK King!",
      "email": "jzq233jzq@qq.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-01-14T08:13:57.444Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/71.0.3578.98 Chrome/71.0.3578.98 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 58,
      "postSlot": "number-theory",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "jzqjzq AK IOI 9102",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-01-14T23:14:54.365Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 59,
      "postSlot": "number-theory",
      "nickname": "swwind",
      "homepage": "",
      "content": "I am akking",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-01-14T23:16:07.185Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
      "replyTo": 58
    },
    {
      "id": 60,
      "postSlot": "number-theory",
      "nickname": "RicardoNi",
      "homepage": "",
      "content": "前排留名！！！",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-01-15T02:12:58.485Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 61,
      "postSlot": "number-theory",
      "nickname": "swwind",
      "homepage": "",
      "content": "我pkuwc要ak！",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-01-19T07:27:27.672Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 62,
      "postSlot": "number-theory",
      "nickname": "shenzhebei",
      "homepage": "",
      "content": "%%%",
      "email": "1246431727@qq.com",
      "github": "",
      "qq": "1246431727",
      "createdAt": "2019-01-21T00:44:00.293Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
      "replyTo": 61
    },
    {
      "id": 63,
      "postSlot": "functional-1",
      "nickname": "lzqlzq",
      "homepage": "https://liuli.eu",
      "content": "%%%",
      "email": "1403382551@qq.com",
      "github": "",
      "qq": "1403382551",
      "createdAt": "2018-10-09T13:32:15.975Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 64,
      "postSlot": "functional-1",
      "nickname": "PSR-0E9H",
      "homepage": "https://problem233.github.io/",
      "content": "Haskell 的 do 区块实际上是个语法糖，\n\n    hello = do\n      putStr \"hello\"\n      putStr \" world\"\n\n相当于\n\n    hello = putStr \"hello\" >> putStr \" world\"\n\n其中 `(>>)` 运算符的意义是连接两个 `IO` 操作。\n\n你还可以这样：\n\n    multiply2 = do\n      str <- getLine\n      print (2 * read str)\n    \n    -- 相当于\n    \n    multiply2 = getLine >>= \\x -> print $ 2 * read x\n\n`(>>=)` 运算符的含义是把前一个 IO 操作的返回值传给下一个函数。",
      "email": "problem233@outlook.comn",
      "github": "",
      "qq": "",
      "createdAt": "2018-11-24T10:51:31.132Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0",
      "replyTo": null
    },
    {
      "id": 65,
      "postSlot": "functional-1",
      "nickname": "PSR-0E9H",
      "homepage": "https://problem233.github.io/",
      "content": "Valine 的代码块居然不是等宽字体……",
      "email": "problem233@outlook.comn",
      "github": "",
      "qq": "",
      "createdAt": "2018-11-24T10:52:43.662Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0",
      "replyTo": 64
    },
    {
      "id": 66,
      "postSlot": "functional-1",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "%%%",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-12-05T13:13:16.785Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1",
      "replyTo": 65
    },
    {
      "id": 67,
      "postSlot": "functional-1",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "原来 devTools 可以顺便改 userAgent 的吗。。。",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2018-12-05T13:15:28.391Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3595.2 Safari/537.36",
      "replyTo": 66
    },
    {
      "id": 68,
      "postSlot": "arch-install",
      "nickname": "RicardoNi",
      "homepage": "",
      "content": "你绍兴的dns写错了小心害人",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-02-21T05:30:10.878Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 69,
      "postSlot": "arch-install",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "上虞移动 ping 这个 ip 100% 丢包率。。。",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-02-23T09:41:22.193Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 70,
      "postSlot": "arch-install",
      "nickname": "RicardoNi",
      "homepage": "",
      "content": "最后不是107.28吗207是啥啊",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-15T12:08:04.349Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36",
      "replyTo": 69
    },
    {
      "id": 71,
      "postSlot": "arch-install",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "手误，懒得改了，用 114.114.114.114 就行了",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-15T13:05:45.004Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": 70
    },
    {
      "id": 72,
      "postSlot": "arch-install",
      "nickname": "RicardoNi",
      "homepage": "",
      "content": "关于Windows的引导：如果找不到引导可以做一个Windows系列的PE，然后用bcdboot重新写入引导就可以了",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-16T10:08:01.861Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 73,
      "postSlot": "arch-install",
      "nickname": "zhzh2001",
      "homepage": "https://zhzh2001.gitee.io/",
      "content": "- {% remark %}炸了\n- 当然用BOOTICE修复引导，还能改BCD\n- 应该增加Legacy的说明\n- 倒是写点WM之类的啊，我还困在tty，没搞好i3",
      "email": "zhangzheng0928z@outlook.com",
      "github": "",
      "qq": "",
      "createdAt": "2020-07-29T01:57:11.572Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 74,
      "postSlot": "arch-install",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "1. 修好了\n2. 这是啥\n3. 这又是啥\n4. 我今天也在重装 Arch，等我把锅全都修好了就写（",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2020-07-29T09:57:51.894Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36",
      "replyTo": 73
    },
    {
      "id": 76,
      "postSlot": "certificate",
      "nickname": "timber3252",
      "homepage": "",
      "content": "%%%",
      "email": "timber2523@yandex.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-06T06:20:39.105Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 77,
      "postSlot": "certificate",
      "nickname": "q234rty",
      "homepage": "https://q234rty.top",
      "content": "%%%",
      "email": "q23456yuiop@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-06T06:22:55.367Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 78,
      "postSlot": "certificate",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "%%%",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-06T06:30:03.170Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": 77
    },
    {
      "id": 79,
      "postSlot": "certificate",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "%%%",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-06T06:30:06.721Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 80,
      "postSlot": "certificate",
      "nickname": "problem233",
      "homepage": "https://problem233.github.io",
      "content": "为什么开发环境也要 https？……",
      "email": "problem233@outlook.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-12T17:33:36.760Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0",
      "replyTo": null
    },
    {
      "id": 81,
      "postSlot": "certificate",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "总会有用到的地方的咯（￣▽￣）",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-13T10:36:32.871Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": 80
    },
    {
      "id": 82,
      "postSlot": "certificate",
      "nickname": "sxyugao",
      "homepage": "https://sxyugao.top",
      "content": "%%%",
      "email": "sxyugao@qq.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-15T12:04:41.169Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 83,
      "postSlot": "certificate",
      "nickname": "RicardoNi",
      "homepage": "",
      "content": "%%%",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-15T12:04:58.274Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 84,
      "postSlot": "certificate",
      "nickname": "RicardoNi",
      "homepage": "",
      "content": "为啥你的回复系统只能看见linux不知道是哪个发行版",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-04-15T12:05:39.399Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 85,
      "postSlot": "certificate",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "浏览器里没有 API",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-08-05T03:43:37.127Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36",
      "replyTo": 84
    },
    {
      "id": 86,
      "postSlot": "lightdm-theme-writing",
      "nickname": "tourist",
      "homepage": "",
      "content": "不明觉厉",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-02-09T10:51:16.833Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Linux; U; Android 8.1.0; zh-cn; MI 8 SE Build/OPM1.171019.019) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.5.1",
      "replyTo": null
    },
    {
      "id": 87,
      "postSlot": "lightdm-theme-writing",
      "nickname": "timber2523",
      "homepage": "",
      "content": "%%%",
      "email": "timber2523@yandex.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-02-15T04:57:11.078Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.96 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 88,
      "postSlot": "quick-js",
      "nickname": "shajjl",
      "homepage": "https://shajjl.github.io/",
      "content": "是npm下的吗",
      "email": "cuiyue5910@163.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-07-26T12:57:54.152Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 89,
      "postSlot": "quick-js",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "不，这是一个用 C 写的 js 编译器",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-07-26T14:12:21.445Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 90,
      "postSlot": "bt-download",
      "nickname": "zhzh2001",
      "homepage": "https://zhzh2001.coding.me/",
      "content": "我似乎在Windows下用qBittorrent就没什么问题，也许是平台。",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2019-10-27T05:38:53.242Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 91,
      "postSlot": "bt-download",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "也许是因为你下的种子比较正常（",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2019-11-02T10:59:36.770Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 92,
      "postSlot": "about-me",
      "nickname": "sxyugao",
      "homepage": "https://sxyugao.top",
      "content": "所以彩蛋在哪（",
      "email": "sxyugao@qq.com",
      "github": "",
      "qq": "",
      "createdAt": "2020-08-14T15:11:51.750Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 93,
      "postSlot": "about-me",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "在你的心里（",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2020-08-19T11:57:38.441Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 94,
      "postSlot": "about-me",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "测试评论功能",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2020-11-24T11:51:26.928Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Linux; Android 10; Redmi K30 Pro) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.116 Mobile Safari/537.36 EdgA/45.10.4.5088",
      "replyTo": null
    },
    {
      "id": 95,
      "postSlot": "about-me",
      "nickname": "attack204",
      "homepage": "htttps://attack204.com",
      "content": "tql\n",
      "email": "757394026@qq.com",
      "github": "",
      "qq": "757394026",
      "createdAt": "2020-11-24T12:02:39.520Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 96,
      "postSlot": "about-me",
      "nickname": "xiaoming",
      "homepage": "",
      "content": "好耶",
      "email": "1611194353@qq.com",
      "github": "",
      "qq": "1611194353",
      "createdAt": "2021-03-09T12:59:30.859Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36 Edg/89.0.774.45",
      "replyTo": null
    },
    {
      "id": 97,
      "postSlot": "about-me",
      "nickname": "lzq",
      "homepage": "",
      "content": "只要你不尴尬，尴尬的就会是别人",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-04-03T01:24:19.425Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 98,
      "postSlot": "about-me",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "你不对劲",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-04-04T10:46:29.531Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36",
      "replyTo": 97
    },
    {
      "id": 99,
      "postSlot": "about-me",
      "nickname": "Paro",
      "homepage": "https://paro.one/",
      "content": "我改名啦，域名也换了（problem233 →…→ paro）",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-11-24T13:21:13.767Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0",
      "replyTo": null
    },
    {
      "id": 100,
      "postSlot": "about-me",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "已更新✓",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-11-25T04:47:40.620Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
      "replyTo": 99
    },
    {
      "id": 101,
      "postSlot": "js-ts-gui-framework",
      "nickname": "timber3252",
      "homepage": "https://blog.timber3252.me/",
      "content": "%%%",
      "email": "timber2523@yandex.com",
      "github": "",
      "qq": "",
      "createdAt": "2020-07-26T05:54:29.139Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 102,
      "postSlot": "js-ts-gui-framework",
      "nickname": "SHENZHEBEI",
      "homepage": "",
      "content": "老铁666",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2020-09-10T01:05:21.915Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 103,
      "postSlot": "archlinux-setup",
      "nickname": "ctc",
      "homepage": "",
      "content": "给个github的使用操作吧！！！GKD（我突然想写blog了）",
      "email": "723221403@qq.com",
      "github": "",
      "qq": "723221403",
      "createdAt": "2020-10-12T14:28:29.939Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 104,
      "postSlot": "galois-theory",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "评论测试？",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2020-11-24T11:57:34.792Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 105,
      "postSlot": "vue3-ssr-tutorial",
      "nickname": "ctc",
      "homepage": "",
      "content": "国内最流行的前段SOP框架（）",
      "email": "723221403@qq.com",
      "github": "",
      "qq": "723221403",
      "createdAt": "2021-04-02T04:08:39.677Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 106,
      "postSlot": "happy-new-year-2021",
      "nickname": "hahaha",
      "homepage": "",
      "content": "hahaha",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-01-01T10:50:48.776Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.101 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 107,
      "postSlot": "happy-new-year-2021",
      "nickname": "attack",
      "homepage": "http://blog.attack204.com",
      "content": "太神仙了吧\n你这是追了多少番啊orz\n",
      "email": "757394026@qq.com",
      "github": "",
      "qq": "757394026",
      "createdAt": "2021-01-04T06:55:37.198Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 108,
      "postSlot": "happy-new-year-2021",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "我这是摸了多少🐟啊",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-01-06T14:04:05.781Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
      "replyTo": 107
    },
    {
      "id": 109,
      "postSlot": "happy-new-year-2021",
      "nickname": "赤鸢",
      "homepage": "",
      "content": "大学生活好啊",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-03-22T15:12:58.828Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 110,
      "postSlot": "happy-new-year-2021",
      "nickname": "szb",
      "homepage": "???",
      "content": "SNRSNR",
      "email": "???",
      "github": "",
      "qq": "",
      "createdAt": "2021-06-01T13:06:02.696Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 111,
      "postSlot": "happy-new-year-2021",
      "nickname": "szb",
      "homepage": "???",
      "content": "快来教我做事",
      "email": "???",
      "github": "",
      "qq": "",
      "createdAt": "2021-08-03T14:24:04.889Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 112,
      "postSlot": "happy-new-year-2021",
      "nickname": "joker",
      "homepage": "",
      "content": "tql",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-10-10T15:39:13.542Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Linux; Android 10; HarmonyOS; TAS-AN00; HMSCore 6.1.0.314) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.93 HuaweiBrowser/11.1.5.310 Mobile Safari/537.36",
      "replyTo": null
    },
    {
      "id": 113,
      "postSlot": "clean-bilibili",
      "nickname": "lzq",
      "homepage": "",
      "content": "你终于更新了",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-04-07T00:36:40.879Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Linux; Android 10; Mi 10) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.181 Mobile Safari/537.36",
      "replyTo": null
    },
    {
      "id": 114,
      "postSlot": "anbox-arknights",
      "nickname": "ctc",
      "homepage": "",
      "content": "tql。竟然更新了。",
      "email": "723221403@qq.com",
      "github": "",
      "qq": "723221403",
      "createdAt": "2021-05-11T05:54:06.434Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 115,
      "postSlot": "anbox-arknights",
      "nickname": "wind",
      "homepage": "",
      "content": "博主你好,请教个问题.\n我安装了linux-zen,更新了grub,启动anbox container mgr的时候,日志显示 `/usr/bin/anbox: error while loading shared libraries: libboost_log.so.1.75.0: cannot open shared object file: No such file or directory`\n不知道你是否有遇到过呢",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-07-14T08:42:57.035Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4464.5 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 116,
      "postSlot": "anbox-arknights",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "没有呢，但是看上去你应该是少了 `boost` 这个依赖。（好像是废话）",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-07-19T12:22:35.156Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
      "replyTo": 115
    },
    {
      "id": 117,
      "postSlot": "anbox-arknights",
      "nickname": "Tee",
      "homepage": "https://lado.me",
      "content": "因为当下arch的libboost_log.so是1.76.0了，1.75.0的同时期依赖大概是这些：\n\nsudo pacman -U boost-1.75.0-3-x86_64.pkg.tar.zst boost-libs-1.75.0-3-x86_64.pkg.tar.zst libphonenumber-8.12.21-1-x86_64.pkg.tar.zst protobuf-3.16.0-1-x86_64.pkg.tar.zst android-tools-31.0.0-3-x86_64.pkg.tar.zst\n",
      "email": "i@lado.me",
      "github": "",
      "qq": "",
      "createdAt": "2021-07-27T10:10:00.930Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",
      "replyTo": 115
    },
    {
      "id": 118,
      "postSlot": "anbox-arknights",
      "nickname": "steveyang137",
      "homepage": "",
      "content": "请问楼主知道怎么修复 窗口上方的白条不见了 我怎么点什么按钮都有垂直方向上的偏差 的问题吗",
      "email": "steveyang137@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-10-23T14:32:47.621Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:93.0) Gecko/20100101 Firefox/93.0",
      "replyTo": null
    },
    {
      "id": 119,
      "postSlot": "bevy-engine-ichi",
      "nickname": "szb",
      "homepage": "",
      "content": "前排",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-11-12T11:00:20.938Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 120,
      "postSlot": "bevy-engine-ichi",
      "nickname": "宁涛",
      "homepage": "",
      "content": "你也是有点牛皮，唯一一片技术文章就是王炸",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-12-05T18:04:58.450Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 121,
      "postSlot": "bevy-engine-ichi",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "？？？",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-12-06T04:51:10.546Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
      "replyTo": 120
    },
    {
      "id": 122,
      "postSlot": "blog-update-2021",
      "nickname": "lzq",
      "homepage": "",
      "content": "好耶（不好",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-12-06T18:58:59.230Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 123,
      "postSlot": "blog-update-2021",
      "nickname": "lzq",
      "homepage": "",
      "content": "为什么评论的显示系统和浏览器版本功能不见了",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-12-06T19:05:04.075Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 124,
      "postSlot": "blog-update-2021",
      "nickname": "swwind",
      "homepage": "https://swwind.me",
      "content": "还没搞，不过问题不大（",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2021-12-07T18:25:59.672Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
      "replyTo": 123
    },
    {
      "id": 125,
      "postSlot": "bevy-engine-ichi",
      "nickname": "宁涛",
      "homepage": "",
      "content": "写得好呀",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2021-12-08T22:35:36.257Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "replyTo": 121
    },
    {
      "id": 126,
      "postSlot": "bevy-engine-ichi",
      "nickname": "ctc",
      "homepage": "",
      "content": "有(下)吗，还有这个评论怎么这么丑",
      "email": "723221403@qq.com",
      "github": "",
      "qq": "723221403",
      "createdAt": "2021-12-14T13:56:06.171Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 127,
      "postSlot": "bevy-engine-ichi",
      "nickname": "宁涛",
      "homepage": "",
      "content": "提个bug，60fps\n不是    .with_run_criteria(FixedTimestep::step(1.0 / 60.0)) 吗？",
      "email": "981855012@qq.com",
      "github": "",
      "qq": "981855012",
      "createdAt": "2022-01-01T21:27:04.752Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 128,
      "postSlot": "anbox-arknights",
      "nickname": "newbie",
      "homepage": "",
      "content": "博主你好，我在开机和关机的时候都会提示[FAILED]failed to mount Android Binder File System,请问是怎么回事？虽然好像对正常使用没什么影响。",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2022-01-07T19:50:26.531Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:95.0) Gecko/20100101 Firefox/95.0",
      "replyTo": null
    },
    {
      "id": 129,
      "postSlot": "anbox-arknights",
      "nickname": "newbie",
      "homepage": "",
      "content": "按步骤挂载binders之后，开关机还是提示[FAILED]failed to mount /dev/binderfs",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2022-01-07T20:56:10.773Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:95.0) Gecko/20100101 Firefox/95.0",
      "replyTo": null
    },
    {
      "id": 130,
      "postSlot": "about-me",
      "nickname": "Anonymous",
      "homepage": "",
      "content": "好耶",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2022-01-17T21:55:18.132Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 131,
      "postSlot": "happy-new-year-2021",
      "nickname": "hhh",
      "homepage": "",
      "content": "所以2021年度总结呢\n",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2022-01-17T21:56:26.176Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 132,
      "postSlot": "certificate",
      "nickname": "daimian",
      "homepage": "",
      "content": "感谢博主，对我帮助很大！最近在写 https 服务器。",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2022-02-07T10:12:22.988Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 133,
      "postSlot": "canvas-live",
      "nickname": "yoko",
      "homepage": "https://github.com/q191201771",
      "content": "找WebSocket的资料时看到这篇博客，感谢博主分享。\n\nsft那位兄弟可以试试我这个开源项目哈\nhttps://github.com/q191201771/lal\n也是Golang的，开箱即用，已经支持RTMP，WebSocket等协议了。",
      "email": "191201771@qq.com",
      "github": "q191201771",
      "qq": "191201771",
      "createdAt": "2022-02-14T16:17:07.820Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.80 Safari/537.36",
      "replyTo": 54
    },
    {
      "id": 134,
      "postSlot": "anbox-arknights",
      "nickname": "abola",
      "homepage": "",
      "content": "按照wiki走一次成功，然后发现只兼容x86_64，没什么用。。这个框架的apk国内基本没有，除了半残的bilili(赞美b站，虽然闪退）。然后就开启了逆安装的过程ʱªʱªʱª (ᕑᗢᓫา∗)˒\nanbox-image-houdini还没试过，不过已经麻利卸载掉了。我还是去搞模拟器虚拟arm框架吧，anbox虽然是底层兼容效率高但是兼容性差，并且谷歌play好像还已经不支持anbox了（还要一个原因是因为我用adb设置http代理然后没作用，就很无助了）\n安装英伟达驱动的时候参考up主文章了，感谢O(∩_∩)O",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2022-02-17T14:12:27.544Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:97.0) Gecko/20100101 Firefox/97.0",
      "replyTo": null
    },
    {
      "id": 135,
      "postSlot": "blog-update-2021",
      "nickname": "Anonymous",
      "homepage": "",
      "content": "洛琪希我老婆",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2022-03-23T16:46:10.313Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 136,
      "postSlot": "about-me",
      "nickname": "chino",
      "homepage": "",
      "content": "QAQ",
      "email": "839203521@qq.com",
      "github": "",
      "qq": "839203521",
      "createdAt": "2022-03-26T20:32:06.377Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 137,
      "postSlot": "number-theory",
      "nickname": "lhr",
      "homepage": "",
      "content": "swwind AK Queen!",
      "email": "Wjrzmddhjx42@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2022-04-12T22:01:25.103Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36",
      "replyTo": null
    },
    {
      "id": 606,
      "postSlot": "x25519",
      "nickname": "swwind",
      "homepage": "https://sww.moe",
      "content": "妈妈生的",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2023-01-12T19:16:57.545Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:108.0) Gecko/20100101 Firefox/108.0",
      "replyTo": 605
    },
    {
      "id": 138,
      "postSlot": "about-me",
      "nickname": "swwind",
      "homepage": "https://sww.moe",
      "content": "评论功能又坏掉了 QAQ",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2022-06-24T23:54:56.997Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:101.0) Gecko/20100101 Firefox/101.0",
      "replyTo": null
    },
    {
      "id": 139,
      "postSlot": "archlinux-setup",
      "nickname": "Thyrsi",
      "homepage": "",
      "content": "好棒好棒！作者写得很详细哦！加一点截图就更好了！",
      "email": "",
      "github": "",
      "qq": "2237499852",
      "createdAt": "2022-06-29T23:33:07.282Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36 Edg/103.0.1264.37",
      "replyTo": null
    },
    {
      "id": 167,
      "postSlot": "anbox-arknights",
      "nickname": "rikka",
      "homepage": "https://space.bilibili.com/143791671",
      "content": "我用 Waydroid 能流畅跑最高画质崩坏3, 但是不能跑明日方舟, 听说别人有成功运行的. 刚才试了 Genymotion, 能跑方舟性能略差, 今天试试 anbox",
      "email": "ayasa0520@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2022-09-21T01:57:06.072Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36 Edg/106.0.0.0",
      "replyTo": null
    },
    {
      "id": 171,
      "postSlot": "anbox-arknights",
      "nickname": "swwind",
      "homepage": "https://sww.moe",
      "content": "不会真的有人在电脑上跑崩崩崩吧",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2022-09-22T19:29:43.082Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:105.0) Gecko/20100101 Firefox/105.0",
      "replyTo": 167
    },
    {
      "id": 604,
      "postSlot": "about-me",
      "nickname": "swwind",
      "homepage": "https://sww.moe",
      "content": "由于最近博客上面的黒链爬虫越来越多了，所以加了一个验证码，想必各位的微积分知识应该还没有还给[高数老师](https://www.youtube.com/watch?v=KoERyA8Pm7Q)吧。\n",
      "email": "swwind233@gmail.com",
      "github": "",
      "qq": "",
      "createdAt": "2022-10-31T21:32:45.084Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:106.0) Gecko/20100101 Firefox/106.0",
      "replyTo": null
    },
    {
      "id": 605,
      "postSlot": "x25519",
      "nickname": "rantrsim",
      "homepage": "",
      "content": " 您好～我是腾讯云开发者社区运营，关注了您分享的技术文章，觉得内容很棒，我们诚挚邀请您加入腾讯云自媒体分享计划。完整福利和申请地址请见：https://cloud.tencent.com/developer/support-plan\n作者申请此计划后将作者的文章进行搬迁同步到社区的专栏下，你只需要简单填写一下表单申请即可，我们会给作者提供包括流量、云服务器等，另外还有些周边礼物。\n",
      "email": "",
      "github": "",
      "qq": "",
      "createdAt": "2023-01-06T10:55:58.100Z",
      "notify": false,
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36",
      "replyTo": null
    }
  ],
  "files": [
    {
      "filename": "chrome-https.png",
      "mimetype": "image/png",
      "size": 73139,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "raraa.jpg",
      "mimetype": "image/jpeg",
      "size": 67335,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "html5.jpg",
      "mimetype": "image/jpeg",
      "size": 66265,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "shiina-mashiro.jpg",
      "mimetype": "image/jpeg",
      "size": 45446,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "yukinoshita-yukino.jpg",
      "mimetype": "image/jpeg",
      "size": 35843,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "euler.jpg",
      "mimetype": "image/jpeg",
      "size": 22947,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "momomo.gif",
      "mimetype": "image/gif",
      "size": 15173,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "dirichlet.jpg",
      "mimetype": "image/jpeg",
      "size": 8731,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "fermat.jpg",
      "mimetype": "image/jpeg",
      "size": 17707,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "mengbi.jpg",
      "mimetype": "image/jpeg",
      "size": 6354,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "huaji.png",
      "mimetype": "image/png",
      "size": 4911,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "face1.jpg",
      "mimetype": "image/jpeg",
      "size": 1293,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "face2.jpg",
      "mimetype": "image/jpeg",
      "size": 649,
      "uploadAt": "2022-04-13T21:41:58.255Z"
    },
    {
      "filename": "1596090744488-2020-07-30_14-31.png",
      "mimetype": "image/png",
      "size": 1013415,
      "uploadAt": "2022-04-13T21:44:27.223Z"
    },
    {
      "filename": "1595234345032-81880838_p0.jpg",
      "mimetype": "image/jpeg",
      "size": 853147,
      "uploadAt": "2022-04-13T21:44:27.223Z"
    },
    {
      "filename": "rara.png",
      "mimetype": "image/png",
      "size": 330707,
      "uploadAt": "2022-04-13T21:44:27.223Z"
    },
    {
      "filename": "1595684941583-result.jpg",
      "mimetype": "image/jpeg",
      "size": 222328,
      "uploadAt": "2022-04-13T21:44:27.223Z"
    },
    {
      "filename": "photo_2021-05-10_22-33-00.jpg",
      "mimetype": "image/jpeg",
      "size": 170190,
      "uploadAt": "2022-04-13T21:44:27.223Z"
    },
    {
      "filename": "photo_2021-05-10_22-55-08.jpg",
      "mimetype": "image/jpeg",
      "size": 127493,
      "uploadAt": "2022-04-13T21:44:27.223Z"
    },
    {
      "filename": "1595394379230-2020-07-22_12-59.jpg",
      "mimetype": "image/jpeg",
      "size": 80578,
      "uploadAt": "2022-04-13T21:44:27.223Z"
    },
    {
      "filename": "sticker.webp",
      "mimetype": "image/webp",
      "size": 27208,
      "uploadAt": "2022-06-06T23:20:08.940Z"
    },
    {
      "filename": "photo_2022-11-16_10-20-06.jpg",
      "mimetype": "image/jpeg",
      "size": 171633,
      "uploadAt": "2022-12-20T15:38:53.821Z"
    }
  ]
}
